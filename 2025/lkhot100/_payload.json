[{"data":1,"prerenderedAt":9195},["ShallowReactive",2],{"/2025/lkhot100":3,"surround-/2025/lkhot100":9184},{"id":4,"title":5,"body":6,"categories":9163,"date":9165,"description":9166,"draft":9167,"extension":9168,"image":9169,"meta":9170,"navigation":9171,"path":9172,"readingTime":9173,"recommend":9169,"references":9169,"seo":9178,"sitemap":9179,"stem":9180,"tags":9181,"type":9169,"updated":9165,"url":9169,"__hash__":9183},"content/posts/2025/lkhot100.md","力扣Hot100",{"type":7,"value":8,"toc":9100},"minimark",[9,13,23,32,48,58,65,80,87,102,108,117,123,152,172,179,191,202,208,216,290,301,313,323,332,462,468,471,478,485,496,499,505,512,518,521,531,538,544,551,902,928,934,941,948,1453,1777,2112,2450,2624,3058,3064,3069,3267,3766,3769,4589,4592,5071,5077,5080,5087,5093,5100,5106,5109,5117,5126,5132,5152,5165,5190,5200,5222,5227,5240,5262,5268,5275,5281,5286,5334,5340,5380,5390,5406,5417,5427,5430,5441,5447,5454,5459,5465,5471,5474,5481,5487,5494,5508,5518,5524,5533,5538,5559,5564,5570,5577,5583,5592,5600,5603,5609,5616,5622,5629,5921,6058,6196,6202,6205,6213,6245,6250,6273,6287,6292,6312,6315,6321,6328,6331,6337,6344,6467,6813,6820,6826,6829,6832,6835,6838,6844,6852,6855,6861,6867,6996,7127,7133,7145,7155,7168,7177,7183,7190,7200,7206,7209,7216,7222,7229,7235,7242,7245,7248,7254,7257,7263,7271,7277,7284,7287,7294,7300,7308,7313,7336,7342,7345,7352,7358,7365,7639,7645,7653,7663,7674,7684,8333,8864,8870,8872,8879,8885,8892,8898,8905,8911,8918,8993,9043,9046,9087,9093],[10,11,12],"h2",{"id":12},"哈希",[14,15,17],"h3",{"id":16},"两数之和",[18,19,16],"a",{"href":20,"rel":21},"https://leetcode.cn/problems/two-sum/description/?envType=study-plan-v2&envId=top-100-liked",[22],"nofollow",[24,25,26,27,31],"p",{},"有点困扰可能就是数据的返回形式，在 C++11 之后，C++支持列表初始化(list initialization)，也叫 ",[28,29,30],"strong",{},"统一初始化","。",[24,33,34,35,39,40,43,44,47],{},"C++ 会自动根据函数的返回类型（这里是 ",[36,37,38],"code",{"code":38},"vector\u003Cint>","）把 ",[36,41,42],{"code":42},"{i, j}"," 当作构造这个 ",[36,45,46],{"code":46},"vector"," 的初始化列表。",[49,50,56],"pre",{"className":51,"code":53,"language":54,"meta":55},[52],"language-c++","class Solution {\npublic:\n    vector\u003Cint> twoSum(vector\u003Cint>& nums, int target) {\n        for(int i = 0; i \u003C nums.size();i++)\n        {\n            for(int j = i + 1; j \u003C nums.size();j++)\n            {\n                if(nums[i] + nums[j] == target)\n                return {i,j};\n            }\n        }\n        return {};\n    }\n};\n","c++","",[36,57,53],{"__ignoreMap":55},[14,59,61],{"id":60},"字母异位词分组",[18,62,60],{"href":63,"rel":64},"https://leetcode.cn/problems/group-anagrams/?envType=study-plan-v2&envId=top-100-liked",[22],[24,66,67,68,71,72,75,76,79],{},"思路就是将",[28,69,70],{},"排序后的字符串","作为",[28,73,74],{},"分类依据","，因为异位词的话，排序得到的结果是",[28,77,78],{},"一样","的。",[24,81,82,83,86],{},"通过创建unordered_map，即",[28,84,85],{},"键值对（key-value)"," 的集合。",[24,88,89,95,96],{},[28,90,91,94],{},[36,92,93],{"code":93},"map"," = 有序(按key自动从小到大排序) + 红黑树","，",[28,97,98,101],{},[36,99,100],{"code":100},"unordered_map"," = 无序 + 哈希表 + 快",[24,103,104,107],{},[28,105,106],{},"key 唯一","，每个 key 对应一个 value。",[24,109,110,113,114,31],{},[28,111,112],{},"查找、插入、删除","的平均时间复杂度都是 ",[28,115,116],{},"O(1)",[24,118,119,122],{},[36,120,121],{"code":121},"unordered_map\u003Cstring, vector\u003Cstring>> mp"," 具体含义:",[124,125,126,133,143],"ul",{},[127,128,129,132],"li",{},[36,130,131],{"code":131},"mp"," 是一个哈希表。",[127,134,135,138,139,142],{},[28,136,137],{},"key 类型","是 ",[36,140,141],{"code":141},"string","，也就是说你可以通过字符串去查找。",[127,144,145,138,148,151],{},[28,146,147],{},"value 类型",[36,149,150],{"code":150},"vector\u003Cstring>","，也就是 key 对应的是一个字符串数组",[24,153,154,155,158,159,161,162,161,165,168,169],{},"然后就是",[36,156,157],{"code":157},"emplace_back","，它是",[36,160,46],{"code":46},"、",[36,163,164],{"code":164},"deque",[36,166,167],{"code":167},"list","等容器的方法，用来在",[28,170,171],{},"容器末尾直接构造元素",[24,173,174,175,178],{},"它和",[36,176,177],{"code":177},"push_back()","的区别在于:",[24,180,181,186,187,190],{},[28,182,183],{},[36,184,185],{"code":185},"push_back","：把一个已存在的对象 ",[28,188,189],{},"拷贝或移动"," 到容器末尾",[24,192,193,197,198,201],{},[28,194,195],{},[36,196,157],{"code":157},"：",[28,199,200],{},"直接构造","对象在容器末尾，无需临时对象",[49,203,206],{"className":204,"code":205,"language":54,"meta":55},[52],"class Solution {\npublic:\n    vector\u003Cvector\u003Cstring>> groupAnagrams(vector\u003Cstring>& strs) {\n        unordered_map\u003Cstring,vector\u003Cstring>> mp;    \n        for(auto i : strs)\n        {\n            string key = i;\n            sort(key.begin(),key.end());\n            mp[key].emplace_back(i);\n        }\n        vector\u003Cvector\u003Cstring>> ans;\n        for(auto it = mp.begin(); it != mp.end();it++)\n        {\n            ans.emplace_back(it->second);\n        }\n        return ans;\n    }\n};\n",[36,207,205],{"__ignoreMap":55},[14,209,211],{"id":210},"最长连续序列set",[18,212,215],{"href":213,"rel":214},"https://leetcode.cn/problems/longest-consecutive-sequence/",[22],"最长连续序列(set)",[24,217,218,219,289],{},"很容易想到这道题就是排序，但是题目要求是时间复杂度为",[220,221,224,258],"span",{"className":222},[223],"katex",[220,225,228],{"className":226},[227],"katex-mathml",[229,230,232],"math",{"xmlns":231},"http://www.w3.org/1998/Math/MathML",[233,234,235,253],"semantics",{},[236,237,238,242,247,250],"mrow",{},[239,240,241],"mi",{},"O",[243,244,246],"mo",{"stretchy":245},"false","(",[239,248,249],{},"n",[243,251,252],{"stretchy":245},")",[254,255,257],"annotation",{"encoding":256},"application/x-tex","O(n)",[220,259,263],{"className":260,"ariaHidden":262},[261],"katex-html","true",[220,264,267,272,278,282,285],{"className":265},[266],"base",[220,268],{"className":269,"style":271},[270],"strut","height:1em;vertical-align:-0.25em;",[220,273,241],{"className":274,"style":277},[275,276],"mord","mathnormal","margin-right:0.02778em;",[220,279,246],{"className":280},[281],"mopen",[220,283,249],{"className":284},[275,276],[220,286,252],{"className":287},[288],"mclose","的时间复杂度。",[24,291,292,293,296,297,300],{},"用到了set结构。set是自动排序(自动升序)。但是用到了一个",[28,294,295],{},"count","函数来模拟排序，因此用",[36,298,299],{"code":299},"unordered_set","，其不会自动排序，但是查找更快。",[24,302,303,308,309,312],{},[28,304,305],{},[36,306,307],{"code":307},"set","：有序、",[28,310,311],{},"不重复","，适合需要排序的场景。",[24,314,315,319,320,322],{},[28,316,317],{},[36,318,299],{"code":299},"：无序、",[28,321,311],{},"，查找速度更快，适合只关心存在性而不关心顺序的场景。",[24,324,325,327,328,331],{},[36,326,307],{"code":307},"的",[28,329,330],{},"常用函数","如下:",[333,334,335,348],"table",{},[336,337,338],"thead",{},[339,340,341,345],"tr",{},[342,343,344],"th",{},"函数",[342,346,347],{},"作用",[349,350,351,362,372,382,392,402,412,422,432,442,452],"tbody",{},[339,352,353,359],{},[354,355,356],"td",{},[36,357,358],{"code":358},"insert(x)",[354,360,361],{},"插入元素",[339,363,364,369],{},[354,365,366],{},[36,367,368],{"code":368},"erase(x)",[354,370,371],{},"删除元素（值/迭代器）",[339,373,374,379],{},[354,375,376],{},[36,377,378],{"code":378},"find(x)",[354,380,381],{},"查找元素，返回迭代器",[339,383,384,389],{},[354,385,386],{},[36,387,388],{"code":388},"count(x)",[354,390,391],{},"判断元素是否存在（返回 0 或 1）",[339,393,394,399],{},[354,395,396],{},[36,397,398],{"code":398},"begin() / end()",[354,400,401],{},"迭代器遍历（升序）",[339,403,404,409],{},[354,405,406],{},[36,407,408],{"code":408},"rbegin() / rend()",[354,410,411],{},"迭代器遍历（降序）",[339,413,414,419],{},[354,415,416],{},[36,417,418],{"code":418},"size()",[354,420,421],{},"集合大小",[339,423,424,429],{},[354,425,426],{},[36,427,428],{"code":428},"empty()",[354,430,431],{},"是否为空",[339,433,434,439],{},[354,435,436],{},[36,437,438],{"code":438},"clear()",[354,440,441],{},"清空集合",[339,443,444,449],{},[354,445,446],{},[36,447,448],{"code":448},"lower_bound(x)",[354,450,451],{},"返回 ≥ x 的第一个迭代器",[339,453,454,459],{},[354,455,456],{},[36,457,458],{"code":458},"upper_bound(x)",[354,460,461],{},"返回 > x 的第一个迭代器",[49,463,466],{"className":464,"code":465,"language":54,"meta":55},[52],"class Solution {\npublic:\n    int longestConsecutive(vector\u003Cint>& nums) {\n        unordered_set\u003Cint> sets;\n        for(auto i : nums) sets.insert(i);\n\n        int ans = 0;\n        for(auto i : sets)\n        {\n            if(!sets.count(i-1))//是连续序列的起点\n            {\n                int curNum = i;\n                int curAns = 1;\n                while(sets.count(curNum + 1))//查找后面的元素\n                {\n                    curNum ++;\n                    curAns ++;\n                }\n                ans = max(ans,curAns);\n            }\n        }\n        return ans;\n    }\n};\n",[36,467,465],{"__ignoreMap":55},[10,469,470],{"id":470},"双指针",[14,472,474],{"id":473},"移动零",[18,475,473],{"href":476,"rel":477},"https://leetcode.cn/problems/move-zeroes/",[22],[24,479,480,481,484],{},"题目要求，必须在",[28,482,483],{},"不复制数组","的情况下原地对数组进行操作",[24,486,487,488,491,492,495],{},"思路是这样，",[28,489,490],{},"右指针","每次",[28,493,494],{},"不是0","就和左指针所指元素交换，每次交换后两指针++，不然只有右指针++",[24,497,498],{},"因为要把0一到数组的最后，因此要移动的数应该是右指针不为0",[49,500,503],{"className":501,"code":502,"language":54,"meta":55},[52],"class Solution {\npublic:\n    void moveZeroes(vector\u003Cint>& nums) {\n        int left = 0,right = 0;\n        int n = nums.size();\n        while(right \u003C n)\n        {\n            if(nums[right] )\n            {\n                swap(nums[left],nums[right]);\n                left++;\n            }\n            right++;\n        }\n    }\n};\n",[36,504,502],{"__ignoreMap":55},[14,506,508],{"id":507},"盛最多水的容器",[18,509,507],{"href":510,"rel":511},"https://leetcode.cn/problems/container-with-most-water/",[22],[49,513,516],{"className":514,"code":515,"language":54,"meta":55},[52],"[1, 8, 6, 2, 5, 4, 8, 3, 7]\n ^                       ^\n",[36,517,515],{"__ignoreMap":55},[24,519,520],{},"在初始时，左右指针分别指向数组的左右两端，它们可以容纳的水量为 min(1,7)∗8=8。",[24,522,523,524,527,528],{},"此时我们需要移动一个指针。移动哪一个呢？直觉告诉我们，应该移动对应数字较小的那个指针（即此时的左指针）。这是因为，由于容纳的水量是由两个指针指向的数字中",[28,525,526],{},"较小值","∗",[28,529,530],{},"指针之间的距离",[24,532,533,534,537],{},"如果我们移动数字较大的那个指针，那么前者「两个指针指向的数字中较小值」不会增加，后者「指针之间的距离」会减小，那么这个乘积会减小。因此，我们移动数字较大的那个指针是不合理的。因此，我们移动数字",[28,535,536],{},"较小","的那个指针。",[49,539,542],{"className":540,"code":541,"language":54,"meta":55},[52],"class Solution {\npublic:\n    int maxArea(vector\u003Cint>& height) {\n        int l = 0,r = height.size() - 1;\n        int ans = 0;\n        while(l \u003C r){\n            int area = min(height[l],height[r]) * (r - l);\n            ans = max(ans,area);\n            if(height[l] \u003C height[r]) l++;\n            else r--;\n        }\n        return ans;\n    }\n};\n",[36,543,541],{"__ignoreMap":55},[14,545,547],{"id":546},"三数之和",[18,548,546],{"href":549,"rel":550},"https://leetcode.cn/problems/3sum/",[22],[24,552,553,554,625,626,705,706,770,771,161,836,901],{},"我们枚举的三元组",[220,555,557,586],{"className":556},[223],[220,558,560],{"className":559},[227],[229,561,562],{"xmlns":231},[233,563,564,583],{},[236,565,566,568,570,573,576,578,581],{},[243,567,246],{"stretchy":245},[239,569,18],{},[243,571,572],{"separator":262},",",[239,574,575],{},"b",[243,577,572],{"separator":262},[239,579,580],{},"c",[243,582,252],{"stretchy":245},[254,584,585],{"encoding":256},"(a,b,c) ",[220,587,589],{"className":588,"ariaHidden":262},[261],[220,590,592,595,598,601,605,610,613,616,619,622],{"className":591},[266],[220,593],{"className":594,"style":271},[270],[220,596,246],{"className":597},[281],[220,599,18],{"className":600},[275,276],[220,602,572],{"className":603},[604],"mpunct",[220,606],{"className":607,"style":609},[608],"mspace","margin-right:0.1667em;",[220,611,575],{"className":612},[275,276],[220,614,572],{"className":615},[604],[220,617],{"className":618,"style":609},[608],[220,620,580],{"className":621},[275,276],[220,623,252],{"className":624},[288]," 满足 ",[220,627,629,652],{"className":628},[223],[220,630,632],{"className":631},[227],[229,633,634],{"xmlns":231},[233,635,636,649],{},[236,637,638,640,643,645,647],{},[239,639,18],{},[243,641,642],{},"≤",[239,644,575],{},[243,646,642],{},[239,648,580],{},[254,650,651],{"encoding":256},"a≤b≤c",[220,653,655,676,695],{"className":654,"ariaHidden":262},[261],[220,656,658,662,665,669,673],{"className":657},[266],[220,659],{"className":660,"style":661},[270],"height:0.7719em;vertical-align:-0.136em;",[220,663,18],{"className":664},[275,276],[220,666],{"className":667,"style":668},[608],"margin-right:0.2778em;",[220,670,642],{"className":671},[672],"mrel",[220,674],{"className":675,"style":668},[608],[220,677,679,683,686,689,692],{"className":678},[266],[220,680],{"className":681,"style":682},[270],"height:0.8304em;vertical-align:-0.136em;",[220,684,575],{"className":685},[275,276],[220,687],{"className":688,"style":668},[608],[220,690,642],{"className":691},[672],[220,693],{"className":694,"style":668},[608],[220,696,698,702],{"className":697},[266],[220,699],{"className":700,"style":701},[270],"height:0.4306em;",[220,703,580],{"className":704},[275,276],"，保证了只有",[220,707,709,734],{"className":708},[223],[220,710,712],{"className":711},[227],[229,713,714],{"xmlns":231},[233,715,716,732],{},[236,717,718,720,722,724,726,728,730],{},[243,719,246],{"stretchy":245},[239,721,18],{},[243,723,572],{"separator":262},[239,725,575],{},[243,727,572],{"separator":262},[239,729,580],{},[243,731,252],{"stretchy":245},[254,733,585],{"encoding":256},[220,735,737],{"className":736,"ariaHidden":262},[261],[220,738,740,743,746,749,752,755,758,761,764,767],{"className":739},[266],[220,741],{"className":742,"style":271},[270],[220,744,246],{"className":745},[281],[220,747,18],{"className":748},[275,276],[220,750,572],{"className":751},[604],[220,753],{"className":754,"style":609},[608],[220,756,575],{"className":757},[275,276],[220,759,572],{"className":760},[604],[220,762],{"className":763,"style":609},[608],[220,765,580],{"className":766},[275,276],[220,768,252],{"className":769},[288],"  这个顺序会被枚举到，而 ",[220,772,774,800],{"className":773},[223],[220,775,777],{"className":776},[227],[229,778,779],{"xmlns":231},[233,780,781,797],{},[236,782,783,785,787,789,791,793,795],{},[243,784,246],{"stretchy":245},[239,786,575],{},[243,788,572],{"separator":262},[239,790,18],{},[243,792,572],{"separator":262},[239,794,580],{},[243,796,252],{"stretchy":245},[254,798,799],{"encoding":256},"(b,a,c)",[220,801,803],{"className":802,"ariaHidden":262},[261],[220,804,806,809,812,815,818,821,824,827,830,833],{"className":805},[266],[220,807],{"className":808,"style":271},[270],[220,810,246],{"className":811},[281],[220,813,575],{"className":814},[275,276],[220,816,572],{"className":817},[604],[220,819],{"className":820,"style":609},[608],[220,822,18],{"className":823},[275,276],[220,825,572],{"className":826},[604],[220,828],{"className":829,"style":609},[608],[220,831,580],{"className":832},[275,276],[220,834,252],{"className":835},[288],[220,837,839,865],{"className":838},[223],[220,840,842],{"className":841},[227],[229,843,844],{"xmlns":231},[233,845,846,862],{},[236,847,848,850,852,854,856,858,860],{},[243,849,246],{"stretchy":245},[239,851,580],{},[243,853,572],{"separator":262},[239,855,575],{},[243,857,572],{"separator":262},[239,859,18],{},[243,861,252],{"stretchy":245},[254,863,864],{"encoding":256},"(c,b,a)",[220,866,868],{"className":867,"ariaHidden":262},[261],[220,869,871,874,877,880,883,886,889,892,895,898],{"className":870},[266],[220,872],{"className":873,"style":271},[270],[220,875,246],{"className":876},[281],[220,878,580],{"className":879},[275,276],[220,881,572],{"className":882},[604],[220,884],{"className":885,"style":609},[608],[220,887,575],{"className":888},[275,276],[220,890,572],{"className":891},[604],[220,893],{"className":894,"style":609},[608],[220,896,18],{"className":897},[275,276],[220,899,252],{"className":900},[288]," 等等这些不会，这样就减少了重复。",[24,903,904,905,908,909,927],{},"先对数组进行排序，方便去重，并使用双指针。固定一个数 ",[36,906,907],{"code":907},"nums[i]","，问题就变成：\n",[28,910,911,912,915,916,919,920,923,924,31],{},"在 ",[36,913,914],{"code":914},"i"," 后面的数组里，找两个数 ",[36,917,918],{"code":918},"nums[j]"," 和 ",[36,921,922],{"code":922},"nums[k]","，使得 ",[36,925,926],{"code":926},"nums[j] + nums[k] = -nums[i]","\n注意去重，避免结果重复",[49,929,932],{"className":930,"code":931,"language":54,"meta":55},[52],"class Solution {\npublic:\n    vector\u003Cvector\u003Cint>> threeSum(vector\u003Cint>& nums) {\n        int n = nums.size();\n        sort(nums.begin(),nums.end());\n        vector\u003Cvector\u003Cint>> ans;\n\n        //枚举a\n        for(int i = 0; i \u003C n; i ++)\n        {\n            //不是第一个可选元素时才跳过，因为第一个可能构成合法组合\n            if(i > 0 && nums[i] == nums[i-1]) continue;\n            int k = n - 1;\n            int target = -nums[i];\n            //枚举b\n            for(int j = i + 1; j \u003C n;j++){\n                if(j > i + 1 && nums[j] == nums[j-1]) continue;\n                while(j \u003C k && nums[j] + nums[k] > target) k--;\n\n                if(j == k) break;//指针相遇，随着 b 后续的增加\n                // 就不会有满足 a+b+c=0 并且 b\u003Cc 的 c 了，可以退出循环\n                if(nums[j] + nums[k] == target)\n                    ans.push_back({nums[i],nums[j],nums[k]});\n            }\n        }\n        return ans;\n    }\n};\n",[36,933,931],{"__ignoreMap":55},[14,935,937],{"id":936},"接雨水",[18,938,936],{"href":939,"rel":940},"https://leetcode.cn/problems/trapping-rain-water/",[22],[24,942,943,944,947],{},"这道题用",[28,945,946],{},"动态规划","做比较好理解",[24,949,950,951,919,1018,1083,1084,95,1162,1235,1236,1265,1266,1320,1321,1397,1398,1452],{},"创建两个长度为 n 的数组 ",[220,952,954,986],{"className":953},[223],[220,955,957],{"className":956},[227],[229,958,959],{"xmlns":231},[233,960,961,983],{},[236,962,963,966,969,972,975,978,980],{},[239,964,965],{},"l",[239,967,968],{},"e",[239,970,971],{},"f",[239,973,974],{},"t",[239,976,977],{},"M",[239,979,18],{},[239,981,982],{},"x",[254,984,985],{"encoding":256},"leftMax",[220,987,989],{"className":988,"ariaHidden":262},[261],[220,990,992,996,1000,1003,1007,1012,1015],{"className":991},[266],[220,993],{"className":994,"style":995},[270],"height:0.8889em;vertical-align:-0.1944em;",[220,997,965],{"className":998,"style":999},[275,276],"margin-right:0.01968em;",[220,1001,968],{"className":1002},[275,276],[220,1004,971],{"className":1005,"style":1006},[275,276],"margin-right:0.10764em;",[220,1008,1011],{"className":1009,"style":1010},[275,276],"margin-right:0.10903em;","tM",[220,1013,18],{"className":1014},[275,276],[220,1016,982],{"className":1017},[275,276],[220,1019,1021,1052],{"className":1020},[223],[220,1022,1024],{"className":1023},[227],[229,1025,1026],{"xmlns":231},[233,1027,1028,1049],{},[236,1029,1030,1033,1035,1038,1041,1043,1045,1047],{},[239,1031,1032],{},"r",[239,1034,914],{},[239,1036,1037],{},"g",[239,1039,1040],{},"h",[239,1042,974],{},[239,1044,977],{},[239,1046,18],{},[239,1048,982],{},[254,1050,1051],{"encoding":256},"rightMax",[220,1053,1055],{"className":1054,"ariaHidden":262},[261],[220,1056,1058,1061,1064,1067,1071,1074,1077,1080],{"className":1057},[266],[220,1059],{"className":1060,"style":995},[270],[220,1062,1032],{"className":1063,"style":277},[275,276],[220,1065,914],{"className":1066},[275,276],[220,1068,1037],{"className":1069,"style":1070},[275,276],"margin-right:0.03588em;",[220,1072,1040],{"className":1073},[275,276],[220,1075,1011],{"className":1076,"style":1010},[275,276],[220,1078,18],{"className":1079},[275,276],[220,1081,982],{"className":1082},[275,276],"。对于 ",[220,1085,1087,1112],{"className":1086},[223],[220,1088,1090],{"className":1089},[227],[229,1091,1092],{"xmlns":231},[233,1093,1094,1109],{},[236,1095,1096,1100,1102,1104,1107],{},[1097,1098,1099],"mn",{},"0",[243,1101,642],{},[239,1103,914],{},[243,1105,1106],{},"\u003C",[239,1108,249],{},[254,1110,1111],{"encoding":256},"0≤i\u003Cn",[220,1113,1115,1134,1153],{"className":1114,"ariaHidden":262},[261],[220,1116,1118,1122,1125,1128,1131],{"className":1117},[266],[220,1119],{"className":1120,"style":1121},[270],"height:0.7804em;vertical-align:-0.136em;",[220,1123,1099],{"className":1124},[275],[220,1126],{"className":1127,"style":668},[608],[220,1129,642],{"className":1130},[672],[220,1132],{"className":1133,"style":668},[608],[220,1135,1137,1141,1144,1147,1150],{"className":1136},[266],[220,1138],{"className":1139,"style":1140},[270],"height:0.6986em;vertical-align:-0.0391em;",[220,1142,914],{"className":1143},[275,276],[220,1145],{"className":1146,"style":668},[608],[220,1148,1106],{"className":1149},[672],[220,1151],{"className":1152,"style":668},[608],[220,1154,1156,1159],{"className":1155},[266],[220,1157],{"className":1158,"style":701},[270],[220,1160,249],{"className":1161},[275,276],[220,1163,1165,1199],{"className":1164},[223],[220,1166,1168],{"className":1167},[227],[229,1169,1170],{"xmlns":231},[233,1171,1172,1196],{},[236,1173,1174,1176,1178,1180,1182,1184,1186,1188,1191,1193],{},[239,1175,965],{},[239,1177,968],{},[239,1179,971],{},[239,1181,974],{},[239,1183,977],{},[239,1185,18],{},[239,1187,982],{},[243,1189,1190],{"stretchy":245},"[",[239,1192,914],{},[243,1194,1195],{"stretchy":245},"]",[254,1197,1198],{"encoding":256},"leftMax[i]",[220,1200,1202],{"className":1201,"ariaHidden":262},[261],[220,1203,1205,1208,1211,1214,1217,1220,1223,1226,1229,1232],{"className":1204},[266],[220,1206],{"className":1207,"style":271},[270],[220,1209,965],{"className":1210,"style":999},[275,276],[220,1212,968],{"className":1213},[275,276],[220,1215,971],{"className":1216,"style":1006},[275,276],[220,1218,1011],{"className":1219,"style":1010},[275,276],[220,1221,18],{"className":1222},[275,276],[220,1224,982],{"className":1225},[275,276],[220,1227,1190],{"className":1228},[281],[220,1230,914],{"className":1231},[275,276],[220,1233,1195],{"className":1234},[288]," 表示下标",[220,1237,1239,1252],{"className":1238},[223],[220,1240,1242],{"className":1241},[227],[229,1243,1244],{"xmlns":231},[233,1245,1246,1250],{},[236,1247,1248],{},[239,1249,914],{},[254,1251,914],{"encoding":256},[220,1253,1255],{"className":1254,"ariaHidden":262},[261],[220,1256,1258,1262],{"className":1257},[266],[220,1259],{"className":1260,"style":1261},[270],"height:0.6595em;",[220,1263,914],{"className":1264},[275,276]," 及其左边的位置中，",[220,1267,1269,1293],{"className":1268},[223],[220,1270,1272],{"className":1271},[227],[229,1273,1274],{"xmlns":231},[233,1275,1276,1290],{},[236,1277,1278,1280,1282,1284,1286,1288],{},[239,1279,1040],{},[239,1281,968],{},[239,1283,914],{},[239,1285,1037],{},[239,1287,1040],{},[239,1289,974],{},[254,1291,1292],{"encoding":256},"height",[220,1294,1296],{"className":1295,"ariaHidden":262},[261],[220,1297,1299,1302,1305,1308,1311,1314,1317],{"className":1298},[266],[220,1300],{"className":1301,"style":995},[270],[220,1303,1040],{"className":1304},[275,276],[220,1306,968],{"className":1307},[275,276],[220,1309,914],{"className":1310},[275,276],[220,1312,1037],{"className":1313,"style":1070},[275,276],[220,1315,1040],{"className":1316},[275,276],[220,1318,974],{"className":1319},[275,276]," 的最大高度，",[220,1322,1324,1358],{"className":1323},[223],[220,1325,1327],{"className":1326},[227],[229,1328,1329],{"xmlns":231},[233,1330,1331,1355],{},[236,1332,1333,1335,1337,1339,1341,1343,1345,1347,1349,1351,1353],{},[239,1334,1032],{},[239,1336,914],{},[239,1338,1037],{},[239,1340,1040],{},[239,1342,974],{},[239,1344,977],{},[239,1346,18],{},[239,1348,982],{},[243,1350,1190],{"stretchy":245},[239,1352,914],{},[243,1354,1195],{"stretchy":245},[254,1356,1357],{"encoding":256},"rightMax[i]",[220,1359,1361],{"className":1360,"ariaHidden":262},[261],[220,1362,1364,1367,1370,1373,1376,1379,1382,1385,1388,1391,1394],{"className":1363},[266],[220,1365],{"className":1366,"style":271},[270],[220,1368,1032],{"className":1369,"style":277},[275,276],[220,1371,914],{"className":1372},[275,276],[220,1374,1037],{"className":1375,"style":1070},[275,276],[220,1377,1040],{"className":1378},[275,276],[220,1380,1011],{"className":1381,"style":1010},[275,276],[220,1383,18],{"className":1384},[275,276],[220,1386,982],{"className":1387},[275,276],[220,1389,1190],{"className":1390},[281],[220,1392,914],{"className":1393},[275,276],[220,1395,1195],{"className":1396},[288]," 表示下标 i 及其右边的位置中，",[220,1399,1401,1425],{"className":1400},[223],[220,1402,1404],{"className":1403},[227],[229,1405,1406],{"xmlns":231},[233,1407,1408,1422],{},[236,1409,1410,1412,1414,1416,1418,1420],{},[239,1411,1040],{},[239,1413,968],{},[239,1415,914],{},[239,1417,1037],{},[239,1419,1040],{},[239,1421,974],{},[254,1423,1424],{"encoding":256},"height ",[220,1426,1428],{"className":1427,"ariaHidden":262},[261],[220,1429,1431,1434,1437,1440,1443,1446,1449],{"className":1430},[266],[220,1432],{"className":1433,"style":995},[270],[220,1435,1040],{"className":1436},[275,276],[220,1438,968],{"className":1439},[275,276],[220,1441,914],{"className":1442},[275,276],[220,1444,1037],{"className":1445,"style":1070},[275,276],[220,1447,1040],{"className":1448},[275,276],[220,1450,974],{"className":1451},[275,276],"的最大高度。",[24,1454,1455,1456,95,1590,1776],{},"显然，",[220,1457,1459,1512],{"className":1458},[223],[220,1460,1462],{"className":1461},[227],[229,1463,1464],{"xmlns":231},[233,1465,1466,1509],{},[236,1467,1468,1470,1472,1474,1476,1478,1480,1482,1484,1486,1488,1491,1493,1495,1497,1499,1501,1503,1505,1507],{},[239,1469,965],{},[239,1471,968],{},[239,1473,971],{},[239,1475,974],{},[239,1477,977],{},[239,1479,18],{},[239,1481,982],{},[243,1483,1190],{"stretchy":245},[1097,1485,1099],{},[243,1487,1195],{"stretchy":245},[243,1489,1490],{},"=",[239,1492,1040],{},[239,1494,968],{},[239,1496,914],{},[239,1498,1037],{},[239,1500,1040],{},[239,1502,974],{},[243,1504,1190],{"stretchy":245},[1097,1506,1099],{},[243,1508,1195],{"stretchy":245},[254,1510,1511],{"encoding":256},"leftMax[0]=height[0]",[220,1513,1515,1557],{"className":1514,"ariaHidden":262},[261],[220,1516,1518,1521,1524,1527,1530,1533,1536,1539,1542,1545,1548,1551,1554],{"className":1517},[266],[220,1519],{"className":1520,"style":271},[270],[220,1522,965],{"className":1523,"style":999},[275,276],[220,1525,968],{"className":1526},[275,276],[220,1528,971],{"className":1529,"style":1006},[275,276],[220,1531,1011],{"className":1532,"style":1010},[275,276],[220,1534,18],{"className":1535},[275,276],[220,1537,982],{"className":1538},[275,276],[220,1540,1190],{"className":1541},[281],[220,1543,1099],{"className":1544},[275],[220,1546,1195],{"className":1547},[288],[220,1549],{"className":1550,"style":668},[608],[220,1552,1490],{"className":1553},[672],[220,1555],{"className":1556,"style":668},[608],[220,1558,1560,1563,1566,1569,1572,1575,1578,1581,1584,1587],{"className":1559},[266],[220,1561],{"className":1562,"style":271},[270],[220,1564,1040],{"className":1565},[275,276],[220,1567,968],{"className":1568},[275,276],[220,1570,914],{"className":1571},[275,276],[220,1573,1037],{"className":1574,"style":1070},[275,276],[220,1576,1040],{"className":1577},[275,276],[220,1579,974],{"className":1580},[275,276],[220,1582,1190],{"className":1583},[281],[220,1585,1099],{"className":1586},[275],[220,1588,1195],{"className":1589},[288],[220,1591,1593,1657],{"className":1592},[223],[220,1594,1596],{"className":1595},[227],[229,1597,1598],{"xmlns":231},[233,1599,1600,1654],{},[236,1601,1602,1604,1606,1608,1610,1612,1614,1616,1618,1620,1622,1625,1628,1630,1632,1634,1636,1638,1640,1642,1644,1646,1648,1650,1652],{},[239,1603,1032],{},[239,1605,914],{},[239,1607,1037],{},[239,1609,1040],{},[239,1611,974],{},[239,1613,977],{},[239,1615,18],{},[239,1617,982],{},[243,1619,1190],{"stretchy":245},[239,1621,249],{},[243,1623,1624],{},"−",[1097,1626,1627],{},"1",[243,1629,1195],{"stretchy":245},[243,1631,1490],{},[239,1633,1040],{},[239,1635,968],{},[239,1637,914],{},[239,1639,1037],{},[239,1641,1040],{},[239,1643,974],{},[243,1645,1190],{"stretchy":245},[239,1647,249],{},[243,1649,1624],{},[1097,1651,1627],{},[243,1653,1195],{"stretchy":245},[254,1655,1656],{"encoding":256},"rightMax[n−1]=height[n−1]",[220,1658,1660,1704,1725,1764],{"className":1659,"ariaHidden":262},[261],[220,1661,1663,1666,1669,1672,1675,1678,1681,1684,1687,1690,1693,1697,1701],{"className":1662},[266],[220,1664],{"className":1665,"style":271},[270],[220,1667,1032],{"className":1668,"style":277},[275,276],[220,1670,914],{"className":1671},[275,276],[220,1673,1037],{"className":1674,"style":1070},[275,276],[220,1676,1040],{"className":1677},[275,276],[220,1679,1011],{"className":1680,"style":1010},[275,276],[220,1682,18],{"className":1683},[275,276],[220,1685,982],{"className":1686},[275,276],[220,1688,1190],{"className":1689},[281],[220,1691,249],{"className":1692},[275,276],[220,1694],{"className":1695,"style":1696},[608],"margin-right:0.2222em;",[220,1698,1624],{"className":1699},[1700],"mbin",[220,1702],{"className":1703,"style":1696},[608],[220,1705,1707,1710,1713,1716,1719,1722],{"className":1706},[266],[220,1708],{"className":1709,"style":271},[270],[220,1711,1627],{"className":1712},[275],[220,1714,1195],{"className":1715},[288],[220,1717],{"className":1718,"style":668},[608],[220,1720,1490],{"className":1721},[672],[220,1723],{"className":1724,"style":668},[608],[220,1726,1728,1731,1734,1737,1740,1743,1746,1749,1752,1755,1758,1761],{"className":1727},[266],[220,1729],{"className":1730,"style":271},[270],[220,1732,1040],{"className":1733},[275,276],[220,1735,968],{"className":1736},[275,276],[220,1738,914],{"className":1739},[275,276],[220,1741,1037],{"className":1742,"style":1070},[275,276],[220,1744,1040],{"className":1745},[275,276],[220,1747,974],{"className":1748},[275,276],[220,1750,1190],{"className":1751},[281],[220,1753,249],{"className":1754},[275,276],[220,1756],{"className":1757,"style":1696},[608],[220,1759,1624],{"className":1760},[1700],[220,1762],{"className":1763,"style":1696},[608],[220,1765,1767,1770,1773],{"className":1766},[266],[220,1768],{"className":1769,"style":271},[270],[220,1771,1627],{"className":1772},[275],[220,1774,1195],{"className":1775},[288],"。两个数组的其余元素的计算如下：",[24,1778,1779,1780,1878,1879,2111],{},"当 ",[220,1781,1783,1809],{"className":1782},[223],[220,1784,1786],{"className":1785},[227],[229,1787,1788],{"xmlns":231},[233,1789,1790,1806],{},[236,1791,1792,1794,1796,1798,1800,1802,1804],{},[1097,1793,1627],{},[243,1795,642],{},[239,1797,914],{},[243,1799,642],{},[239,1801,249],{},[243,1803,1624],{},[1097,1805,1627],{},[254,1807,1808],{"encoding":256},"1≤i≤n−1",[220,1810,1812,1830,1849,1868],{"className":1811,"ariaHidden":262},[261],[220,1813,1815,1818,1821,1824,1827],{"className":1814},[266],[220,1816],{"className":1817,"style":1121},[270],[220,1819,1627],{"className":1820},[275],[220,1822],{"className":1823,"style":668},[608],[220,1825,642],{"className":1826},[672],[220,1828],{"className":1829,"style":668},[608],[220,1831,1833,1837,1840,1843,1846],{"className":1832},[266],[220,1834],{"className":1835,"style":1836},[270],"height:0.7955em;vertical-align:-0.136em;",[220,1838,914],{"className":1839},[275,276],[220,1841],{"className":1842,"style":668},[608],[220,1844,642],{"className":1845},[672],[220,1847],{"className":1848,"style":668},[608],[220,1850,1852,1856,1859,1862,1865],{"className":1851},[266],[220,1853],{"className":1854,"style":1855},[270],"height:0.6667em;vertical-align:-0.0833em;",[220,1857,249],{"className":1858},[275,276],[220,1860],{"className":1861,"style":1696},[608],[220,1863,1624],{"className":1864},[1700],[220,1866],{"className":1867,"style":1696},[608],[220,1869,1871,1875],{"className":1870},[266],[220,1872],{"className":1873,"style":1874},[270],"height:0.6444em;",[220,1876,1627],{"className":1877},[275]," 时，",[220,1880,1882,1971],{"className":1881},[223],[220,1883,1885],{"className":1884},[227],[229,1886,1887],{"xmlns":231},[233,1888,1889,1968],{},[236,1890,1891,1893,1895,1897,1899,1901,1903,1905,1907,1909,1911,1913,1916,1918,1920,1922,1924,1926,1928,1930,1932,1934,1936,1938,1940,1942,1944,1946,1948,1950,1952,1954,1956,1958,1960,1962,1964,1966],{},[239,1892,965],{},[239,1894,968],{},[239,1896,971],{},[239,1898,974],{},[239,1900,977],{},[239,1902,18],{},[239,1904,982],{},[243,1906,1190],{"stretchy":245},[239,1908,914],{},[243,1910,1195],{"stretchy":245},[243,1912,1490],{},[239,1914,1915],{},"m",[239,1917,18],{},[239,1919,982],{},[243,1921,246],{"stretchy":245},[239,1923,965],{},[239,1925,968],{},[239,1927,971],{},[239,1929,974],{},[239,1931,977],{},[239,1933,18],{},[239,1935,982],{},[243,1937,1190],{"stretchy":245},[239,1939,914],{},[243,1941,1624],{},[1097,1943,1627],{},[243,1945,1195],{"stretchy":245},[243,1947,572],{"separator":262},[239,1949,1040],{},[239,1951,968],{},[239,1953,914],{},[239,1955,1037],{},[239,1957,1040],{},[239,1959,974],{},[243,1961,1190],{"stretchy":245},[239,1963,914],{},[243,1965,1195],{"stretchy":245},[243,1967,252],{"stretchy":245},[254,1969,1970],{"encoding":256},"leftMax[i]=max(leftMax[i−1],height[i])",[220,1972,1974,2016,2065],{"className":1973,"ariaHidden":262},[261],[220,1975,1977,1980,1983,1986,1989,1992,1995,1998,2001,2004,2007,2010,2013],{"className":1976},[266],[220,1978],{"className":1979,"style":271},[270],[220,1981,965],{"className":1982,"style":999},[275,276],[220,1984,968],{"className":1985},[275,276],[220,1987,971],{"className":1988,"style":1006},[275,276],[220,1990,1011],{"className":1991,"style":1010},[275,276],[220,1993,18],{"className":1994},[275,276],[220,1996,982],{"className":1997},[275,276],[220,1999,1190],{"className":2000},[281],[220,2002,914],{"className":2003},[275,276],[220,2005,1195],{"className":2006},[288],[220,2008],{"className":2009,"style":668},[608],[220,2011,1490],{"className":2012},[672],[220,2014],{"className":2015,"style":668},[608],[220,2017,2019,2022,2026,2029,2032,2035,2038,2041,2044,2047,2050,2053,2056,2059,2062],{"className":2018},[266],[220,2020],{"className":2021,"style":271},[270],[220,2023,2025],{"className":2024},[275,276],"ma",[220,2027,982],{"className":2028},[275,276],[220,2030,246],{"className":2031},[281],[220,2033,965],{"className":2034,"style":999},[275,276],[220,2036,968],{"className":2037},[275,276],[220,2039,971],{"className":2040,"style":1006},[275,276],[220,2042,1011],{"className":2043,"style":1010},[275,276],[220,2045,18],{"className":2046},[275,276],[220,2048,982],{"className":2049},[275,276],[220,2051,1190],{"className":2052},[281],[220,2054,914],{"className":2055},[275,276],[220,2057],{"className":2058,"style":1696},[608],[220,2060,1624],{"className":2061},[1700],[220,2063],{"className":2064,"style":1696},[608],[220,2066,2068,2071,2074,2077,2080,2083,2086,2089,2092,2095,2098,2101,2104,2107],{"className":2067},[266],[220,2069],{"className":2070,"style":271},[270],[220,2072,1627],{"className":2073},[275],[220,2075,1195],{"className":2076},[288],[220,2078,572],{"className":2079},[604],[220,2081],{"className":2082,"style":609},[608],[220,2084,1040],{"className":2085},[275,276],[220,2087,968],{"className":2088},[275,276],[220,2090,914],{"className":2091},[275,276],[220,2093,1037],{"className":2094,"style":1070},[275,276],[220,2096,1040],{"className":2097},[275,276],[220,2099,974],{"className":2100},[275,276],[220,2102,1190],{"className":2103},[281],[220,2105,914],{"className":2106},[275,276],[220,2108,2110],{"className":2109},[288],"])","；",[24,2113,1779,2114,1878,2210,31],{},[220,2115,2117,2144],{"className":2116},[223],[220,2118,2120],{"className":2119},[227],[229,2121,2122],{"xmlns":231},[233,2123,2124,2141],{},[236,2125,2126,2128,2130,2132,2134,2136,2138],{},[1097,2127,1099],{},[243,2129,642],{},[239,2131,914],{},[243,2133,642],{},[239,2135,249],{},[243,2137,1624],{},[1097,2139,2140],{},"2",[254,2142,2143],{"encoding":256},"0≤i≤n−2",[220,2145,2147,2165,2183,2201],{"className":2146,"ariaHidden":262},[261],[220,2148,2150,2153,2156,2159,2162],{"className":2149},[266],[220,2151],{"className":2152,"style":1121},[270],[220,2154,1099],{"className":2155},[275],[220,2157],{"className":2158,"style":668},[608],[220,2160,642],{"className":2161},[672],[220,2163],{"className":2164,"style":668},[608],[220,2166,2168,2171,2174,2177,2180],{"className":2167},[266],[220,2169],{"className":2170,"style":1836},[270],[220,2172,914],{"className":2173},[275,276],[220,2175],{"className":2176,"style":668},[608],[220,2178,642],{"className":2179},[672],[220,2181],{"className":2182,"style":668},[608],[220,2184,2186,2189,2192,2195,2198],{"className":2185},[266],[220,2187],{"className":2188,"style":1855},[270],[220,2190,249],{"className":2191},[275,276],[220,2193],{"className":2194,"style":1696},[608],[220,2196,1624],{"className":2197},[1700],[220,2199],{"className":2200,"style":1696},[608],[220,2202,2204,2207],{"className":2203},[266],[220,2205],{"className":2206,"style":1874},[270],[220,2208,2140],{"className":2209},[275],[220,2211,2213,2306],{"className":2212},[223],[220,2214,2216],{"className":2215},[227],[229,2217,2218],{"xmlns":231},[233,2219,2220,2303],{},[236,2221,2222,2224,2226,2228,2230,2232,2234,2236,2238,2240,2242,2244,2246,2248,2250,2252,2254,2256,2258,2260,2262,2264,2266,2268,2270,2272,2274,2277,2279,2281,2283,2285,2287,2289,2291,2293,2295,2297,2299,2301],{},[239,2223,1032],{},[239,2225,914],{},[239,2227,1037],{},[239,2229,1040],{},[239,2231,974],{},[239,2233,977],{},[239,2235,18],{},[239,2237,982],{},[243,2239,1190],{"stretchy":245},[239,2241,914],{},[243,2243,1195],{"stretchy":245},[243,2245,1490],{},[239,2247,1915],{},[239,2249,18],{},[239,2251,982],{},[243,2253,246],{"stretchy":245},[239,2255,1032],{},[239,2257,914],{},[239,2259,1037],{},[239,2261,1040],{},[239,2263,974],{},[239,2265,977],{},[239,2267,18],{},[239,2269,982],{},[243,2271,1190],{"stretchy":245},[239,2273,914],{},[243,2275,2276],{},"+",[1097,2278,1627],{},[243,2280,1195],{"stretchy":245},[243,2282,572],{"separator":262},[239,2284,1040],{},[239,2286,968],{},[239,2288,914],{},[239,2290,1037],{},[239,2292,1040],{},[239,2294,974],{},[243,2296,1190],{"stretchy":245},[239,2298,914],{},[243,2300,1195],{"stretchy":245},[243,2302,252],{"stretchy":245},[254,2304,2305],{"encoding":256},"rightMax[i]=max(rightMax[i+1],height[i])",[220,2307,2309,2354,2405],{"className":2308,"ariaHidden":262},[261],[220,2310,2312,2315,2318,2321,2324,2327,2330,2333,2336,2339,2342,2345,2348,2351],{"className":2311},[266],[220,2313],{"className":2314,"style":271},[270],[220,2316,1032],{"className":2317,"style":277},[275,276],[220,2319,914],{"className":2320},[275,276],[220,2322,1037],{"className":2323,"style":1070},[275,276],[220,2325,1040],{"className":2326},[275,276],[220,2328,1011],{"className":2329,"style":1010},[275,276],[220,2331,18],{"className":2332},[275,276],[220,2334,982],{"className":2335},[275,276],[220,2337,1190],{"className":2338},[281],[220,2340,914],{"className":2341},[275,276],[220,2343,1195],{"className":2344},[288],[220,2346],{"className":2347,"style":668},[608],[220,2349,1490],{"className":2350},[672],[220,2352],{"className":2353,"style":668},[608],[220,2355,2357,2360,2363,2366,2369,2372,2375,2378,2381,2384,2387,2390,2393,2396,2399,2402],{"className":2356},[266],[220,2358],{"className":2359,"style":271},[270],[220,2361,2025],{"className":2362},[275,276],[220,2364,982],{"className":2365},[275,276],[220,2367,246],{"className":2368},[281],[220,2370,1032],{"className":2371,"style":277},[275,276],[220,2373,914],{"className":2374},[275,276],[220,2376,1037],{"className":2377,"style":1070},[275,276],[220,2379,1040],{"className":2380},[275,276],[220,2382,1011],{"className":2383,"style":1010},[275,276],[220,2385,18],{"className":2386},[275,276],[220,2388,982],{"className":2389},[275,276],[220,2391,1190],{"className":2392},[281],[220,2394,914],{"className":2395},[275,276],[220,2397],{"className":2398,"style":1696},[608],[220,2400,2276],{"className":2401},[1700],[220,2403],{"className":2404,"style":1696},[608],[220,2406,2408,2411,2414,2417,2420,2423,2426,2429,2432,2435,2438,2441,2444,2447],{"className":2407},[266],[220,2409],{"className":2410,"style":271},[270],[220,2412,1627],{"className":2413},[275],[220,2415,1195],{"className":2416},[288],[220,2418,572],{"className":2419},[604],[220,2421],{"className":2422,"style":609},[608],[220,2424,1040],{"className":2425},[275,276],[220,2427,968],{"className":2428},[275,276],[220,2430,914],{"className":2431},[275,276],[220,2433,1037],{"className":2434,"style":1070},[275,276],[220,2436,1040],{"className":2437},[275,276],[220,2439,974],{"className":2440},[275,276],[220,2442,1190],{"className":2443},[281],[220,2445,914],{"className":2446},[275,276],[220,2448,2110],{"className":2449},[288],[24,2451,2452,2453,2506,2507,2562,2563,2623],{},"因此可以正向遍历数组 ",[220,2454,2456,2479],{"className":2455},[223],[220,2457,2459],{"className":2458},[227],[229,2460,2461],{"xmlns":231},[233,2462,2463,2477],{},[236,2464,2465,2467,2469,2471,2473,2475],{},[239,2466,1040],{},[239,2468,968],{},[239,2470,914],{},[239,2472,1037],{},[239,2474,1040],{},[239,2476,974],{},[254,2478,1292],{"encoding":256},[220,2480,2482],{"className":2481,"ariaHidden":262},[261],[220,2483,2485,2488,2491,2494,2497,2500,2503],{"className":2484},[266],[220,2486],{"className":2487,"style":995},[270],[220,2489,1040],{"className":2490},[275,276],[220,2492,968],{"className":2493},[275,276],[220,2495,914],{"className":2496},[275,276],[220,2498,1037],{"className":2499,"style":1070},[275,276],[220,2501,1040],{"className":2502},[275,276],[220,2504,974],{"className":2505},[275,276]," 得到数组 ",[220,2508,2510,2535],{"className":2509},[223],[220,2511,2513],{"className":2512},[227],[229,2514,2515],{"xmlns":231},[233,2516,2517,2533],{},[236,2518,2519,2521,2523,2525,2527,2529,2531],{},[239,2520,965],{},[239,2522,968],{},[239,2524,971],{},[239,2526,974],{},[239,2528,977],{},[239,2530,18],{},[239,2532,982],{},[254,2534,985],{"encoding":256},[220,2536,2538],{"className":2537,"ariaHidden":262},[261],[220,2539,2541,2544,2547,2550,2553,2556,2559],{"className":2540},[266],[220,2542],{"className":2543,"style":995},[270],[220,2545,965],{"className":2546,"style":999},[275,276],[220,2548,968],{"className":2549},[275,276],[220,2551,971],{"className":2552,"style":1006},[275,276],[220,2554,1011],{"className":2555,"style":1010},[275,276],[220,2557,18],{"className":2558},[275,276],[220,2560,982],{"className":2561},[275,276]," 的每个元素值，反向遍历数组 height 得到数组 ",[220,2564,2566,2593],{"className":2565},[223],[220,2567,2569],{"className":2568},[227],[229,2570,2571],{"xmlns":231},[233,2572,2573,2591],{},[236,2574,2575,2577,2579,2581,2583,2585,2587,2589],{},[239,2576,1032],{},[239,2578,914],{},[239,2580,1037],{},[239,2582,1040],{},[239,2584,974],{},[239,2586,977],{},[239,2588,18],{},[239,2590,982],{},[254,2592,1051],{"encoding":256},[220,2594,2596],{"className":2595,"ariaHidden":262},[261],[220,2597,2599,2602,2605,2608,2611,2614,2617,2620],{"className":2598},[266],[220,2600],{"className":2601,"style":995},[270],[220,2603,1032],{"className":2604,"style":277},[275,276],[220,2606,914],{"className":2607},[275,276],[220,2609,1037],{"className":2610,"style":1070},[275,276],[220,2612,1040],{"className":2613},[275,276],[220,2615,1011],{"className":2616,"style":1010},[275,276],[220,2618,18],{"className":2619},[275,276],[220,2621,982],{"className":2622},[275,276]," 的每个元素值。",[24,2625,2626,2627,2683,2684,2744,2745,2817,2818,2846,2847,3057],{},"在得到数组 ",[220,2628,2630,2656],{"className":2629},[223],[220,2631,2633],{"className":2632},[227],[229,2634,2635],{"xmlns":231},[233,2636,2637,2653],{},[236,2638,2639,2641,2643,2645,2647,2649,2651],{},[239,2640,965],{},[239,2642,968],{},[239,2644,971],{},[239,2646,974],{},[239,2648,977],{},[239,2650,18],{},[239,2652,982],{},[254,2654,2655],{"encoding":256},"leftMax ",[220,2657,2659],{"className":2658,"ariaHidden":262},[261],[220,2660,2662,2665,2668,2671,2674,2677,2680],{"className":2661},[266],[220,2663],{"className":2664,"style":995},[270],[220,2666,965],{"className":2667,"style":999},[275,276],[220,2669,968],{"className":2670},[275,276],[220,2672,971],{"className":2673,"style":1006},[275,276],[220,2675,1011],{"className":2676,"style":1010},[275,276],[220,2678,18],{"className":2679},[275,276],[220,2681,982],{"className":2682},[275,276],"和 ",[220,2685,2687,2714],{"className":2686},[223],[220,2688,2690],{"className":2689},[227],[229,2691,2692],{"xmlns":231},[233,2693,2694,2712],{},[236,2695,2696,2698,2700,2702,2704,2706,2708,2710],{},[239,2697,1032],{},[239,2699,914],{},[239,2701,1037],{},[239,2703,1040],{},[239,2705,974],{},[239,2707,977],{},[239,2709,18],{},[239,2711,982],{},[254,2713,1051],{"encoding":256},[220,2715,2717],{"className":2716,"ariaHidden":262},[261],[220,2718,2720,2723,2726,2729,2732,2735,2738,2741],{"className":2719},[266],[220,2721],{"className":2722,"style":995},[270],[220,2724,1032],{"className":2725,"style":277},[275,276],[220,2727,914],{"className":2728},[275,276],[220,2730,1037],{"className":2731,"style":1070},[275,276],[220,2733,1040],{"className":2734},[275,276],[220,2736,1011],{"className":2737,"style":1010},[275,276],[220,2739,18],{"className":2740},[275,276],[220,2742,982],{"className":2743},[275,276]," 的每个元素值之后，对于 ",[220,2746,2748,2769],{"className":2747},[223],[220,2749,2751],{"className":2750},[227],[229,2752,2753],{"xmlns":231},[233,2754,2755,2767],{},[236,2756,2757,2759,2761,2763,2765],{},[1097,2758,1099],{},[243,2760,642],{},[239,2762,914],{},[243,2764,1106],{},[239,2766,249],{},[254,2768,1111],{"encoding":256},[220,2770,2772,2790,2808],{"className":2771,"ariaHidden":262},[261],[220,2773,2775,2778,2781,2784,2787],{"className":2774},[266],[220,2776],{"className":2777,"style":1121},[270],[220,2779,1099],{"className":2780},[275],[220,2782],{"className":2783,"style":668},[608],[220,2785,642],{"className":2786},[672],[220,2788],{"className":2789,"style":668},[608],[220,2791,2793,2796,2799,2802,2805],{"className":2792},[266],[220,2794],{"className":2795,"style":1140},[270],[220,2797,914],{"className":2798},[275,276],[220,2800],{"className":2801,"style":668},[608],[220,2803,1106],{"className":2804},[672],[220,2806],{"className":2807,"style":668},[608],[220,2809,2811,2814],{"className":2810},[266],[220,2812],{"className":2813,"style":701},[270],[220,2815,249],{"className":2816},[275,276],"，下标",[220,2819,2821,2834],{"className":2820},[223],[220,2822,2824],{"className":2823},[227],[229,2825,2826],{"xmlns":231},[233,2827,2828,2832],{},[236,2829,2830],{},[239,2831,914],{},[254,2833,914],{"encoding":256},[220,2835,2837],{"className":2836,"ariaHidden":262},[261],[220,2838,2840,2843],{"className":2839},[266],[220,2841],{"className":2842,"style":1261},[270],[220,2844,914],{"className":2845},[275,276],"处能接的雨水量等于 ",[220,2848,2850,2936],{"className":2849},[223],[220,2851,2853],{"className":2852},[227],[229,2854,2855],{"xmlns":231},[233,2856,2857,2933],{},[236,2858,2859,2861,2863,2865,2867,2869,2871,2873,2875,2877,2879,2881,2883,2885,2887,2889,2891,2893,2895,2897,2899,2901,2903,2905,2907,2909,2911,2913,2915,2917,2919,2921,2923,2925,2927,2929,2931],{},[239,2860,1915],{},[239,2862,914],{},[239,2864,249],{},[243,2866,246],{"stretchy":245},[239,2868,965],{},[239,2870,968],{},[239,2872,971],{},[239,2874,974],{},[239,2876,977],{},[239,2878,18],{},[239,2880,982],{},[243,2882,1190],{"stretchy":245},[239,2884,914],{},[243,2886,1195],{"stretchy":245},[243,2888,572],{"separator":262},[239,2890,1032],{},[239,2892,914],{},[239,2894,1037],{},[239,2896,1040],{},[239,2898,974],{},[239,2900,977],{},[239,2902,18],{},[239,2904,982],{},[243,2906,1190],{"stretchy":245},[239,2908,914],{},[243,2910,1195],{"stretchy":245},[243,2912,252],{"stretchy":245},[243,2914,1624],{},[239,2916,1040],{},[239,2918,968],{},[239,2920,914],{},[239,2922,1037],{},[239,2924,1040],{},[239,2926,974],{},[243,2928,1190],{"stretchy":245},[239,2930,914],{},[243,2932,1195],{"stretchy":245},[254,2934,2935],{"encoding":256},"min(leftMax[i],rightMax[i])−height[i]",[220,2937,2939,3024],{"className":2938,"ariaHidden":262},[261],[220,2940,2942,2945,2949,2952,2955,2958,2961,2964,2967,2970,2973,2976,2979,2982,2985,2988,2991,2994,2997,3000,3003,3006,3009,3012,3015,3018,3021],{"className":2941},[266],[220,2943],{"className":2944,"style":271},[270],[220,2946,2948],{"className":2947},[275,276],"min",[220,2950,246],{"className":2951},[281],[220,2953,965],{"className":2954,"style":999},[275,276],[220,2956,968],{"className":2957},[275,276],[220,2959,971],{"className":2960,"style":1006},[275,276],[220,2962,1011],{"className":2963,"style":1010},[275,276],[220,2965,18],{"className":2966},[275,276],[220,2968,982],{"className":2969},[275,276],[220,2971,1190],{"className":2972},[281],[220,2974,914],{"className":2975},[275,276],[220,2977,1195],{"className":2978},[288],[220,2980,572],{"className":2981},[604],[220,2983],{"className":2984,"style":609},[608],[220,2986,1032],{"className":2987,"style":277},[275,276],[220,2989,914],{"className":2990},[275,276],[220,2992,1037],{"className":2993,"style":1070},[275,276],[220,2995,1040],{"className":2996},[275,276],[220,2998,1011],{"className":2999,"style":1010},[275,276],[220,3001,18],{"className":3002},[275,276],[220,3004,982],{"className":3005},[275,276],[220,3007,1190],{"className":3008},[281],[220,3010,914],{"className":3011},[275,276],[220,3013,2110],{"className":3014},[288],[220,3016],{"className":3017,"style":1696},[608],[220,3019,1624],{"className":3020},[1700],[220,3022],{"className":3023,"style":1696},[608],[220,3025,3027,3030,3033,3036,3039,3042,3045,3048,3051,3054],{"className":3026},[266],[220,3028],{"className":3029,"style":271},[270],[220,3031,1040],{"className":3032},[275,276],[220,3034,968],{"className":3035},[275,276],[220,3037,914],{"className":3038},[275,276],[220,3040,1037],{"className":3041,"style":1070},[275,276],[220,3043,1040],{"className":3044},[275,276],[220,3046,974],{"className":3047},[275,276],[220,3049,1190],{"className":3050},[281],[220,3052,914],{"className":3053},[275,276],[220,3055,1195],{"className":3056},[288],"。遍历每个下标位置即可得到能接的雨水总量。",[49,3059,3062],{"className":3060,"code":3061,"language":54,"meta":55},[52],"class Solution {\npublic:\n    int trap(vector\u003Cint>& height) {\n        int n = height.size();\n        if(n == 0) return 0;\n\n        vector\u003Cint> leftMax(n);\n        //leftMax[i]表示下标i及其左边的位置中，height的最大高度\n        leftMax[0] = height[0];\n        for(int i = 1; i \u003C n; i ++) leftMax[i] = max(leftMax[i-1],height[i]);\n\n        vector\u003Cint> rightMax(n);\n        rightMax[n-1] = height[n-1];\n        for(int i = n - 2; i >= 0; i --) rightMax[i] = max(rightMax[i+1],height[i]);\n\n        int ans = 0;\n        for(int i = 0; i \u003C n; i ++)\n            ans += min(leftMax[i],rightMax[i]) - height[i];\n\n        return ans;\n    }\n};\n",[36,3063,3061],{"__ignoreMap":55},[24,3065,3066,3068],{},[28,3067,470],{},"的做法",[24,3070,3071,3072,3100,3101,919,3152,3199,3200,3233,3234,3266],{},"注意到下标 ",[220,3073,3075,3088],{"className":3074},[223],[220,3076,3078],{"className":3077},[227],[229,3079,3080],{"xmlns":231},[233,3081,3082,3086],{},[236,3083,3084],{},[239,3085,914],{},[254,3087,914],{"encoding":256},[220,3089,3091],{"className":3090,"ariaHidden":262},[261],[220,3092,3094,3097],{"className":3093},[266],[220,3095],{"className":3096,"style":1261},[270],[220,3098,914],{"className":3099},[275,276]," 处能接的雨水量由 ",[220,3102,3104,3126],{"className":3103},[223],[220,3105,3107],{"className":3106},[227],[229,3108,3109],{"xmlns":231},[233,3110,3111,3123],{},[236,3112,3113,3117,3119,3121],{},[3114,3115,985],"mtext",{"mathvariant":3116},"italic",[243,3118,1190],{"stretchy":245},[239,3120,914],{},[243,3122,1195],{"stretchy":245},[254,3124,3125],{"encoding":256},"\\textit{leftMax}[i]",[220,3127,3129],{"className":3128,"ariaHidden":262},[261],[220,3130,3132,3135,3143,3146,3149],{"className":3131},[266],[220,3133],{"className":3134,"style":271},[270],[220,3136,3139],{"className":3137},[275,3138],"text",[220,3140,985],{"className":3141},[275,3142],"textit",[220,3144,1190],{"className":3145},[281],[220,3147,914],{"className":3148},[275,276],[220,3150,1195],{"className":3151},[288],[220,3153,3155,3175],{"className":3154},[223],[220,3156,3158],{"className":3157},[227],[229,3159,3160],{"xmlns":231},[233,3161,3162,3172],{},[236,3163,3164,3166,3168,3170],{},[3114,3165,1051],{"mathvariant":3116},[243,3167,1190],{"stretchy":245},[239,3169,914],{},[243,3171,1195],{"stretchy":245},[254,3173,3174],{"encoding":256},"\\textit{rightMax}[i]",[220,3176,3178],{"className":3177,"ariaHidden":262},[261],[220,3179,3181,3184,3190,3193,3196],{"className":3180},[266],[220,3182],{"className":3183,"style":271},[270],[220,3185,3187],{"className":3186},[275,3138],[220,3188,1051],{"className":3189},[275,3142],[220,3191,1190],{"className":3192},[281],[220,3194,914],{"className":3195},[275,276],[220,3197,1195],{"className":3198},[288]," 中的最小值决定。由于数组 ",[220,3201,3203,3217],{"className":3202},[223],[220,3204,3206],{"className":3205},[227],[229,3207,3208],{"xmlns":231},[233,3209,3210,3214],{},[236,3211,3212],{},[3114,3213,985],{"mathvariant":3116},[254,3215,3216],{"encoding":256},"\\textit{leftMax}",[220,3218,3220],{"className":3219,"ariaHidden":262},[261],[220,3221,3223,3227],{"className":3222},[266],[220,3224],{"className":3225,"style":3226},[270],"height:0.6944em;",[220,3228,3230],{"className":3229},[275,3138],[220,3231,985],{"className":3232},[275,3142]," 是从左往右计算，数组 ",[220,3235,3237,3251],{"className":3236},[223],[220,3238,3240],{"className":3239},[227],[229,3241,3242],{"xmlns":231},[233,3243,3244,3248],{},[236,3245,3246],{},[3114,3247,1051],{"mathvariant":3116},[254,3249,3250],{"encoding":256},"\\textit{rightMax}",[220,3252,3254],{"className":3253,"ariaHidden":262},[261],[220,3255,3257,3260],{"className":3256},[266],[220,3258],{"className":3259,"style":995},[270],[220,3261,3263],{"className":3262},[275,3138],[220,3264,1051],{"className":3265},[275,3142]," 是从右往左计算，因此可以使用双指针和两个变量代替两个数组。",[24,3268,3269,3270,919,3303,3336,3337,919,3368,3399,3400,95,3454,95,3530,95,3584,3638,3639,3670,3671,3702,3703,919,3734,3765],{},"维护两个指针 ",[220,3271,3273,3288],{"className":3272},[223],[220,3274,3276],{"className":3275},[227],[229,3277,3278],{"xmlns":231},[233,3279,3280,3285],{},[236,3281,3282],{},[3114,3283,3284],{"mathvariant":3116},"left",[254,3286,3287],{"encoding":256},"\\textit{left}",[220,3289,3291],{"className":3290,"ariaHidden":262},[261],[220,3292,3294,3297],{"className":3293},[266],[220,3295],{"className":3296,"style":3226},[270],[220,3298,3300],{"className":3299},[275,3138],[220,3301,3284],{"className":3302},[275,3142],[220,3304,3306,3321],{"className":3305},[223],[220,3307,3309],{"className":3308},[227],[229,3310,3311],{"xmlns":231},[233,3312,3313,3318],{},[236,3314,3315],{},[3114,3316,3317],{"mathvariant":3116},"right",[254,3319,3320],{"encoding":256},"\\textit{right}",[220,3322,3324],{"className":3323,"ariaHidden":262},[261],[220,3325,3327,3330],{"className":3326},[266],[220,3328],{"className":3329,"style":995},[270],[220,3331,3333],{"className":3332},[275,3138],[220,3334,3317],{"className":3335},[275,3142],"，以及两个变量 ",[220,3338,3340,3353],{"className":3339},[223],[220,3341,3343],{"className":3342},[227],[229,3344,3345],{"xmlns":231},[233,3346,3347,3351],{},[236,3348,3349],{},[3114,3350,985],{"mathvariant":3116},[254,3352,3216],{"encoding":256},[220,3354,3356],{"className":3355,"ariaHidden":262},[261],[220,3357,3359,3362],{"className":3358},[266],[220,3360],{"className":3361,"style":3226},[270],[220,3363,3365],{"className":3364},[275,3138],[220,3366,985],{"className":3367},[275,3142],[220,3369,3371,3384],{"className":3370},[223],[220,3372,3374],{"className":3373},[227],[229,3375,3376],{"xmlns":231},[233,3377,3378,3382],{},[236,3379,3380],{},[3114,3381,1051],{"mathvariant":3116},[254,3383,3250],{"encoding":256},[220,3385,3387],{"className":3386,"ariaHidden":262},[261],[220,3388,3390,3393],{"className":3389},[266],[220,3391],{"className":3392,"style":995},[270],[220,3394,3396],{"className":3395},[275,3138],[220,3397,1051],{"className":3398},[275,3142],"，初始时 ",[220,3401,3403,3421],{"className":3402},[223],[220,3404,3406],{"className":3405},[227],[229,3407,3408],{"xmlns":231},[233,3409,3410,3418],{},[236,3411,3412,3414,3416],{},[3114,3413,3284],{"mathvariant":3116},[243,3415,1490],{},[1097,3417,1099],{},[254,3419,3420],{"encoding":256},"\\textit{left} = 0",[220,3422,3424,3445],{"className":3423,"ariaHidden":262},[261],[220,3425,3427,3430,3436,3439,3442],{"className":3426},[266],[220,3428],{"className":3429,"style":3226},[270],[220,3431,3433],{"className":3432},[275,3138],[220,3434,3284],{"className":3435},[275,3142],[220,3437],{"className":3438,"style":668},[608],[220,3440,1490],{"className":3441},[672],[220,3443],{"className":3444,"style":668},[608],[220,3446,3448,3451],{"className":3447},[266],[220,3449],{"className":3450,"style":1874},[270],[220,3452,1099],{"className":3453},[275],[220,3455,3457,3479],{"className":3456},[223],[220,3458,3460],{"className":3459},[227],[229,3461,3462],{"xmlns":231},[233,3463,3464,3476],{},[236,3465,3466,3468,3470,3472,3474],{},[3114,3467,3317],{"mathvariant":3116},[243,3469,1490],{},[239,3471,249],{},[243,3473,1624],{},[1097,3475,1627],{},[254,3477,3478],{"encoding":256},"\\textit{right} = n - 1",[220,3480,3482,3503,3521],{"className":3481,"ariaHidden":262},[261],[220,3483,3485,3488,3494,3497,3500],{"className":3484},[266],[220,3486],{"className":3487,"style":995},[270],[220,3489,3491],{"className":3490},[275,3138],[220,3492,3317],{"className":3493},[275,3142],[220,3495],{"className":3496,"style":668},[608],[220,3498,1490],{"className":3499},[672],[220,3501],{"className":3502,"style":668},[608],[220,3504,3506,3509,3512,3515,3518],{"className":3505},[266],[220,3507],{"className":3508,"style":1855},[270],[220,3510,249],{"className":3511},[275,276],[220,3513],{"className":3514,"style":1696},[608],[220,3516,1624],{"className":3517},[1700],[220,3519],{"className":3520,"style":1696},[608],[220,3522,3524,3527],{"className":3523},[266],[220,3525],{"className":3526,"style":1874},[270],[220,3528,1627],{"className":3529},[275],[220,3531,3533,3551],{"className":3532},[223],[220,3534,3536],{"className":3535},[227],[229,3537,3538],{"xmlns":231},[233,3539,3540,3548],{},[236,3541,3542,3544,3546],{},[3114,3543,985],{"mathvariant":3116},[243,3545,1490],{},[1097,3547,1099],{},[254,3549,3550],{"encoding":256},"\\textit{leftMax} = 0",[220,3552,3554,3575],{"className":3553,"ariaHidden":262},[261],[220,3555,3557,3560,3566,3569,3572],{"className":3556},[266],[220,3558],{"className":3559,"style":3226},[270],[220,3561,3563],{"className":3562},[275,3138],[220,3564,985],{"className":3565},[275,3142],[220,3567],{"className":3568,"style":668},[608],[220,3570,1490],{"className":3571},[672],[220,3573],{"className":3574,"style":668},[608],[220,3576,3578,3581],{"className":3577},[266],[220,3579],{"className":3580,"style":1874},[270],[220,3582,1099],{"className":3583},[275],[220,3585,3587,3605],{"className":3586},[223],[220,3588,3590],{"className":3589},[227],[229,3591,3592],{"xmlns":231},[233,3593,3594,3602],{},[236,3595,3596,3598,3600],{},[3114,3597,1051],{"mathvariant":3116},[243,3599,1490],{},[1097,3601,1099],{},[254,3603,3604],{"encoding":256},"\\textit{rightMax} = 0",[220,3606,3608,3629],{"className":3607,"ariaHidden":262},[261],[220,3609,3611,3614,3620,3623,3626],{"className":3610},[266],[220,3612],{"className":3613,"style":995},[270],[220,3615,3617],{"className":3616},[275,3138],[220,3618,1051],{"className":3619},[275,3142],[220,3621],{"className":3622,"style":668},[608],[220,3624,1490],{"className":3625},[672],[220,3627],{"className":3628,"style":668},[608],[220,3630,3632,3635],{"className":3631},[266],[220,3633],{"className":3634,"style":1874},[270],[220,3636,1099],{"className":3637},[275],"。指针 ",[220,3640,3642,3655],{"className":3641},[223],[220,3643,3645],{"className":3644},[227],[229,3646,3647],{"xmlns":231},[233,3648,3649,3653],{},[236,3650,3651],{},[3114,3652,3284],{"mathvariant":3116},[254,3654,3287],{"encoding":256},[220,3656,3658],{"className":3657,"ariaHidden":262},[261],[220,3659,3661,3664],{"className":3660},[266],[220,3662],{"className":3663,"style":3226},[270],[220,3665,3667],{"className":3666},[275,3138],[220,3668,3284],{"className":3669},[275,3142]," 只会向右移动，指针 ",[220,3672,3674,3687],{"className":3673},[223],[220,3675,3677],{"className":3676},[227],[229,3678,3679],{"xmlns":231},[233,3680,3681,3685],{},[236,3682,3683],{},[3114,3684,3317],{"mathvariant":3116},[254,3686,3320],{"encoding":256},[220,3688,3690],{"className":3689,"ariaHidden":262},[261],[220,3691,3693,3696],{"className":3692},[266],[220,3694],{"className":3695,"style":995},[270],[220,3697,3699],{"className":3698},[275,3138],[220,3700,3317],{"className":3701},[275,3142]," 只会向左移动，在移动指针的过程中维护两个变量 ",[220,3704,3706,3719],{"className":3705},[223],[220,3707,3709],{"className":3708},[227],[229,3710,3711],{"xmlns":231},[233,3712,3713,3717],{},[236,3714,3715],{},[3114,3716,985],{"mathvariant":3116},[254,3718,3216],{"encoding":256},[220,3720,3722],{"className":3721,"ariaHidden":262},[261],[220,3723,3725,3728],{"className":3724},[266],[220,3726],{"className":3727,"style":3226},[270],[220,3729,3731],{"className":3730},[275,3138],[220,3732,985],{"className":3733},[275,3142],[220,3735,3737,3750],{"className":3736},[223],[220,3738,3740],{"className":3739},[227],[229,3741,3742],{"xmlns":231},[233,3743,3744,3748],{},[236,3745,3746],{},[3114,3747,1051],{"mathvariant":3116},[254,3749,3250],{"encoding":256},[220,3751,3753],{"className":3752,"ariaHidden":262},[261],[220,3754,3756,3759],{"className":3755},[266],[220,3757],{"className":3758,"style":995},[270],[220,3760,3762],{"className":3761},[275,3138],[220,3763,1051],{"className":3764},[275,3142]," 的值。",[24,3767,3768],{},"当两个指针没有相遇时，进行如下操作：",[124,3770,3771,3938,4267],{},[127,3772,3773,3774,919,3824,3874,3875,919,3906,3937],{},"使用 ",[220,3775,3777,3797],{"className":3776},[223],[220,3778,3780],{"className":3779},[227],[229,3781,3782],{"xmlns":231},[233,3783,3784,3794],{},[236,3785,3786,3788,3790,3792],{},[3114,3787,1292],{"mathvariant":3116},[243,3789,1190],{"stretchy":245},[3114,3791,3284],{"mathvariant":3116},[243,3793,1195],{"stretchy":245},[254,3795,3796],{"encoding":256},"\\textit{height}[\\textit{left}]",[220,3798,3800],{"className":3799,"ariaHidden":262},[261],[220,3801,3803,3806,3812,3815,3821],{"className":3802},[266],[220,3804],{"className":3805,"style":271},[270],[220,3807,3809],{"className":3808},[275,3138],[220,3810,1292],{"className":3811},[275,3142],[220,3813,1190],{"className":3814},[281],[220,3816,3818],{"className":3817},[275,3138],[220,3819,3284],{"className":3820},[275,3142],[220,3822,1195],{"className":3823},[288],[220,3825,3827,3847],{"className":3826},[223],[220,3828,3830],{"className":3829},[227],[229,3831,3832],{"xmlns":231},[233,3833,3834,3844],{},[236,3835,3836,3838,3840,3842],{},[3114,3837,1292],{"mathvariant":3116},[243,3839,1190],{"stretchy":245},[3114,3841,3317],{"mathvariant":3116},[243,3843,1195],{"stretchy":245},[254,3845,3846],{"encoding":256},"\\textit{height}[\\textit{right}]",[220,3848,3850],{"className":3849,"ariaHidden":262},[261],[220,3851,3853,3856,3862,3865,3871],{"className":3852},[266],[220,3854],{"className":3855,"style":271},[270],[220,3857,3859],{"className":3858},[275,3138],[220,3860,1292],{"className":3861},[275,3142],[220,3863,1190],{"className":3864},[281],[220,3866,3868],{"className":3867},[275,3138],[220,3869,3317],{"className":3870},[275,3142],[220,3872,1195],{"className":3873},[288]," 的值更新 ",[220,3876,3878,3891],{"className":3877},[223],[220,3879,3881],{"className":3880},[227],[229,3882,3883],{"xmlns":231},[233,3884,3885,3889],{},[236,3886,3887],{},[3114,3888,985],{"mathvariant":3116},[254,3890,3216],{"encoding":256},[220,3892,3894],{"className":3893,"ariaHidden":262},[261],[220,3895,3897,3900],{"className":3896},[266],[220,3898],{"className":3899,"style":3226},[270],[220,3901,3903],{"className":3902},[275,3138],[220,3904,985],{"className":3905},[275,3142],[220,3907,3909,3922],{"className":3908},[223],[220,3910,3912],{"className":3911},[227],[229,3913,3914],{"xmlns":231},[233,3915,3916,3920],{},[236,3917,3918],{},[3114,3919,1051],{"mathvariant":3116},[254,3921,3250],{"encoding":256},[220,3923,3925],{"className":3924,"ariaHidden":262},[261],[220,3926,3928,3931],{"className":3927},[266],[220,3929],{"className":3930,"style":995},[270],[220,3932,3934],{"className":3933},[275,3138],[220,3935,1051],{"className":3936},[275,3142]," 的值；",[127,3939,3940,3941,4034,4035,4093,4094,4125,4126,4202,4203,4234,4235,4266],{},"如果 ",[220,3942,3944,3974],{"className":3943},[223],[220,3945,3947],{"className":3946},[227],[229,3948,3949],{"xmlns":231},[233,3950,3951,3971],{},[236,3952,3953,3955,3957,3959,3961,3963,3965,3967,3969],{},[3114,3954,1292],{"mathvariant":3116},[243,3956,1190],{"stretchy":245},[3114,3958,3284],{"mathvariant":3116},[243,3960,1195],{"stretchy":245},[243,3962,1106],{},[3114,3964,1292],{"mathvariant":3116},[243,3966,1190],{"stretchy":245},[3114,3968,3317],{"mathvariant":3116},[243,3970,1195],{"stretchy":245},[254,3972,3973],{"encoding":256},"\\textit{height}[\\textit{left}] \u003C \\textit{height}[\\textit{right}]",[220,3975,3977,4010],{"className":3976,"ariaHidden":262},[261],[220,3978,3980,3983,3989,3992,3998,4001,4004,4007],{"className":3979},[266],[220,3981],{"className":3982,"style":271},[270],[220,3984,3986],{"className":3985},[275,3138],[220,3987,1292],{"className":3988},[275,3142],[220,3990,1190],{"className":3991},[281],[220,3993,3995],{"className":3994},[275,3138],[220,3996,3284],{"className":3997},[275,3142],[220,3999,1195],{"className":4000},[288],[220,4002],{"className":4003,"style":668},[608],[220,4005,1106],{"className":4006},[672],[220,4008],{"className":4009,"style":668},[608],[220,4011,4013,4016,4022,4025,4031],{"className":4012},[266],[220,4014],{"className":4015,"style":271},[270],[220,4017,4019],{"className":4018},[275,3138],[220,4020,1292],{"className":4021},[275,3142],[220,4023,1190],{"className":4024},[281],[220,4026,4028],{"className":4027},[275,3138],[220,4029,3317],{"className":4030},[275,3142],[220,4032,1195],{"className":4033},[288],"，则必有 ",[220,4036,4038,4056],{"className":4037},[223],[220,4039,4041],{"className":4040},[227],[229,4042,4043],{"xmlns":231},[233,4044,4045,4053],{},[236,4046,4047,4049,4051],{},[3114,4048,985],{"mathvariant":3116},[243,4050,1106],{},[3114,4052,1051],{"mathvariant":3116},[254,4054,4055],{"encoding":256},"\\textit{leftMax} \u003C \\textit{rightMax}",[220,4057,4059,4081],{"className":4058,"ariaHidden":262},[261],[220,4060,4062,4066,4072,4075,4078],{"className":4061},[266],[220,4063],{"className":4064,"style":4065},[270],"height:0.7335em;vertical-align:-0.0391em;",[220,4067,4069],{"className":4068},[275,3138],[220,4070,985],{"className":4071},[275,3142],[220,4073],{"className":4074,"style":668},[608],[220,4076,1106],{"className":4077},[672],[220,4079],{"className":4080,"style":668},[608],[220,4082,4084,4087],{"className":4083},[266],[220,4085],{"className":4086,"style":995},[270],[220,4088,4090],{"className":4089},[275,3138],[220,4091,1051],{"className":4092},[275,3142],"，下标 ",[220,4095,4097,4110],{"className":4096},[223],[220,4098,4100],{"className":4099},[227],[229,4101,4102],{"xmlns":231},[233,4103,4104,4108],{},[236,4105,4106],{},[3114,4107,3284],{"mathvariant":3116},[254,4109,3287],{"encoding":256},[220,4111,4113],{"className":4112,"ariaHidden":262},[261],[220,4114,4116,4119],{"className":4115},[266],[220,4117],{"className":4118,"style":3226},[270],[220,4120,4122],{"className":4121},[275,3138],[220,4123,3284],{"className":4124},[275,3142]," 处能接的雨水量等于 ",[220,4127,4129,4153],{"className":4128},[223],[220,4130,4132],{"className":4131},[227],[229,4133,4134],{"xmlns":231},[233,4135,4136,4150],{},[236,4137,4138,4140,4142,4144,4146,4148],{},[3114,4139,985],{"mathvariant":3116},[243,4141,1624],{},[3114,4143,1292],{"mathvariant":3116},[243,4145,1190],{"stretchy":245},[3114,4147,3284],{"mathvariant":3116},[243,4149,1195],{"stretchy":245},[254,4151,4152],{"encoding":256},"\\textit{leftMax} - \\textit{height}[\\textit{left}]",[220,4154,4156,4178],{"className":4155,"ariaHidden":262},[261],[220,4157,4159,4163,4169,4172,4175],{"className":4158},[266],[220,4160],{"className":4161,"style":4162},[270],"height:0.7778em;vertical-align:-0.0833em;",[220,4164,4166],{"className":4165},[275,3138],[220,4167,985],{"className":4168},[275,3142],[220,4170],{"className":4171,"style":1696},[608],[220,4173,1624],{"className":4174},[1700],[220,4176],{"className":4177,"style":1696},[608],[220,4179,4181,4184,4190,4193,4199],{"className":4180},[266],[220,4182],{"className":4183,"style":271},[270],[220,4185,4187],{"className":4186},[275,3138],[220,4188,1292],{"className":4189},[275,3142],[220,4191,1190],{"className":4192},[281],[220,4194,4196],{"className":4195},[275,3138],[220,4197,3284],{"className":4198},[275,3142],[220,4200,1195],{"className":4201},[288],"，将下标 ",[220,4204,4206,4219],{"className":4205},[223],[220,4207,4209],{"className":4208},[227],[229,4210,4211],{"xmlns":231},[233,4212,4213,4217],{},[236,4214,4215],{},[3114,4216,3284],{"mathvariant":3116},[254,4218,3287],{"encoding":256},[220,4220,4222],{"className":4221,"ariaHidden":262},[261],[220,4223,4225,4228],{"className":4224},[266],[220,4226],{"className":4227,"style":3226},[270],[220,4229,4231],{"className":4230},[275,3138],[220,4232,3284],{"className":4233},[275,3142]," 处能接的雨水量加到能接的雨水总量，然后将 ",[220,4236,4238,4251],{"className":4237},[223],[220,4239,4241],{"className":4240},[227],[229,4242,4243],{"xmlns":231},[233,4244,4245,4249],{},[236,4246,4247],{},[3114,4248,3284],{"mathvariant":3116},[254,4250,3287],{"encoding":256},[220,4252,4254],{"className":4253,"ariaHidden":262},[261],[220,4255,4257,4260],{"className":4256},[266],[220,4258],{"className":4259,"style":3226},[270],[220,4261,4263],{"className":4262},[275,3138],[220,4264,3284],{"className":4265},[275,3142]," 加 1（即向右移动一位）；",[127,4268,3940,4269,4034,4363,4093,4420,4125,4451,4202,4526,4234,4557,4588],{},[220,4270,4272,4303],{"className":4271},[223],[220,4273,4275],{"className":4274},[227],[229,4276,4277],{"xmlns":231},[233,4278,4279,4300],{},[236,4280,4281,4283,4285,4287,4289,4292,4294,4296,4298],{},[3114,4282,1292],{"mathvariant":3116},[243,4284,1190],{"stretchy":245},[3114,4286,3284],{"mathvariant":3116},[243,4288,1195],{"stretchy":245},[243,4290,4291],{},"≥",[3114,4293,1292],{"mathvariant":3116},[243,4295,1190],{"stretchy":245},[3114,4297,3317],{"mathvariant":3116},[243,4299,1195],{"stretchy":245},[254,4301,4302],{"encoding":256},"\\textit{height}[\\textit{left}] \\geq \\textit{height}[\\textit{right}]",[220,4304,4306,4339],{"className":4305,"ariaHidden":262},[261],[220,4307,4309,4312,4318,4321,4327,4330,4333,4336],{"className":4308},[266],[220,4310],{"className":4311,"style":271},[270],[220,4313,4315],{"className":4314},[275,3138],[220,4316,1292],{"className":4317},[275,3142],[220,4319,1190],{"className":4320},[281],[220,4322,4324],{"className":4323},[275,3138],[220,4325,3284],{"className":4326},[275,3142],[220,4328,1195],{"className":4329},[288],[220,4331],{"className":4332,"style":668},[608],[220,4334,4291],{"className":4335},[672],[220,4337],{"className":4338,"style":668},[608],[220,4340,4342,4345,4351,4354,4360],{"className":4341},[266],[220,4343],{"className":4344,"style":271},[270],[220,4346,4348],{"className":4347},[275,3138],[220,4349,1292],{"className":4350},[275,3142],[220,4352,1190],{"className":4353},[281],[220,4355,4357],{"className":4356},[275,3138],[220,4358,3317],{"className":4359},[275,3142],[220,4361,1195],{"className":4362},[288],[220,4364,4366,4384],{"className":4365},[223],[220,4367,4369],{"className":4368},[227],[229,4370,4371],{"xmlns":231},[233,4372,4373,4381],{},[236,4374,4375,4377,4379],{},[3114,4376,985],{"mathvariant":3116},[243,4378,4291],{},[3114,4380,1051],{"mathvariant":3116},[254,4382,4383],{"encoding":256},"\\textit{leftMax} \\geq \\textit{rightMax}",[220,4385,4387,4408],{"className":4386,"ariaHidden":262},[261],[220,4388,4390,4393,4399,4402,4405],{"className":4389},[266],[220,4391],{"className":4392,"style":682},[270],[220,4394,4396],{"className":4395},[275,3138],[220,4397,985],{"className":4398},[275,3142],[220,4400],{"className":4401,"style":668},[608],[220,4403,4291],{"className":4404},[672],[220,4406],{"className":4407,"style":668},[608],[220,4409,4411,4414],{"className":4410},[266],[220,4412],{"className":4413,"style":995},[270],[220,4415,4417],{"className":4416},[275,3138],[220,4418,1051],{"className":4419},[275,3142],[220,4421,4423,4436],{"className":4422},[223],[220,4424,4426],{"className":4425},[227],[229,4427,4428],{"xmlns":231},[233,4429,4430,4434],{},[236,4431,4432],{},[3114,4433,3317],{"mathvariant":3116},[254,4435,3320],{"encoding":256},[220,4437,4439],{"className":4438,"ariaHidden":262},[261],[220,4440,4442,4445],{"className":4441},[266],[220,4443],{"className":4444,"style":995},[270],[220,4446,4448],{"className":4447},[275,3138],[220,4449,3317],{"className":4450},[275,3142],[220,4452,4454,4478],{"className":4453},[223],[220,4455,4457],{"className":4456},[227],[229,4458,4459],{"xmlns":231},[233,4460,4461,4475],{},[236,4462,4463,4465,4467,4469,4471,4473],{},[3114,4464,1051],{"mathvariant":3116},[243,4466,1624],{},[3114,4468,1292],{"mathvariant":3116},[243,4470,1190],{"stretchy":245},[3114,4472,3317],{"mathvariant":3116},[243,4474,1195],{"stretchy":245},[254,4476,4477],{"encoding":256},"\\textit{rightMax} - \\textit{height}[\\textit{right}]",[220,4479,4481,4502],{"className":4480,"ariaHidden":262},[261],[220,4482,4484,4487,4493,4496,4499],{"className":4483},[266],[220,4485],{"className":4486,"style":995},[270],[220,4488,4490],{"className":4489},[275,3138],[220,4491,1051],{"className":4492},[275,3142],[220,4494],{"className":4495,"style":1696},[608],[220,4497,1624],{"className":4498},[1700],[220,4500],{"className":4501,"style":1696},[608],[220,4503,4505,4508,4514,4517,4523],{"className":4504},[266],[220,4506],{"className":4507,"style":271},[270],[220,4509,4511],{"className":4510},[275,3138],[220,4512,1292],{"className":4513},[275,3142],[220,4515,1190],{"className":4516},[281],[220,4518,4520],{"className":4519},[275,3138],[220,4521,3317],{"className":4522},[275,3142],[220,4524,1195],{"className":4525},[288],[220,4527,4529,4542],{"className":4528},[223],[220,4530,4532],{"className":4531},[227],[229,4533,4534],{"xmlns":231},[233,4535,4536,4540],{},[236,4537,4538],{},[3114,4539,3317],{"mathvariant":3116},[254,4541,3320],{"encoding":256},[220,4543,4545],{"className":4544,"ariaHidden":262},[261],[220,4546,4548,4551],{"className":4547},[266],[220,4549],{"className":4550,"style":995},[270],[220,4552,4554],{"className":4553},[275,3138],[220,4555,3317],{"className":4556},[275,3142],[220,4558,4560,4573],{"className":4559},[223],[220,4561,4563],{"className":4562},[227],[229,4564,4565],{"xmlns":231},[233,4566,4567,4571],{},[236,4568,4569],{},[3114,4570,3317],{"mathvariant":3116},[254,4572,3320],{"encoding":256},[220,4574,4576],{"className":4575,"ariaHidden":262},[261],[220,4577,4579,4582],{"className":4578},[266],[220,4580],{"className":4581,"style":995},[270],[220,4583,4585],{"className":4584},[275,3138],[220,4586,3317],{"className":4587},[275,3142]," 减 1（即向左移动一位）。",[24,4590,4591],{},"当两个指针相遇时，即可得到能接的雨水总量",[24,4593,4594,4595,4598,4599,4602,4603,4606,4607,4650,4651,4694,4695,4743,4744,4804,4805,4860,4861,4916,4917,4977,4978,5010,5011,5066,5067,5070],{},"就是每次判断在",[28,4596,4597],{},"两个","柱子中，",[28,4600,4601],{},"选择哪个柱子","接水。思路还是和动态规划一样，每次选择柱子两侧最大值的",[28,4604,4605],{},"最低点","来算。正如第一种情况的话，",[220,4608,4610,4629],{"className":4609},[223],[220,4611,4613],{"className":4612},[227],[229,4614,4615],{"xmlns":231},[233,4616,4617,4626],{},[236,4618,4619,4621,4623],{},[239,4620,914],{},[3114,4622,161],{},[239,4624,4625],{},"j",[254,4627,4628],{"encoding":256},"i、j",[220,4630,4632],{"className":4631,"ariaHidden":262},[261],[220,4633,4635,4639,4642,4646],{"className":4634},[266],[220,4636],{"className":4637,"style":4638},[270],"height:0.8778em;vertical-align:-0.1944em;",[220,4640,914],{"className":4641},[275,276],[220,4643,161],{"className":4644},[275,4645],"cjk_fallback",[220,4647,4625],{"className":4648,"style":4649},[275,276],"margin-right:0.05724em;","两个柱子的话，因为",[220,4652,4654,4673],{"className":4653},[223],[220,4655,4657],{"className":4656},[227],[229,4658,4659],{"xmlns":231},[233,4660,4661,4671],{},[236,4662,4663,4665,4667,4669],{},[239,4664,965],{},[239,4666,968],{},[239,4668,971],{},[239,4670,974],{},[254,4672,3284],{"encoding":256},[220,4674,4676],{"className":4675,"ariaHidden":262},[261],[220,4677,4679,4682,4685,4688,4691],{"className":4678},[266],[220,4680],{"className":4681,"style":995},[270],[220,4683,965],{"className":4684,"style":999},[275,276],[220,4686,968],{"className":4687},[275,276],[220,4689,971],{"className":4690,"style":1006},[275,276],[220,4692,974],{"className":4693},[275,276],"比",[220,4696,4698,4719],{"className":4697},[223],[220,4699,4701],{"className":4700},[227],[229,4702,4703],{"xmlns":231},[233,4704,4705,4717],{},[236,4706,4707,4709,4711,4713,4715],{},[239,4708,1032],{},[239,4710,914],{},[239,4712,1037],{},[239,4714,1040],{},[239,4716,974],{},[254,4718,3317],{"encoding":256},[220,4720,4722],{"className":4721,"ariaHidden":262},[261],[220,4723,4725,4728,4731,4734,4737,4740],{"className":4724},[266],[220,4726],{"className":4727,"style":995},[270],[220,4729,1032],{"className":4730,"style":277},[275,276],[220,4732,914],{"className":4733},[275,276],[220,4735,1037],{"className":4736,"style":1070},[275,276],[220,4738,1040],{"className":4739},[275,276],[220,4741,974],{"className":4742},[275,276],"小了，那么",[220,4745,4747,4774],{"className":4746},[223],[220,4748,4750],{"className":4749},[227],[229,4751,4752],{"xmlns":231},[233,4753,4754,4772],{},[236,4755,4756,4758,4760,4762,4764,4766,4768,4770],{},[239,4757,1032],{},[239,4759,914],{},[239,4761,1037],{},[239,4763,1040],{},[239,4765,974],{},[239,4767,977],{},[239,4769,18],{},[239,4771,982],{},[254,4773,1051],{"encoding":256},[220,4775,4777],{"className":4776,"ariaHidden":262},[261],[220,4778,4780,4783,4786,4789,4792,4795,4798,4801],{"className":4779},[266],[220,4781],{"className":4782,"style":995},[270],[220,4784,1032],{"className":4785,"style":277},[275,276],[220,4787,914],{"className":4788},[275,276],[220,4790,1037],{"className":4791,"style":1070},[275,276],[220,4793,1040],{"className":4794},[275,276],[220,4796,1011],{"className":4797,"style":1010},[275,276],[220,4799,18],{"className":4800},[275,276],[220,4802,982],{"className":4803},[275,276],"一定会比",[220,4806,4808,4833],{"className":4807},[223],[220,4809,4811],{"className":4810},[227],[229,4812,4813],{"xmlns":231},[233,4814,4815,4831],{},[236,4816,4817,4819,4821,4823,4825,4827,4829],{},[239,4818,965],{},[239,4820,968],{},[239,4822,971],{},[239,4824,974],{},[239,4826,977],{},[239,4828,18],{},[239,4830,982],{},[254,4832,985],{"encoding":256},[220,4834,4836],{"className":4835,"ariaHidden":262},[261],[220,4837,4839,4842,4845,4848,4851,4854,4857],{"className":4838},[266],[220,4840],{"className":4841,"style":995},[270],[220,4843,965],{"className":4844,"style":999},[275,276],[220,4846,968],{"className":4847},[275,276],[220,4849,971],{"className":4850,"style":1006},[275,276],[220,4852,1011],{"className":4853,"style":1010},[275,276],[220,4855,18],{"className":4856},[275,276],[220,4858,982],{"className":4859},[275,276],"大，又因为左边柱子的",[220,4862,4864,4889],{"className":4863},[223],[220,4865,4867],{"className":4866},[227],[229,4868,4869],{"xmlns":231},[233,4870,4871,4887],{},[236,4872,4873,4875,4877,4879,4881,4883,4885],{},[239,4874,965],{},[239,4876,968],{},[239,4878,971],{},[239,4880,974],{},[239,4882,977],{},[239,4884,18],{},[239,4886,982],{},[254,4888,985],{"encoding":256},[220,4890,4892],{"className":4891,"ariaHidden":262},[261],[220,4893,4895,4898,4901,4904,4907,4910,4913],{"className":4894},[266],[220,4896],{"className":4897,"style":995},[270],[220,4899,965],{"className":4900,"style":999},[275,276],[220,4902,968],{"className":4903},[275,276],[220,4905,971],{"className":4906,"style":1006},[275,276],[220,4908,1011],{"className":4909,"style":1010},[275,276],[220,4911,18],{"className":4912},[275,276],[220,4914,982],{"className":4915},[275,276],"一定会比右边柱子的",[220,4918,4920,4947],{"className":4919},[223],[220,4921,4923],{"className":4922},[227],[229,4924,4925],{"xmlns":231},[233,4926,4927,4945],{},[236,4928,4929,4931,4933,4935,4937,4939,4941,4943],{},[239,4930,1032],{},[239,4932,914],{},[239,4934,1037],{},[239,4936,1040],{},[239,4938,974],{},[239,4940,977],{},[239,4942,18],{},[239,4944,982],{},[254,4946,1051],{"encoding":256},[220,4948,4950],{"className":4949,"ariaHidden":262},[261],[220,4951,4953,4956,4959,4962,4965,4968,4971,4974],{"className":4952},[266],[220,4954],{"className":4955,"style":995},[270],[220,4957,1032],{"className":4958,"style":277},[275,276],[220,4960,914],{"className":4961},[275,276],[220,4963,1037],{"className":4964,"style":1070},[275,276],[220,4966,1040],{"className":4967},[275,276],[220,4969,1011],{"className":4970,"style":1010},[275,276],[220,4972,18],{"className":4973},[275,276],[220,4975,982],{"className":4976},[275,276],"大，所以",[220,4979,4981,4998],{"className":4980},[223],[220,4982,4984],{"className":4983},[227],[229,4985,4986],{"xmlns":231},[233,4987,4988,4996],{},[236,4989,4990,4992,4994],{},[239,4991,1915],{},[239,4993,914],{},[239,4995,249],{},[254,4997,2948],{"encoding":256},[220,4999,5001],{"className":5000,"ariaHidden":262},[261],[220,5002,5004,5007],{"className":5003},[266],[220,5005],{"className":5006,"style":1261},[270],[220,5008,2948],{"className":5009},[275,276],"的值就是",[220,5012,5014,5039],{"className":5013},[223],[220,5015,5017],{"className":5016},[227],[229,5018,5019],{"xmlns":231},[233,5020,5021,5037],{},[236,5022,5023,5025,5027,5029,5031,5033,5035],{},[239,5024,965],{},[239,5026,968],{},[239,5028,971],{},[239,5030,974],{},[239,5032,977],{},[239,5034,18],{},[239,5036,982],{},[254,5038,985],{"encoding":256},[220,5040,5042],{"className":5041,"ariaHidden":262},[261],[220,5043,5045,5048,5051,5054,5057,5060,5063],{"className":5044},[266],[220,5046],{"className":5047,"style":995},[270],[220,5049,965],{"className":5050,"style":999},[275,276],[220,5052,968],{"className":5053},[275,276],[220,5055,971],{"className":5056,"style":1006},[275,276],[220,5058,1011],{"className":5059,"style":1010},[275,276],[220,5061,18],{"className":5062},[275,276],[220,5064,982],{"className":5065},[275,276],"，这里",[28,5068,5069],{},"省略","掉了只是。",[49,5072,5075],{"className":5073,"code":5074,"language":54,"meta":55},[52],"class Solution {\npublic:\n    int trap(vector\u003Cint>& height) {\n        int ans = 0;\n        int left = 0,right = height.size() - 1;\n        int leftMax = 0,rightMax = 0;\n        while(left \u003C right){\n            //leftMax表示下标left及其左边的位置中，height的最大高度\n            leftMax=  max(leftMax,height[left]);\n            //rightMax表示下标right及其右边的位置中，height的最大高度\n            rightMax = max(rightMax,height[right]);\n\n            if(height[left] \u003C height[right]){\n                //leftMax \u003C rightMax \n                ans += leftMax - height[left];\n                left++;\n            }\n            else\n            {\n                ans += rightMax - height[right];\n                right--;\n            }\n        }\n        return ans;\n    }\n};\n",[36,5076,5074],{"__ignoreMap":55},[10,5078,5079],{"id":5079},"滑动窗口",[14,5081,5083],{"id":5082},"无重复字符的最长子串",[18,5084,5082],{"href":5085,"rel":5086},"https://leetcode.cn/problems/longest-substring-without-repeating-characters/",[22],[49,5088,5091],{"className":5089,"code":5090,"language":54,"meta":55},[52],"class Solution {\npublic:\n    int lengthOfLongestSubstring(string s) {\n        unordered_set\u003Cchar> occ;//哈希集合，记录当前窗口有哪些字符\n        int n = s.size();\n        //右指针初始为-1\n        int rk = -1,ans = 0;\n        //枚举左指针的位置\n        for(int i = 0; i \u003C n;i++)\n        {\n            if(i != 0) occ.erase(s[i-1]);\n            while(rk + 1 \u003C n && !occ.count(s[rk+1])){\n                //不断移动右指针\n                occ.insert(s[rk+1]);\n                rk++;\n            }\n            ans = max(ans,rk - i + 1);//每次计算不重复的长度\n        }\n        return ans;\n    }\n};\n",[36,5092,5090],{"__ignoreMap":55},[14,5094,5096],{"id":5095},"找到字符串中所有字母异位词",[18,5097,5095],{"href":5098,"rel":5099},"https://leetcode.cn/problems/find-all-anagrams-in-a-string/",[22],[49,5101,5104],{"className":5102,"code":5103,"language":54,"meta":55},[52],"class Solution {\npublic:\n    vector\u003Cint> findAnagrams(string s, string p) {\n        int slen = s.size(),plen = p.size();\n\n        if(slen \u003C plen) return vector\u003Cint>();\n\n        vector\u003Cint> ans;\n        vector\u003Cint> sCount(26);\n        vector\u003Cint> pCount(26);\n\n        //先初始化前plen个字符的频次\n        for(int i = 0; i \u003C plen;i++)\n        {\n          sCount[s[i]-'a']++;\n          pCount[p[i]-'a']++;\n        }\n        //s与p完全相同\n        if(sCount == pCount) ans.emplace_back(0);\n\n        for(int i = 0; i \u003C slen - plen;i++)\n        {\n            sCount[s[i]-'a']--;//移出窗口左端\n            sCount[s[i+plen]-'a']++;//窗口右端进入\n            if(sCount == pCount) ans.emplace_back(i+1);\n        }\n        return ans;\n    }\n};\n",[36,5105,5103],{"__ignoreMap":55},[10,5107,5108],{"id":5108},"子串",[14,5110,5112],{"id":5111},"和为-k-的子数组map",[18,5113,5116],{"href":5114,"rel":5115},"https://leetcode.cn/problems/subarray-sum-equals-k/",[22],"和为 K 的子数组(map)",[24,5118,5119,5120,5125],{},"为什么先放",[28,5121,131,5122,5124],{},[220,5123,1099],{}," = 1","？表示“在任何数之前”有一个“前缀和为 0” 的情况。这样如果一开始累计到的前缀和本身就等于 k（即 pre == k），那么 pre - k == 0，就能正确计数到这个从 0 开始的子数组。",[24,5127,5128,5131],{},[28,5129,5130],{},"类比",":你在走路（遍历数组），手里累加步数（前缀和 pre）。你想知道有没有一段路程长度为 k。只要你当前的总步数 pre 与过去某次的总步数 old 之差是 k，即 old = pre - k，就说明那段之间的路长是 k。于是你每走一步就问：之前有多少次总步数等于 pre - k？有几次就有几个合法子数组。",[24,5133,5134,5137,5138,138,5141,5144,5145,138,5148,5151],{},[36,5135,5136],{"code":5136},"unordered_map\u003CK, V>","：键值对容器，",[28,5139,5140],{},"键",[36,5142,5143],{"code":5143},"K"," 类型，",[28,5146,5147],{},"值",[36,5149,5150],{"code":5150},"V"," 类型",[24,5153,5154,5157,5158,5160,5161,5164],{},[36,5155,5156],{"code":5156},"mp.find(key)","：在 ",[36,5159,100],{"code":100}," 里查找是否存在键为 ",[36,5162,5163],{"code":5163},"key"," 的元素。",[124,5166,5167,5173,5183],{},[127,5168,5169,5172],{},[28,5170,5171],{},"如果存在","：返回指向该元素的迭代器（不是值）",[127,5174,5175,5178,5179,5182],{},[28,5176,5177],{},"如果不存在","：返回 ",[36,5180,5181],{"code":5181},"mp.end()","（尾后迭代器）",[127,5184,5185,5187],{},[36,5186,5163],{"code":5163},[28,5188,5189],{},"唯一",[24,5191,5192,5194,5195,327,5197,197],{},[36,5193,93],{"code":93},"与",[36,5196,100],{"code":100},[28,5198,5199],{},"区别",[5201,5202,5203,5213],"ol",{},[127,5204,5205,5206,5209,5210,5212],{},"底层结构",[5207,5208],"br",{},"map：平衡二叉搜索树（C++ 标准里通常是红黑树）",[5207,5211],{},"unordered_map：哈希表（数组 + 链表/桶，或拉链法，具体实现取决于库）",[127,5214,5215,5216,5218,5219,5221],{},"键的顺序",[5207,5217],{},"map：迭代时按 key 从小到大有序",[5207,5220],{},"unordered_map：无序（遍历顺序和插入、rehash 等相关，不可依赖）",[24,5223,5224],{},[36,5225,5226],{"code":5226},"mp[pre]",[24,5228,5229,5230,5236,5237,5239],{},"当你用 ",[28,5231,5232,5233],{},"下标运算符 ",[36,5234,5235],{"code":5235},"[]"," 访问一个键 ",[36,5238,49],{"code":49}," 时：",[124,5241,5242,5252],{},[127,5243,5244,5247,5248,5251],{},[28,5245,5246],{},"如果这个键存在","，就返回它对应的 ",[36,5249,5250],{"code":5250},"value"," 的引用。",[127,5253,5254,5257,5258,5261],{},[28,5255,5256],{},"如果这个键不存在","，就会 ",[28,5259,5260],{},"自动插入"," 一个新的键值对：",[49,5263,5266],{"className":5264,"code":5265,"language":54,"meta":55},[52],"class Solution {\npublic:\n    int subarraySum(vector\u003Cint>& nums, int k) {\n        unordered_map\u003Cint,int> mp;\n        //mp[sum]=cnt表示前缀和为sum的情况出现过cnt次\n        mp[0] = 1;\n        int count = 0,pre = 0;\n        for(auto &x : nums)\n        {\n            pre += x;\n            if(mp.find(pre-k) != mp.end()) count += mp[pre-k];\n            mp[pre]++;\n        }\n        return count;\n    }\n};\n",[36,5267,5265],{"__ignoreMap":55},[14,5269,5271],{"id":5270},"滑动窗口最大值",[18,5272,5270],{"href":5273,"rel":5274},"https://leetcode.cn/problems/sliding-window-maximum/",[22],[24,5276,5277,5278],{},"队列的性质是",[28,5279,5280],{},"先进先出",[24,5282,5283,5285],{},[36,5284,164],{"code":164},"（双端队列）",[124,5287,5288,5302],{},[127,5289,5290,5291,5294,5295,5298,5299,5301],{},"全称 ",[28,5292,5293],{},"double-ended queue","，存储结构是一个 ",[28,5296,5297],{},"动态数组块链表","（不是连续的大数组，扩展时比 ",[36,5300,46],{"code":46}," 高效）。",[127,5303,5304,5305],{},"特点：",[124,5306,5307,5326],{},[127,5308,5309,5312,5313,5316,5317,5316,5320,5316,5322,5325],{},[28,5310,5311],{},"两端都能高效插入和删除","（",[36,5314,5315],{"code":5315},"push_front"," / ",[36,5318,5319],{"code":5319},"pop_front",[36,5321,185],{"code":185},[36,5323,5324],{"code":5324},"pop_back","）。",[127,5327,5328,5329,5331,5332,31],{},"随机访问（",[36,5330,5235],{"code":5235}," 运算符）和迭代器可用，类似 ",[36,5333,46],{"code":46},[24,5335,5336,5339],{},[36,5337,5338],{"code":5338},"queue","（队列）",[124,5341,5342,5351,5377],{},[127,5343,5344,5347,5348,5350],{},[28,5345,5346],{},"容器适配器","，默认基于 ",[36,5349,164],{"code":164}," 实现。",[127,5352,5353,5354,5357,5358,5360,5361,5364,5365,5368,5369,5372,5373,5376],{},"特点：\n",[28,5355,5356],{},"只能从一端进，另一端出","（FIFO，先进先出）。\n接口比 ",[36,5359,164],{"code":164}," 少很多，只允许：",[36,5362,5363],{"code":5363},"push()","：入队（尾部），",[36,5366,5367],{"code":5367},"pop()","：出队（头部），",[36,5370,5371],{"code":5371},"front()","：访问队头，",[36,5374,5375],{"code":5375},"back()","：访问队尾",[127,5378,5379],{},"不能随便访问中间元素。",[24,5381,5382,5383,5389],{},"我们用 ",[28,5384,5385,5386,5388],{},"双端队列 ",[36,5387,164],{"code":164}," 保存索引","，保证：",[5201,5391,5392,5399],{},[127,5393,5394,5395,5398],{},"队头 ",[36,5396,5397],{"code":5397},"q.front()"," 总是窗口的最大值索引。",[127,5400,5401,5402,5405],{},"队列从前到后递减（对应 ",[36,5403,5404],{"code":5404},"nums"," 的值递减）。",[24,5407,5408,5409,5412,5413,5416],{},"维护一个",[28,5410,5411],{},"单调递减","的队列，元素是",[28,5414,5415],{},"下标","，队首是窗口里最大元素的下标，遍历数组，首先判断最大元素是否还在窗口里，然后将队列里小于当前新加入元素的老元素去掉（因为只要新元素在窗口，在老元素右边，它们就不可能是滑动窗口的最大值），然后加入这个新元素，遍历时记录队首的最大值即可。",[24,5418,5419,5422,5423,5426],{},[36,5420,5421],{"code":5421},"nums[q[0]] >= nums[q[1]] >= nums[q[2]] ...","，队列中只存",[28,5424,5425],{},"当前","窗口范围内的下标。",[24,5428,5429],{},"如何维持这个结构：",[124,5431,5432,5435,5438],{},[127,5433,5434],{},"插入新元素 i 之前：把队尾那些值 \u003C= 新值 的下标全部弹掉，因为它们永远不可能再成为最大值（被更靠右且不更小的值遮蔽）。",[127,5436,5437],{},"把 i 放到队尾。",[127,5439,5440],{},"再把队头如果已经滑出窗口（下标 \u003C= i - k）就弹掉。",[49,5442,5445],{"className":5443,"code":5444,"language":54,"meta":55},[52],"class Solution {\npublic:\n    vector\u003Cint> maxSlidingWindow(vector\u003Cint>& nums, int k) {\n        int n = nums.size();\n        deque\u003Cint> q;\n        for(int i = 0; i \u003C k;i++)//先处理前k个元素，形成第一个窗口\n        {   //把所有比当前元素小（或相等）的尾部下标移除\n            while(!q.empty() && nums[i] >= nums[q.back()]) q.pop_back();\n            q.push_back(i);\n        }// 此时队头就是第一个窗口最大值的下标\n        vector\u003Cint> ans = {nums[q.front()]};\n        for(int i = k; i \u003C n;i++)//继续处理后面的元素 i = k ... n-1\n        {   //插入新元素之前，清理掉尾部不可能再用的\n            while(!q.empty() && nums[i] >= nums[q.back()]) q.pop_back();\n            q.push_back(i);\n            //窗口现在是[i-k+1,i],如果队头已经出界就弹掉\n            while(q.front() \u003C= i - k) q.pop_front();\n            ans.push_back(nums[q.front()]);//队头就是当前窗口最大值\n        }\n        return ans;        \n    }\n};\n",[36,5446,5444],{"__ignoreMap":55},[14,5448,5450],{"id":5449},"最小覆盖子串",[18,5451,5449],{"href":5452,"rel":5453},"https://leetcode.cn/problems/minimum-window-substring/",[22],[24,5455,5456,5457],{},"思路：",[28,5458,5079],{},[24,5460,5461,5462],{},"在滑动窗口类型的问题中都会有两个指针，一个用于「延伸」现有窗口的 r 指针，和一个用于「收缩」窗口的 l 指针。在任意时刻，只有一个指针运动，而另一个保持静止。",[28,5463,5464],{},"我们在 s 上滑动窗口，通过移动 r 指针不断扩张窗口。当窗口包含 t 全部所需的字符后，如果能收缩，我们就收缩窗口直到得到最小窗口。",[49,5466,5469],{"className":5467,"code":5468,"language":54,"meta":55},[52],"class Solution {\npublic:\n    unordered_map\u003Cchar,int> ori,cnt;//cnt当前窗口各字符出现次数\n\n    bool check(){//判断当前窗口是否已经覆盖t\n        for(const auto &p : ori) \n            if(cnt[p.first] \u003C p.second) return false;\n        return true;\n    }\n    string minWindow(string s, string t) {\n        for(const auto &c:t) ori[c]++;//字符串t中每个字符出现次数(目标)\n\n        int l = 0, r = -1;\n        int len = INT_MAX,ansL = -1, ansR = -1;//最优的窗口左右边界\n        //len记录目前找到的最短合法窗口长度\n        while(r \u003C int(s.size())){\n            if(ori.find(s[++r]) != ori.end()) cnt[s[r]]++;\n\n            while(check() && l \u003C= r)//如果满足条件，尝试缩短窗口\n            {\n                if(r - l + 1 \u003C len){\n                    len = r - l + 1;\n                    ansL = l;\n                }\n                if(ori.find(s[l]) != ori.end()) cnt[s[l]]--;//如果是目标字符，更新出现次数\n                l++;\n            } \n        }\n        return ansL == -1?string():s.substr(ansL,len);//从ansl起，取长度为len的子串\n    }\n};\n",[36,5470,5468],{"__ignoreMap":55},[10,5472,5473],{"id":5473},"普通数组",[14,5475,5477],{"id":5476},"最大子数组和",[18,5478,5476],{"href":5479,"rel":5480},"https://leetcode.cn/problems/maximum-subarray/",[22],[49,5482,5485],{"className":5483,"code":5484,"language":54,"meta":55},[52],"class Solution {\npublic:\n    int maxSubArray(vector\u003Cint>& nums) {\n        int pre = 0,maxAns = nums[0];\n        for(auto x : nums){\n            pre = max(pre+x,x);//pre记录以当前元素结尾的连续子数组的最大和\n            maxAns = max(maxAns,pre);\n        }\n        return maxAns;\n    }\n};\n",[36,5486,5484],{"__ignoreMap":55},[14,5488,5490],{"id":5489},"合并区间",[18,5491,5489],{"href":5492,"rel":5493},"https://leetcode.cn/problems/merge-intervals/",[22],[24,5495,5496,5497,5500,5501,5503,5504,5507],{},"默认 ",[36,5498,5499],{"code":5499},"sort"," 对 ",[36,5502,38],{"code":38}," 是按 ",[28,5505,5506],{},"字典序"," 排序。",[24,5509,5510,5511,5514,5515,31],{},"对 ",[36,5512,5513],{"code":5513},"vector\u003Cvector\u003Cint>>"," 就是 ",[28,5516,5517],{},"先比较第一列，再比较第二列...",[24,5519,5520,5523],{},[36,5521,5522],{"code":5522},"vector::back()"," 的作用",[24,5525,5526,5527,5529,5530,5532],{},"在 C++ STL 里，",[36,5528,5375],{"code":5375}," 是 ",[36,5531,46],{"code":46}," 的一个成员函数，功能是：",[24,5534,5535,31],{},[28,5536,5537],{},"返回容器中最后一个元素的引用",[24,5539,5540,5541,5544,5545,5548,5549,5552,5553,5555,5556,5558],{},"首先，我们将列表中的区间按照左端点升序排序。然后我们将第一个区间加入 merged 数组中，并按顺序依次考虑之后的每个区间：\n如果当前区间的",[28,5542,5543],{},"左端点","在数组 merged 中最后一个区间的",[28,5546,5547],{},"右端点","之后，那么它们不会重合，我们可以直接将这个区间加入数组 merged 的末尾；\n否则，它们",[28,5550,5551],{},"重合","，我们需要用",[28,5554,5425],{},"区间的",[28,5557,5547],{},"更新数组 merged 中最后一个区间的右端点，将其置为二者的较大值。",[5560,5561],"pic",{":caption":5562,"src":5563},"null","https://7.isyangs.cn/20250819/8f0b5e48eebee6a5b15307ad03e57ac7.png",[49,5565,5568],{"className":5566,"code":5567,"language":54,"meta":55},[52],"class Solution {\npublic:\n    vector\u003Cvector\u003Cint>> merge(vector\u003Cvector\u003Cint>>& intervals) {\n        if(intervals.size() == 0) return {};\n\n        sort(intervals.begin(),intervals.end());\n        vector\u003Cvector\u003Cint>> merged;\n        for(int i = 0; i \u003C intervals.size();i++)\n        {\n            int L = intervals[i][0],R = intervals[i][1];\n            if(!merged.size() || merged.back()[1] \u003C L) merged.push_back({L,R});\n            else merged.back()[1] = max(merged.back()[1],R);\n        }\n        return merged;\n    }\n};\n",[36,5569,5567],{"__ignoreMap":55},[14,5571,5573],{"id":5572},"轮转数组",[18,5574,5572],{"href":5575,"rel":5576},"https://leetcode.cn/problems/rotate-array/",[22],[24,5578,5579,5580,5523],{},"🔹 ",[36,5581,5582],{"code":5582},"vector::assign",[24,5584,5585,5529,5588,5591],{},[36,5586,5587],{"code":5587},"assign",[36,5589,5590],{"code":5590},"std::vector"," 的一个成员函数，用来把容器里的内容替换成新的内容",[24,5593,5594,5596,5597,31],{},[36,5595,5587],{"code":5587}," 会 ",[28,5598,5599],{},"替换元素、修改 size",[24,5601,5602],{},"它不直接关心原来的容量，但如果原容量不够，会自动扩容。",[49,5604,5607],{"className":5605,"code":5606,"language":54,"meta":55},[52],"class Solution {\npublic:\n    void rotate(vector\u003Cint>& nums, int k) {\n        int n = nums.size();\n        vector\u003Cint> newArr(n);\n        for(int i = 0; i \u003C n; i ++)\n        {\n            newArr[(i+k)%n] = nums[i];\n        }\n        nums.assign(newArr.begin(),newArr.end());\n        //nums = newArr;\n    }\n};\n",[36,5608,5606],{"__ignoreMap":55},[14,5610,5612],{"id":5611},"除自身以外数组的乘积",[18,5613,5611],{"href":5614,"rel":5615},"https://leetcode.cn/problems/product-of-array-except-self/",[22],[49,5617,5620],{"className":5618,"code":5619,"language":54,"meta":55},[52],"class Solution {\npublic:\n    vector\u003Cint> productExceptSelf(vector\u003Cint>& nums) {\n        int length = nums.size();\n        vector\u003Cint> answer(length);\n\n        //answer[i]表示索引左侧所有元素的乘积\n        answer[0] = 1;\n        for(int i = 1;i \u003C length;i++) answer[i] = nums[i-1] * answer[i-1];\n\n        //R为右侧所有元素的乘积\n        int R = 1;\n        for(int i = length-1;i >= 0; i --)\n        {\n            answer[i] = answer[i] * R;\n            R *= nums[i];\n        }\n        return answer;\n    }\n};\n",[36,5621,5619],{"__ignoreMap":55},[14,5623,5625],{"id":5624},"缺失的第一个正数",[18,5626,5624],{"href":5627,"rel":5628},"https://leetcode.cn/problems/first-missing-positive/",[22],[24,5630,5631,5632,5635,5636,5711,5712,5764,5765,5817,5818,5868,5869,5920],{},"我们的思路是首先，",[28,5633,5634],{},"正数","的范围为",[220,5637,5639,5666],{"className":5638},[223],[220,5640,5642],{"className":5641},[227],[229,5643,5644],{"xmlns":231},[233,5645,5646,5663],{},[236,5647,5648,5650,5652,5654,5657,5659,5661],{},[243,5649,1190],{"stretchy":245},[1097,5651,1627],{},[243,5653,572],{"separator":262},[239,5655,5656],{},"N",[243,5658,2276],{},[1097,5660,1627],{},[243,5662,1195],{"stretchy":245},[254,5664,5665],{"encoding":256},"[1,N+1]",[220,5667,5669,5699],{"className":5668,"ariaHidden":262},[261],[220,5670,5672,5675,5678,5681,5684,5687,5690,5693,5696],{"className":5671},[266],[220,5673],{"className":5674,"style":271},[270],[220,5676,1190],{"className":5677},[281],[220,5679,1627],{"className":5680},[275],[220,5682,572],{"className":5683},[604],[220,5685],{"className":5686,"style":609},[608],[220,5688,5656],{"className":5689,"style":1010},[275,276],[220,5691],{"className":5692,"style":1696},[608],[220,5694,2276],{"className":5695},[1700],[220,5697],{"className":5698,"style":1696},[608],[220,5700,5702,5705,5708],{"className":5701},[266],[220,5703],{"className":5704,"style":271},[270],[220,5706,1627],{"className":5707},[275],[220,5709,1195],{"className":5710},[288],"，为",[220,5713,5715,5733],{"className":5714},[223],[220,5716,5718],{"className":5717},[227],[229,5719,5720],{"xmlns":231},[233,5721,5722,5730],{},[236,5723,5724,5726,5728],{},[239,5725,5656],{},[243,5727,2276],{},[1097,5729,1627],{},[254,5731,5732],{"encoding":256},"N+1",[220,5734,5736,5755],{"className":5735,"ariaHidden":262},[261],[220,5737,5739,5743,5746,5749,5752],{"className":5738},[266],[220,5740],{"className":5741,"style":5742},[270],"height:0.7667em;vertical-align:-0.0833em;",[220,5744,5656],{"className":5745,"style":1010},[275,276],[220,5747],{"className":5748,"style":1696},[608],[220,5750,2276],{"className":5751},[1700],[220,5753],{"className":5754,"style":1696},[608],[220,5756,5758,5761],{"className":5757},[266],[220,5759],{"className":5760,"style":1874},[270],[220,5762,1627],{"className":5763},[275],"是",[220,5766,5768,5790],{"className":5767},[223],[220,5769,5771],{"className":5770},[227],[229,5772,5773],{"xmlns":231},[233,5774,5775,5787],{},[236,5776,5777,5779,5781,5783,5785],{},[243,5778,1190],{"stretchy":245},[1097,5780,1627],{},[243,5782,572],{"separator":262},[239,5784,5656],{},[243,5786,1195],{"stretchy":245},[254,5788,5789],{"encoding":256},"[1,N]",[220,5791,5793],{"className":5792,"ariaHidden":262},[261],[220,5794,5796,5799,5802,5805,5808,5811,5814],{"className":5795},[266],[220,5797],{"className":5798,"style":271},[270],[220,5800,1190],{"className":5801},[281],[220,5803,1627],{"className":5804},[275],[220,5806,572],{"className":5807},[604],[220,5809],{"className":5810,"style":609},[608],[220,5812,5656],{"className":5813,"style":1010},[275,276],[220,5815,1195],{"className":5816},[288],"都出现，则",[220,5819,5821,5838],{"className":5820},[223],[220,5822,5824],{"className":5823},[227],[229,5825,5826],{"xmlns":231},[233,5827,5828,5836],{},[236,5829,5830,5832,5834],{},[239,5831,5656],{},[243,5833,2276],{},[1097,5835,1627],{},[254,5837,5732],{"encoding":256},[220,5839,5841,5859],{"className":5840,"ariaHidden":262},[261],[220,5842,5844,5847,5850,5853,5856],{"className":5843},[266],[220,5845],{"className":5846,"style":5742},[270],[220,5848,5656],{"className":5849,"style":1010},[275,276],[220,5851],{"className":5852,"style":1696},[608],[220,5854,2276],{"className":5855},[1700],[220,5857],{"className":5858,"style":1696},[608],[220,5860,5862,5865],{"className":5861},[266],[220,5863],{"className":5864,"style":1874},[270],[220,5866,1627],{"className":5867},[275],"是缺少的数,其余则是",[220,5870,5872,5893],{"className":5871},[223],[220,5873,5875],{"className":5874},[227],[229,5876,5877],{"xmlns":231},[233,5878,5879,5891],{},[236,5880,5881,5883,5885,5887,5889],{},[243,5882,1190],{"stretchy":245},[1097,5884,1627],{},[243,5886,572],{"separator":262},[239,5888,5656],{},[243,5890,1195],{"stretchy":245},[254,5892,5789],{"encoding":256},[220,5894,5896],{"className":5895,"ariaHidden":262},[261],[220,5897,5899,5902,5905,5908,5911,5914,5917],{"className":5898},[266],[220,5900],{"className":5901,"style":271},[270],[220,5903,1190],{"className":5904},[281],[220,5906,1627],{"className":5907},[275],[220,5909,572],{"className":5910},[604],[220,5912],{"className":5913,"style":609},[608],[220,5915,5656],{"className":5916,"style":1010},[275,276],[220,5918,1195],{"className":5919},[288],"然后，将数组中出现的正数进行标记，对于负数和0则不标记，那么，从小到大，没标记的第一个正整数就是缺失的数。",[24,5922,5923,5924,5952,5953,6005,6006,6057],{},"具体来说，对于遍历到的数",[220,5925,5927,5940],{"className":5926},[223],[220,5928,5930],{"className":5929},[227],[229,5931,5932],{"xmlns":231},[233,5933,5934,5938],{},[236,5935,5936],{},[239,5937,982],{},[254,5939,982],{"encoding":256},[220,5941,5943],{"className":5942,"ariaHidden":262},[261],[220,5944,5946,5949],{"className":5945},[266],[220,5947],{"className":5948,"style":701},[270],[220,5950,982],{"className":5951},[275,276]," ，如果它在 ",[220,5954,5956,5978],{"className":5955},[223],[220,5957,5959],{"className":5958},[227],[229,5960,5961],{"xmlns":231},[233,5962,5963,5975],{},[236,5964,5965,5967,5969,5971,5973],{},[243,5966,1190],{"stretchy":245},[1097,5968,1627],{},[243,5970,572],{"separator":262},[239,5972,5656],{},[243,5974,1195],{"stretchy":245},[254,5976,5977],{"encoding":256},"[1,N] ",[220,5979,5981],{"className":5980,"ariaHidden":262},[261],[220,5982,5984,5987,5990,5993,5996,5999,6002],{"className":5983},[266],[220,5985],{"className":5986,"style":271},[270],[220,5988,1190],{"className":5989},[281],[220,5991,1627],{"className":5992},[275],[220,5994,572],{"className":5995},[604],[220,5997],{"className":5998,"style":609},[608],[220,6000,5656],{"className":6001,"style":1010},[275,276],[220,6003,1195],{"className":6004},[288],"的范围内，那么就将数组中的第",[220,6007,6009,6027],{"className":6008},[223],[220,6010,6012],{"className":6011},[227],[229,6013,6014],{"xmlns":231},[233,6015,6016,6024],{},[236,6017,6018,6020,6022],{},[239,6019,982],{},[243,6021,1624],{},[1097,6023,1627],{},[254,6025,6026],{"encoding":256},"x−1 ",[220,6028,6030,6048],{"className":6029,"ariaHidden":262},[261],[220,6031,6033,6036,6039,6042,6045],{"className":6032},[266],[220,6034],{"className":6035,"style":1855},[270],[220,6037,982],{"className":6038},[275,276],[220,6040],{"className":6041,"style":1696},[608],[220,6043,1624],{"className":6044},[1700],[220,6046],{"className":6047,"style":1696},[608],[220,6049,6051,6054],{"className":6050},[266],[220,6052],{"className":6053,"style":1874},[270],[220,6055,1627],{"className":6056},[275],"个位置打上标记",[24,6059,6060,6063,6064,6092,6093,6145,6146],{},[28,6061,6062],{},"也就是说","，数组下标",[220,6065,6067,6080],{"className":6066},[223],[220,6068,6070],{"className":6069},[227],[229,6071,6072],{"xmlns":231},[233,6073,6074,6078],{},[236,6075,6076],{},[239,6077,914],{},[254,6079,914],{"encoding":256},[220,6081,6083],{"className":6082,"ariaHidden":262},[261],[220,6084,6086,6089],{"className":6085},[266],[220,6087],{"className":6088,"style":1261},[270],[220,6090,914],{"className":6091},[275,276],"对应着正数",[220,6094,6096,6114],{"className":6095},[223],[220,6097,6099],{"className":6098},[227],[229,6100,6101],{"xmlns":231},[233,6102,6103,6111],{},[236,6104,6105,6107,6109],{},[239,6106,914],{},[243,6108,2276],{},[1097,6110,1627],{},[254,6112,6113],{"encoding":256},"i+1",[220,6115,6117,6136],{"className":6116,"ariaHidden":262},[261],[220,6118,6120,6124,6127,6130,6133],{"className":6119},[266],[220,6121],{"className":6122,"style":6123},[270],"height:0.7429em;vertical-align:-0.0833em;",[220,6125,914],{"className":6126},[275,276],[220,6128],{"className":6129,"style":1696},[608],[220,6131,2276],{"className":6132},[1700],[220,6134],{"className":6135,"style":1696},[608],[220,6137,6139,6142],{"className":6138},[266],[220,6140],{"className":6141,"style":1874},[270],[220,6143,1627],{"className":6144},[275],"，第一个没被标记的位置，其就是答案，对应的数为",[220,6147,6149,6166],{"className":6148},[223],[220,6150,6152],{"className":6151},[227],[229,6153,6154],{"xmlns":231},[233,6155,6156,6164],{},[236,6157,6158,6160,6162],{},[239,6159,914],{},[243,6161,2276],{},[1097,6163,1627],{},[254,6165,6113],{"encoding":256},[220,6167,6169,6187],{"className":6168,"ariaHidden":262},[261],[220,6170,6172,6175,6178,6181,6184],{"className":6171},[266],[220,6173],{"className":6174,"style":6123},[270],[220,6176,914],{"className":6177},[275,276],[220,6179],{"className":6180,"style":1696},[608],[220,6182,2276],{"className":6183},[1700],[220,6185],{"className":6186,"style":1696},[608],[220,6188,6190,6193],{"className":6189},[266],[220,6191],{"className":6192,"style":1874},[270],[220,6194,1627],{"className":6195},[275],[49,6197,6200],{"className":6198,"code":6199,"language":54,"meta":55},[52],"class Solution {\npublic:\n    int firstMissingPositive(vector\u003Cint>& nums) {\n        int n = nums.size();\n        for(int &i : nums){\n            if(i \u003C= 0) i = n + 1;\n        }\n\n        for(int i = 0; i \u003C n;  i++)\n        {\n            int num = abs(nums[i]);\n            if(num \u003C= n)//进行标记\n                nums[num-1] = -abs(nums[num-1]);//变成负数\n        }\n        for(int i = 0;i \u003C n; i ++)\n        {\n            if(nums[i] > 0) return i + 1;\n        }\n        return n + 1;//1-n的正数全部出现\n    }\n};\n",[36,6201,6199],{"__ignoreMap":55},[10,6203,6204],{"id":6204},"矩阵",[14,6206,6208],{"id":6207},"矩阵置零set",[18,6209,6212],{"href":6210,"rel":6211},"https://leetcode.cn/problems/set-matrix-zeroes/",[22],"矩阵置零(set)",[24,6214,6215,6216,6219,6220,6223,6224,6219,6226,6228,6229,6232,6233,6235,6236,95,6239,6241,6242],{},"这里一开始我想用",[36,6217,6218],{"code":6218},"find()","和",[36,6221,6222],{"code":6222},"count()","但是想到只有",[36,6225,307],{"code":307},[36,6227,93],{"code":93},"这两种容器有(并且都是不允许",[28,6230,6231],{},"重复","的)。",[36,6234,307],{"code":307}," 只存",[28,6237,6238],{},"元素",[36,6240,93],{"code":93}," 存",[28,6243,6244],{},"键值对",[24,6246,6247],{},[28,6248,6249],{},"序列容器（vector/deque/list）",[124,6251,6252,6262],{},[127,6253,6254,6255,5316,6257,5316,6259],{},"支持 ",[36,6256,185],{"code":185},[36,6258,5315],{"code":5315},[36,6260,6261],{"code":6261},"insert",[127,6263,6264,6265,5316,6267,5316,6270],{},"支持就地构造 ",[36,6266,157],{"code":157},[36,6268,6269],{"code":6269},"emplace_front",[36,6271,6272],{"code":6272},"emplace(iterator, ...)",[6274,6275,6276],"blockquote",{},[24,6277,6278,197,6281,6283,6284,6286],{},[28,6279,6280],{},"注意",[36,6282,5590],{"code":5590}," 没有 ",[36,6285,5315],{"code":5315},"，因为在开头插入元素效率低（需要移动整个数组）。",[24,6288,6289],{},[28,6290,6291],{},"关联容器（set/multiset/map/multimap）",[124,6293,6294,6301],{},[127,6295,6296,6297,5316,6299],{},"没有“末尾/前端”的概念 → 没有 ",[36,6298,185],{"code":185},[36,6300,5315],{"code":5315},[127,6302,6303,6304,6307,6308,6311],{},"插入用 ",[36,6305,6306],{"code":6306},"insert()"," 或 ",[36,6309,6310],{"code":6310},"emplace()","，支持就地构造",[24,6313,6314],{},"下面是我的做法，通过利用2个set来存储出现0的位置，如果出现就将其变为0，否则不做变化。",[49,6316,6319],{"className":6317,"code":6318,"language":54,"meta":55},[52],"class Solution {\npublic:\n    void setZeroes(vector\u003Cvector\u003Cint>>& matrix) {\n        set\u003Cint> row,col;//行、列\n        int m = matrix.size(),n = matrix[0].size();\n        for(int i = 0; i \u003C m; i ++)\n            for(int j = 0; j \u003C n; j++)\n            {\n                if(matrix[i][j] == 0)\n                {\n                    row.emplace(i);\n                    col.emplace(j);\n                }\n            }\n        for(int i = 0; i \u003C m; i ++)\n        {\n            for(int j = 0; j \u003C n; j++)\n            {\n                if(row.find(i) != row.end()|| col.find(j) != col.end()) matrix[i][j] = 0;\n                else {}\n                cout \u003C\u003C matrix[i][j] \u003C\u003C \" \";\n            }\n            cout \u003C\u003C endl;\n        }\n    }\n};\n",[36,6320,6318],{"__ignoreMap":55},[14,6322,6324],{"id":6323},"螺旋矩阵",[18,6325,6323],{"href":6326,"rel":6327},"https://leetcode.cn/problems/spiral-matrix/",[22],[24,6329,6330],{},"当路径超出界限或者进入之前访问过的位置时，顺时针旋转，进入下一个方向",[49,6332,6335],{"className":6333,"code":6334,"language":54,"meta":55},[52],"class Solution {\nprivate:\n    //右下左上\n    static constexpr int dir[4][2] = {{0, 1}, {1, 0}, {0, -1}, {-1, 0}};\npublic:\n    vector\u003Cint> spiralOrder(vector\u003Cvector\u003Cint>>& matrix) {\n        if (matrix.size() == 0 || matrix[0].size() == 0) {\n            return {};\n        }\n        int rows = matrix.size(), columns = matrix[0].size();//行、列\n        vector\u003Cvector\u003Cbool>> visited(rows, vector\u003Cbool>(columns));\n        int total = rows * columns;\n        vector\u003Cint> order(total);//答案数组\n\n        int row = 0, column = 0;\n        int dirId = 0;\n        for (int i = 0; i \u003C total; i++) {\n            order[i] = matrix[row][column];\n            visited[row][column] = true;\n            int nextRow = row + dir[dirId][0], nextColumn = column + dir[dirId][1];//下一步的坐标\n            if (nextRow \u003C 0 || nextRow >= rows || nextColumn \u003C 0 || nextColumn >= columns || visited[nextRow][nextColumn]) {\n                dirId = (dirId + 1) % 4;\n            }\n            row += dir[dirId][0];\n            column += dir[dirId][1];\n        }\n        return order;\n    }\n};\n\n",[36,6336,6334],{"__ignoreMap":55},[14,6338,6340],{"id":6339},"旋转图像",[18,6341,6339],{"href":6342,"rel":6343},"https://leetcode.cn/problems/rotate-image/description/?envType=study-plan-v2&envId=top-100-liked",[22],[6274,6345,6346],{},[24,6347,6348,6349,6378,6379,6408,6409,6437,6438,6466],{},"关键是在对于矩阵中第",[220,6350,6352,6366],{"className":6351},[223],[220,6353,6355],{"className":6354},[227],[229,6356,6357],{"xmlns":231},[233,6358,6359,6363],{},[236,6360,6361],{},[239,6362,914],{},[254,6364,6365],{"encoding":256}," i",[220,6367,6369],{"className":6368,"ariaHidden":262},[261],[220,6370,6372,6375],{"className":6371},[266],[220,6373],{"className":6374,"style":1261},[270],[220,6376,914],{"className":6377},[275,276]," 行的第",[220,6380,6382,6395],{"className":6381},[223],[220,6383,6385],{"className":6384},[227],[229,6386,6387],{"xmlns":231},[233,6388,6389,6393],{},[236,6390,6391],{},[239,6392,4625],{},[254,6394,4625],{"encoding":256},[220,6396,6398],{"className":6397,"ariaHidden":262},[261],[220,6399,6401,6405],{"className":6400},[266],[220,6402],{"className":6403,"style":6404},[270],"height:0.854em;vertical-align:-0.1944em;",[220,6406,4625],{"className":6407,"style":4649},[275,276],"个元素，在旋转后，它出现在倒数第",[220,6410,6412,6425],{"className":6411},[223],[220,6413,6415],{"className":6414},[227],[229,6416,6417],{"xmlns":231},[233,6418,6419,6423],{},[236,6420,6421],{},[239,6422,914],{},[254,6424,914],{"encoding":256},[220,6426,6428],{"className":6427,"ariaHidden":262},[261],[220,6429,6431,6434],{"className":6430},[266],[220,6432],{"className":6433,"style":1261},[270],[220,6435,914],{"className":6436},[275,276],"列的第",[220,6439,6441,6454],{"className":6440},[223],[220,6442,6444],{"className":6443},[227],[229,6445,6446],{"xmlns":231},[233,6447,6448,6452],{},[236,6449,6450],{},[239,6451,4625],{},[254,6453,4625],{"encoding":256},[220,6455,6457],{"className":6456,"ariaHidden":262},[261],[220,6458,6460,6463],{"className":6459},[266],[220,6461],{"className":6462,"style":6404},[270],[220,6464,4625],{"className":6465,"style":4649},[275,276],"个位置。",[24,6468,6469,6470,6498,6499,6599,6600],{},"我们将其翻译成代码。由于矩阵中的行列从",[220,6471,6473,6486],{"className":6472},[223],[220,6474,6476],{"className":6475},[227],[229,6477,6478],{"xmlns":231},[233,6479,6480,6484],{},[236,6481,6482],{},[1097,6483,1099],{},[254,6485,1099],{"encoding":256},[220,6487,6489],{"className":6488,"ariaHidden":262},[261],[220,6490,6492,6495],{"className":6491},[266],[220,6493],{"className":6494,"style":1874},[270],[220,6496,1099],{"className":6497},[275],"开始计数，因此对于矩阵中的元素",[220,6500,6502,6548],{"className":6501},[223],[220,6503,6505],{"className":6504},[227],[229,6506,6507],{"xmlns":231},[233,6508,6509,6545],{},[236,6510,6511,6513,6515,6517,6519,6521,6523,6525,6527,6530,6533,6535,6537,6539,6541,6543],{},[239,6512,1915],{},[239,6514,18],{},[239,6516,974],{},[239,6518,1032],{},[239,6520,914],{},[239,6522,982],{},[243,6524,1190],{"stretchy":245},[239,6526,1032],{},[239,6528,6529],{},"o",[239,6531,6532],{},"w",[243,6534,1195],{"stretchy":245},[243,6536,1190],{"stretchy":245},[239,6538,580],{},[239,6540,6529],{},[239,6542,965],{},[243,6544,1195],{"stretchy":245},[254,6546,6547],{"encoding":256}," matrix[row][col]",[220,6549,6551],{"className":6550,"ariaHidden":262},[261],[220,6552,6554,6557,6560,6563,6566,6569,6572,6575,6579,6583,6586,6589,6593,6596],{"className":6553},[266],[220,6555],{"className":6556,"style":271},[270],[220,6558,2025],{"className":6559},[275,276],[220,6561,974],{"className":6562},[275,276],[220,6564,1032],{"className":6565,"style":277},[275,276],[220,6567,914],{"className":6568},[275,276],[220,6570,982],{"className":6571},[275,276],[220,6573,1190],{"className":6574},[281],[220,6576,6578],{"className":6577},[275,276],"ro",[220,6580,6532],{"className":6581,"style":6582},[275,276],"margin-right:0.02691em;",[220,6584,1195],{"className":6585},[288],[220,6587,1190],{"className":6588},[281],[220,6590,6592],{"className":6591},[275,276],"co",[220,6594,965],{"className":6595,"style":999},[275,276],[220,6597,1195],{"className":6598},[288],"，在旋转后，它的新位置为",[220,6601,6603,6666],{"className":6602},[223],[220,6604,6606],{"className":6605},[227],[229,6607,6608],{"xmlns":231},[233,6609,6610,6663],{},[236,6611,6612,6614,6616,6618,6620,6622,6635,6637,6639,6641,6643,6645,6647,6649,6651,6653,6655,6657,6659,6661],{},[239,6613,1915],{},[239,6615,18],{},[239,6617,974],{},[239,6619,1032],{},[239,6621,914],{},[6623,6624,6625,6627],"msub",{},[239,6626,982],{},[236,6628,6629,6631,6633],{},[239,6630,249],{},[239,6632,968],{},[239,6634,6532],{},[243,6636,1190],{"stretchy":245},[239,6638,580],{},[239,6640,6529],{},[239,6642,965],{},[243,6644,1195],{"stretchy":245},[243,6646,1190],{"stretchy":245},[239,6648,249],{},[243,6650,1624],{},[1097,6652,1627],{},[243,6654,1624],{},[239,6656,1032],{},[239,6658,6529],{},[239,6660,6532],{},[243,6662,1195],{"stretchy":245},[254,6664,6665],{"encoding":256}," matrix_{new}[col][n-1-row]",[220,6667,6669,6779,6798],{"className":6668,"ariaHidden":262},[261],[220,6670,6672,6675,6678,6681,6684,6687,6752,6755,6758,6761,6764,6767,6770,6773,6776],{"className":6671},[266],[220,6673],{"className":6674,"style":271},[270],[220,6676,2025],{"className":6677},[275,276],[220,6679,974],{"className":6680},[275,276],[220,6682,1032],{"className":6683,"style":277},[275,276],[220,6685,914],{"className":6686},[275,276],[220,6688,6690,6693],{"className":6689},[275],[220,6691,982],{"className":6692},[275,276],[220,6694,6697],{"className":6695},[6696],"msupsub",[220,6698,6702,6743],{"className":6699},[6700,6701],"vlist-t","vlist-t2",[220,6703,6706,6738],{"className":6704},[6705],"vlist-r",[220,6707,6711],{"className":6708,"style":6710},[6709],"vlist","height:0.1514em;",[220,6712,6714,6719],{"style":6713},"top:-2.55em;margin-left:0em;margin-right:0.05em;",[220,6715],{"className":6716,"style":6718},[6717],"pstrut","height:2.7em;",[220,6720,6726],{"className":6721},[6722,6723,6724,6725],"sizing","reset-size6","size3","mtight",[220,6727,6729,6732,6735],{"className":6728},[275,6725],[220,6730,249],{"className":6731},[275,276,6725],[220,6733,968],{"className":6734},[275,276,6725],[220,6736,6532],{"className":6737,"style":6582},[275,276,6725],[220,6739,6742],{"className":6740},[6741],"vlist-s","​",[220,6744,6746],{"className":6745},[6705],[220,6747,6750],{"className":6748,"style":6749},[6709],"height:0.15em;",[220,6751],{},[220,6753,1190],{"className":6754},[281],[220,6756,6592],{"className":6757},[275,276],[220,6759,965],{"className":6760,"style":999},[275,276],[220,6762,1195],{"className":6763},[288],[220,6765,1190],{"className":6766},[281],[220,6768,249],{"className":6769},[275,276],[220,6771],{"className":6772,"style":1696},[608],[220,6774,1624],{"className":6775},[1700],[220,6777],{"className":6778,"style":1696},[608],[220,6780,6782,6786,6789,6792,6795],{"className":6781},[266],[220,6783],{"className":6784,"style":6785},[270],"height:0.7278em;vertical-align:-0.0833em;",[220,6787,1627],{"className":6788},[275],[220,6790],{"className":6791,"style":1696},[608],[220,6793,1624],{"className":6794},[1700],[220,6796],{"className":6797,"style":1696},[608],[220,6799,6801,6804,6807,6810],{"className":6800},[266],[220,6802],{"className":6803,"style":271},[270],[220,6805,6578],{"className":6806},[275,276],[220,6808,6532],{"className":6809,"style":6582},[275,276],[220,6811,1195],{"className":6812},[288],[24,6814,6815,6816],{},"参考题解:",[18,6817,6339],{"href":6818,"rel":6819},"https://leetcode.cn/problems/rotate-image/solutions/526980/xuan-zhuan-tu-xiang-by-leetcode-solution-vu3m/?envType=study-plan-v2&envId=top-100-liked",[22],[24,6821,6822,6823,31],{},"关键是在推出每个点的旋转涉及到四个点时，应该",[28,6824,6825],{},"旋转哪些点",[5560,6827],{":caption":5562,"src":6828},"https://7.isyangs.cn/20250822/e30ded2a642f00c5f3614895d87b9628.png",[24,6830,6831],{},"偶数如图所示，只需枚举四个块中一个即可，为了方便起见，选择蓝色的块。而当奇数时，要考虑下，",[5560,6833],{":caption":5562,"src":6834},"https://7.isyangs.cn/20250824/7dd6de267732fb29496be9516813ec7f.webp",[24,6836,6837],{},"同样四种颜色块选一个，这里我们将图中垂直纸面向左外翻转，枚举青色的这块，正好和偶数的能够对应上了。",[49,6839,6842],{"className":6840,"code":6841,"language":54,"meta":55},[52],"\nclass Solution {\npublic:\n    void rotate(vector\u003Cvector\u003Cint>>& matrix) {\n        int n = matrix.size();\n\n        for(int i = 0; i \u003C n / 2; i ++)\n            for(int j = 0; j \u003C (n + 1) / 2;j++)\n            {\n                int tmp = matrix[i][j];\n                matrix[i][j] = matrix[n - j - 1][i];\n                matrix[n - j - 1][i] = matrix[n - i - 1][n - j - 1];\n                matrix[n - i - 1][n - j - 1] = matrix[j][n - i - 1];\n                matrix[j][n - i - 1] = tmp;\n            }\n    }\n};\n",[36,6843,6841],{"__ignoreMap":55},[14,6845,6847],{"id":6846},"搜索二维矩阵-ii",[18,6848,6851],{"href":6849,"rel":6850},"https://leetcode.cn/problems/search-a-2d-matrix-ii/description/?envType=study-plan-v2&envId=top-100-liked",[22],"搜索二维矩阵 II",[24,6853,6854],{},"直接暴力枚举，因为数据较小，不会超时",[49,6856,6859],{"className":6857,"code":6858,"language":54,"meta":55},[52],"class Solution {\npublic:\n    bool searchMatrix(vector\u003Cvector\u003Cint>>& matrix, int target) {\n        int n = matrix.size(),m = matrix[0].size();\n        for(int i = 0; i \u003C n;i++)\n        for(int j = 0; j \u003C m;j++)\n        {\n            if(matrix[i][j] == target) return true;\n        }\n        return false;\n    }\n};\n",[36,6860,6858],{"__ignoreMap":55},[24,6862,6863,6864,31],{},"但是这种并不",[28,6865,6866],{},"高效",[24,6868,6869,6872,6873,95,6937,6965,6966,6995],{},[28,6870,6871],{},"每行二分查找","，复杂度 ",[220,6874,6876,6904],{"className":6875},[223],[220,6877,6879],{"className":6878},[227],[229,6880,6881],{"xmlns":231},[233,6882,6883,6901],{},[236,6884,6885,6887,6889,6891,6893,6895,6897,6899],{},[239,6886,241],{},[243,6888,246],{"stretchy":245},[239,6890,1915],{},[239,6892,965],{},[239,6894,6529],{},[239,6896,1037],{},[239,6898,249],{},[243,6900,252],{"stretchy":245},[254,6902,6903],{"encoding":256},"O(m log n)",[220,6905,6907],{"className":6906,"ariaHidden":262},[261],[220,6908,6910,6913,6916,6919,6922,6925,6928,6931,6934],{"className":6909},[266],[220,6911],{"className":6912,"style":271},[270],[220,6914,241],{"className":6915,"style":277},[275,276],[220,6917,246],{"className":6918},[281],[220,6920,1915],{"className":6921},[275,276],[220,6923,965],{"className":6924,"style":999},[275,276],[220,6926,6529],{"className":6927},[275,276],[220,6929,1037],{"className":6930,"style":1070},[275,276],[220,6932,249],{"className":6933},[275,276],[220,6935,252],{"className":6936},[288],[220,6938,6940,6953],{"className":6939},[223],[220,6941,6943],{"className":6942},[227],[229,6944,6945],{"xmlns":231},[233,6946,6947,6951],{},[236,6948,6949],{},[239,6950,1915],{},[254,6952,1915],{"encoding":256},[220,6954,6956],{"className":6955,"ariaHidden":262},[261],[220,6957,6959,6962],{"className":6958},[266],[220,6960],{"className":6961,"style":701},[270],[220,6963,1915],{"className":6964},[275,276]," 行",[220,6967,6969,6983],{"className":6968},[223],[220,6970,6972],{"className":6971},[227],[229,6973,6974],{"xmlns":231},[233,6975,6976,6980],{},[236,6977,6978],{},[239,6979,249],{},[254,6981,6982],{"encoding":256}," n",[220,6984,6986],{"className":6985,"ariaHidden":262},[261],[220,6987,6989,6992],{"className":6988},[266],[220,6990],{"className":6991,"style":701},[270],[220,6993,249],{"className":6994},[275,276]," 列。",[24,6997,6998,6999,7002,7003,7072,7073,31],{},"核心点：",[36,7000,7001],{"code":7001},"lower_bound"," 找到第一个 ",[220,7004,7006,7032],{"className":7005},[223],[220,7007,7009],{"className":7008},[227],[229,7010,7011],{"xmlns":231},[233,7012,7013,7029],{},[236,7014,7015,7017,7019,7021,7023,7025,7027],{},[243,7016,4291],{},[239,7018,974],{},[239,7020,18],{},[239,7022,1032],{},[239,7024,1037],{},[239,7026,968],{},[239,7028,974],{},[254,7030,7031],{"encoding":256},"≥ target",[220,7033,7035,7047],{"className":7034,"ariaHidden":262},[261],[220,7036,7038,7041,7044],{"className":7037},[266],[220,7039],{"className":7040,"style":661},[270],[220,7042,4291],{"className":7043},[672],[220,7045],{"className":7046,"style":668},[608],[220,7048,7050,7054,7057,7060,7063,7066,7069],{"className":7049},[266],[220,7051],{"className":7052,"style":7053},[270],"height:0.8095em;vertical-align:-0.1944em;",[220,7055,974],{"className":7056},[275,276],[220,7058,18],{"className":7059},[275,276],[220,7061,1032],{"className":7062,"style":277},[275,276],[220,7064,1037],{"className":7065,"style":1070},[275,276],[220,7067,968],{"className":7068},[275,276],[220,7070,974],{"className":7071},[275,276]," 的位置，然后判断是否等于",[220,7074,7076,7100],{"className":7075},[223],[220,7077,7079],{"className":7078},[227],[229,7080,7081],{"xmlns":231},[233,7082,7083,7097],{},[236,7084,7085,7087,7089,7091,7093,7095],{},[239,7086,974],{},[239,7088,18],{},[239,7090,1032],{},[239,7092,1037],{},[239,7094,968],{},[239,7096,974],{},[254,7098,7099],{"encoding":256}," target",[220,7101,7103],{"className":7102,"ariaHidden":262},[261],[220,7104,7106,7109,7112,7115,7118,7121,7124],{"className":7105},[266],[220,7107],{"className":7108,"style":7053},[270],[220,7110,974],{"className":7111},[275,276],[220,7113,18],{"className":7114},[275,276],[220,7116,1032],{"className":7117,"style":277},[275,276],[220,7119,1037],{"className":7120,"style":1070},[275,276],[220,7122,968],{"className":7123},[275,276],[220,7125,974],{"className":7126},[275,276],[24,7128,7129,7130,7132],{},"介绍下",[36,7131,7001],{"code":7001},"函数：",[24,7134,7135,5157,7138,7141,7142,31],{},[28,7136,7137],{},"功能",[36,7139,7140],{"code":7140},"[first, last)"," 范围内查找 ",[28,7143,7144],{},"第一个不小于 value 的元素位置",[24,7146,7147,7150,7151,7154],{},[28,7148,7149],{},"要求","：区间必须 ",[28,7152,7153],{},"已排序","（升序）才能正确工作。",[24,7156,7157,7160,7161,7164,7165,31],{},[28,7158,7159],{},"返回值","：一个",[28,7162,7163],{},"迭代器","，指向 ",[28,7166,7167],{},"第一个 >= value 的元素",[124,7169,7170],{},[127,7171,7172,7173,7176],{},"如果所有元素都小于 value，返回 ",[36,7174,7175],{"code":7175},"last","（即末尾迭代器）。",[49,7178,7181],{"className":7179,"code":7180,"language":54,"meta":55},[52],"class Solution {\npublic:\n    bool searchMatrix(vector\u003Cvector\u003Cint>>& matrix, int target) {\n        for(const auto& row : matrix)\n        {\n            auto it = lower_bound(row.begin(),row.end(),target);\n            if(it != row.end() && *it == target) return true;\n        }\n        return false;\n    }\n};\n",[36,7182,7180],{"__ignoreMap":55},[14,7184,7186],{"id":7185},"划分字母区间",[18,7187,7185],{"href":7188,"rel":7189},"https://leetcode.cn/problems/partition-labels/",[22],[24,7191,7192,7193,7196,7197,31],{},"要求片段数",[28,7194,7195],{},"尽可能的多","，同时",[28,7198,7199],{},"一个字母只能出现在一个片段中",[49,7201,7204],{"className":7202,"code":7203,"language":54,"meta":55},[52],"class Solution {\npublic:\n    vector\u003Cint> partitionLabels(string s) {\n        int last[26];\n        int length = s.size();\n        for(int i = 0; i \u003C length; i ++) last[s[i] - 'a'] = i;//记录每个字母出现的下标\n\n        vector\u003Cint> partition;\n        int start = 0,end = 0;\n        for(int i = 0; i \u003C length;i++){\n            end = max(end,last[s[i]-'a']);\n            if(i == end){\n                partition.push_back(end-start+1);\n                start = end + 1;\n            }\n        }\n        return partition;\n    }\n};\n",[36,7205,7203],{"__ignoreMap":55},[10,7207,7208],{"id":7208},"链表",[14,7210,7212],{"id":7211},"相交链表",[18,7213,7211],{"href":7214,"rel":7215},"https://leetcode.cn/problems/intersection-of-two-linked-lists/",[22],[49,7217,7220],{"className":7218,"code":7219,"language":54,"meta":55},[52],"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {\n        unordered_set\u003CListNode*> visited;\n        ListNode *temp = headA;\n        while(temp != NULL){\n            visited.insert(temp);\n            temp = temp->next;\n        }\n        temp = headB;\n        while(temp != NULL){\n            if(visited.count(temp)) return temp;\n            temp = temp->next;\n        }\n        return NULL;\n    }\n};\n",[36,7221,7219],{"__ignoreMap":55},[14,7223,7225],{"id":7224},"反转链表",[18,7226,7224],{"href":7227,"rel":7228},"https://leetcode.cn/problems/reverse-linked-list/",[22],[49,7230,7233],{"className":7231,"code":7232,"language":54,"meta":55},[52],"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* reverseList(ListNode* head) {\n        ListNode* prev = nullptr;// 反转后链表的头，一开始为空\n        ListNode* cur = head;\n        while(cur){\n            ListNode* next = cur->next;// 1. 保存下一个节点\n            cur->next = prev;//2. 进行翻转\n            prev = cur;//3. 将头节点前进\n            cur = next;//4. 下一个节点\n        }\n        return prev;\n    }\n};\n",[36,7234,7232],{"__ignoreMap":55},[14,7236,7238],{"id":7237},"回文链表",[18,7239,7237],{"href":7240,"rel":7241},"https://leetcode.cn/problems/palindrome-linked-list/",[22],[24,7243,7244],{},"指针存的是地址.",[24,7246,7247],{},"通过快慢指针，得到中点位置，然后对两段进行比较。",[49,7249,7252],{"className":7250,"code":7251,"language":54,"meta":55},[52],"class Solution {\npublic:\n    bool isPalindrome(ListNode* head) {\n        if (!head || !head->next) return true;\n\n        // 1. 快慢指针找中点\n        ListNode* slow = head;\n        ListNode* fast = head;\n        while (fast->next && fast->next->next) {\n            slow = slow->next;\n            fast = fast->next->next;\n        }\n        // 此时 slow 在“前半段的末尾”：\n        // n 为偶数：slow 在左中点\n        // n 为奇数：slow 在真正中点的位置（下一步反转从 slow->next 开始）\n\n        // 2. 反转后半部分\n        ListNode* second = reverseList(slow->next);\n\n        // 3. 比较前半部分和反转后的后半部分\n        ListNode* p1 = head;\n        ListNode* p2 = second;\n        bool res = true;\n        while (p2) {\n            if (p1->val != p2->val) {\n                res = false;\n                break;\n            }\n            p1 = p1->next;\n            p2 = p2->next;\n        }\n        return res;\n    }\n\n    ListNode* reverseList(ListNode* head) {//返回头节点\n        ListNode* prev = nullptr;\n        ListNode* curr = head;\n        while (curr) {\n            ListNode* next = curr->next;\n            curr->next = prev;\n            prev = curr;\n            curr = next;\n        }\n        return prev;\n    }\n};\n\n",[36,7253,7251],{"__ignoreMap":55},[14,7255,7256],{"id":7256},"环形链表",[49,7258,7261],{"className":7259,"code":7260,"language":54,"meta":55},[52],"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    bool hasCycle(ListNode *head) {\n        unordered_set\u003CListNode*> seen;\n        while(head != NULL){\n            if(seen.count(head)) return true;\n            seen.insert(head);\n            head = head->next;\n        } \n        return false;\n    }\n};\n",[36,7262,7260],{"__ignoreMap":55},[14,7264,7266],{"id":7265},"环形链表-ii",[18,7267,7270],{"href":7268,"rel":7269},"https://leetcode.cn/problems/linked-list-cycle-ii/",[22],"环形链表 II",[49,7272,7275],{"className":7273,"code":7274,"language":54,"meta":55},[52],"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode *detectCycle(ListNode *head) {\n        unordered_set\u003CListNode*> seen;\n        while(head != NULL)\n        {\n            if(seen.count(head)) return head;\n            seen.insert(head);\n            head = head->next;\n        }\n        return NULL;\n    }\n};\n",[36,7276,7274],{"__ignoreMap":55},[14,7278,7280],{"id":7279},"合并两个有序链表",[18,7281,7279],{"href":7282,"rel":7283},"https://leetcode.cn/problems/merge-two-sorted-lists/",[22],[10,7285,7286],{"id":7286},"回溯",[14,7288,7290],{"id":7289},"全排列",[18,7291,7289],{"href":7292,"rel":7293},"https://leetcode.cn/problems/permutations/",[22],[49,7295,7298],{"className":7296,"code":7297,"language":54,"meta":55},[52],"class Solution {\npublic:     //output是待排列数组\n    void backtrack(vector\u003Cvector\u003Cint>>& res,vector\u003Cint>& output,int first,int len)\n    {//len数组长度，first当前填充位置\n        if(first == len){\n            res.emplace_back(output);\n            return;\n        }\n        for(int i = first;i \u003C len;i++){//按位置考虑\n            swap(output[i],output[first]);\n            backtrack(res,output,first+1,len);\n            swap(output[i],output[first]);\n        }\n    }\n    vector\u003Cvector\u003Cint>> permute(vector\u003Cint>& nums) {\n        vector\u003Cvector\u003Cint>> res;\n        backtrack(res,nums,0,(int)nums.size());\n        return res;\n    }\n};\n",[36,7299,7297],{"__ignoreMap":55},[14,7301,7303],{"id":7302},"n-皇后",[18,7304,7307],{"href":7305,"rel":7306},"https://leetcode.cn/problems/n-queens/",[22],"N 皇后",[24,7309,7310,7312],{},[36,7311,438],{"code":438},"作用是清空里面的内容。",[24,7314,7315,5529,7317,7320,7321,7323,7324,7323,7326,7328,7329,7332,7333,7335],{},[36,7316,5587],{"code":5587},[28,7318,7319],{},"STL 容器的方法","（如 ",[36,7322,46],{"code":46},", ",[36,7325,141],{"code":141},[36,7327,164],{"code":164},", …），作用是",[28,7330,7331],{},"把容器重新赋值（替换内容）","。 它和 ",[36,7334,1490],{"code":1490}," 类似，但更灵活",[49,7337,7340],{"className":7338,"code":7339,"language":54,"meta":55},[52],"class Solution {\npublic:\n    vector\u003Cvector\u003Cstring>> res;  // 存所有解\n    vector\u003Cstring> board;        // 当前棋盘\n    vector\u003Cbool> col, dg, udg;   // 列、主对角线、副对角线\n    int n;\n\n    void dfs(int r) {//当前考虑到了第几行\n        if (r == n) {\n            res.push_back(board); // 保存当前解\n            return;\n        }\n        for (int i = 0; i \u003C n; i++) {//考虑列的填充(r行i列)\n            if (!col[i] && !dg[r + i] && !udg[i - r + n]) {//当前位置能填的话\n                col[i] = dg[r + i] = udg[i - r + n] = true;\n                board[r][i] = 'Q';\n                dfs(r + 1);\n                board[r][i] = '.';\n                col[i] = dg[r + i] = udg[i - r + n] = false;\n            }\n        }\n    }\n\n    vector\u003Cvector\u003Cstring>> solveNQueens(int _n) {\n        n = _n;\n        res.clear();\n        board = vector\u003Cstring>(n, string(n, '.'));\n        col.assign(n, false);\n        dg.assign(2 * n, false);//对角线\n        udg.assign(2 * n, false);\n        dfs(0);\n        return res;\n    }\n};\n\n",[36,7341,7339],{"__ignoreMap":55},[10,7343,7344],{"id":7344},"贪心算法",[14,7346,7348],{"id":7347},"买卖股票的最佳时机",[18,7349,7347],{"href":7350,"rel":7351},"https://leetcode.cn/problems/best-time-to-buy-and-sell-stock/",[22],[49,7353,7356],{"className":7354,"code":7355,"language":54,"meta":55},[52],"class Solution {\npublic:\n    int maxProfit(vector\u003Cint>& prices) {\n        int n = prices.size();\n        int ans = 0,minprice = prices[0];\n        for(auto i : prices)\n        {\n            minprice = min(minprice,i);\n            ans = max(ans,i - minprice);\n        }\n        return ans;\n    }\n};\n",[36,7357,7355],{"__ignoreMap":55},[14,7359,7361],{"id":7360},"跳跃游戏",[18,7362,7360],{"href":7363,"rel":7364},"https://leetcode.cn/problems/jump-game/",[22],[24,7366,7367,7368,7436,7437,7502,7503,7568,7569],{},"只需每次考虑最远能跳到哪。维护一个当前能够跳到最远的变量",[220,7369,7371,7402],{"className":7370},[223],[220,7372,7374],{"className":7373},[227],[229,7375,7376],{"xmlns":231},[233,7377,7378,7399],{},[236,7379,7380,7382,7384,7386,7388,7390,7392,7394,7397],{},[239,7381,1032],{},[239,7383,914],{},[239,7385,1037],{},[239,7387,1040],{},[239,7389,974],{},[239,7391,1915],{},[239,7393,6529],{},[239,7395,7396],{},"s",[239,7398,974],{},[254,7400,7401],{"encoding":256},"rightmost",[220,7403,7405],{"className":7404,"ariaHidden":262},[261],[220,7406,7408,7411,7414,7417,7420,7423,7426,7429,7433],{"className":7407},[266],[220,7409],{"className":7410,"style":995},[270],[220,7412,1032],{"className":7413,"style":277},[275,276],[220,7415,914],{"className":7416},[275,276],[220,7418,1037],{"className":7419,"style":1070},[275,276],[220,7421,1040],{"className":7422},[275,276],[220,7424,974],{"className":7425},[275,276],[220,7427,1915],{"className":7428},[275,276],[220,7430,7432],{"className":7431},[275,276],"os",[220,7434,974],{"className":7435},[275,276],",遍历数组，先看当前位置是否在当前能跳到的位置上，如果可以，更新",[220,7438,7440,7469],{"className":7439},[223],[220,7441,7443],{"className":7442},[227],[229,7444,7445],{"xmlns":231},[233,7446,7447,7467],{},[236,7448,7449,7451,7453,7455,7457,7459,7461,7463,7465],{},[239,7450,1032],{},[239,7452,914],{},[239,7454,1037],{},[239,7456,1040],{},[239,7458,974],{},[239,7460,1915],{},[239,7462,6529],{},[239,7464,7396],{},[239,7466,974],{},[254,7468,7401],{"encoding":256},[220,7470,7472],{"className":7471,"ariaHidden":262},[261],[220,7473,7475,7478,7481,7484,7487,7490,7493,7496,7499],{"className":7474},[266],[220,7476],{"className":7477,"style":995},[270],[220,7479,1032],{"className":7480,"style":277},[275,276],[220,7482,914],{"className":7483},[275,276],[220,7485,1037],{"className":7486,"style":1070},[275,276],[220,7488,1040],{"className":7489},[275,276],[220,7491,974],{"className":7492},[275,276],[220,7494,1915],{"className":7495},[275,276],[220,7497,7432],{"className":7498},[275,276],[220,7500,974],{"className":7501},[275,276],"。然后判断当前的",[220,7504,7506,7535],{"className":7505},[223],[220,7507,7509],{"className":7508},[227],[229,7510,7511],{"xmlns":231},[233,7512,7513,7533],{},[236,7514,7515,7517,7519,7521,7523,7525,7527,7529,7531],{},[239,7516,1032],{},[239,7518,914],{},[239,7520,1037],{},[239,7522,1040],{},[239,7524,974],{},[239,7526,1915],{},[239,7528,6529],{},[239,7530,7396],{},[239,7532,974],{},[254,7534,7401],{"encoding":256},[220,7536,7538],{"className":7537,"ariaHidden":262},[261],[220,7539,7541,7544,7547,7550,7553,7556,7559,7562,7565],{"className":7540},[266],[220,7542],{"className":7543,"style":995},[270],[220,7545,1032],{"className":7546,"style":277},[275,276],[220,7548,914],{"className":7549},[275,276],[220,7551,1037],{"className":7552,"style":1070},[275,276],[220,7554,1040],{"className":7555},[275,276],[220,7557,974],{"className":7558},[275,276],[220,7560,1915],{"className":7561},[275,276],[220,7563,7432],{"className":7564},[275,276],[220,7566,974],{"className":7567},[275,276],"是否",[220,7570,7572,7595],{"className":7571},[223],[220,7573,7575],{"className":7574},[227],[229,7576,7577],{"xmlns":231},[233,7578,7579,7592],{},[236,7580,7581,7584,7586,7588,7590],{},[243,7582,7583],{},">",[243,7585,1490],{},[239,7587,249],{},[243,7589,1624],{},[1097,7591,1627],{},[254,7593,7594],{"encoding":256},">=n-1",[220,7596,7598,7612,7630],{"className":7597,"ariaHidden":262},[261],[220,7599,7601,7605,7609],{"className":7600},[266],[220,7602],{"className":7603,"style":7604},[270],"height:0.5782em;vertical-align:-0.0391em;",[220,7606,7608],{"className":7607},[672],">=",[220,7610],{"className":7611,"style":668},[608],[220,7613,7615,7618,7621,7624,7627],{"className":7614},[266],[220,7616],{"className":7617,"style":1855},[270],[220,7619,249],{"className":7620},[275,276],[220,7622],{"className":7623,"style":1696},[608],[220,7625,1624],{"className":7626},[1700],[220,7628],{"className":7629,"style":1696},[608],[220,7631,7633,7636],{"className":7632},[266],[220,7634],{"className":7635,"style":1874},[270],[220,7637,1627],{"className":7638},[275],[49,7640,7643],{"className":7641,"code":7642,"language":54,"meta":55},[52],"class Solution {\npublic:\n    bool canJump(vector\u003Cint>& nums) {\n        int n = nums.size();\n        int rightmost = 0;//当前最远能够到达的位置\n        for(int i = 0; i \u003C n;i++)\n        {\n            if(i \u003C= rightmost) \n            {\n                rightmost = max(rightmost,i + nums[i]);\n                if(rightmost >= n - 1) return true;\n            }\n        }\n        return false;\n    }\n};\n",[36,7644,7642],{"__ignoreMap":55},[14,7646,7648],{"id":7647},"跳跃游戏-ii",[18,7649,7652],{"href":7650,"rel":7651},"https://leetcode.cn/problems/jump-game-ii/",[22],"跳跃游戏 II",[24,7654,7655,7656,327,7659,7662],{},"每次找到",[28,7657,7658],{},"可到达",[28,7660,7661],{},"最远","位置",[24,7664,7665,7666,7669,7670,7673],{},"在遍历数组时，我们",[28,7667,7668],{},"不访问最后一个元素","，这是因为在访问最后一个元素之前，我们的边界一定大于等于最后一个位置，否则就无法跳到最后一个位置了。",[28,7671,7672],{},"如果访问最后一个元素","，在边界正好为最后一个位置的情况下，我们会增加一次「不必要的跳跃次数」，因此我们不必访问最后一个元素。",[24,7675,7676,7677,7680,7681,31],{},"关于",[28,7678,7679],{},"这里","，详细解释下:如果访问最后一个元素，这种情况很好理解，之前已经能用更少的步数到达，不用再加次数，这里的依据是在",[28,7682,7683],{},"访问最后一个元素之前，我们的边界一定大于等于最后一个位置",[24,7685,7686,7687,7690,7691,7694,7695,7768,7769,7864,7865,7768,7916,8135,8136,8184,8185,8236,8237,8332],{},"那么",[28,7688,7689],{},"我们假设","访问最后一个元素之前，边界",[28,7692,7693],{},"小于","最后一个位置。也就是说当访问",[220,7696,7698,7720],{"className":7697},[223],[220,7699,7701],{"className":7700},[227],[229,7702,7703],{"xmlns":231},[233,7704,7705,7717],{},[236,7706,7707,7709,7711,7713,7715],{},[239,7708,914],{},[243,7710,1490],{},[239,7712,249],{},[243,7714,1624],{},[1097,7716,2140],{},[254,7718,7719],{"encoding":256},"i=n-2",[220,7721,7723,7741,7759],{"className":7722,"ariaHidden":262},[261],[220,7724,7726,7729,7732,7735,7738],{"className":7725},[266],[220,7727],{"className":7728,"style":1261},[270],[220,7730,914],{"className":7731},[275,276],[220,7733],{"className":7734,"style":668},[608],[220,7736,1490],{"className":7737},[672],[220,7739],{"className":7740,"style":668},[608],[220,7742,7744,7747,7750,7753,7756],{"className":7743},[266],[220,7745],{"className":7746,"style":1855},[270],[220,7748,249],{"className":7749},[275,276],[220,7751],{"className":7752,"style":1696},[608],[220,7754,1624],{"className":7755},[1700],[220,7757],{"className":7758,"style":1696},[608],[220,7760,7762,7765],{"className":7761},[266],[220,7763],{"className":7764,"style":1874},[270],[220,7766,2140],{"className":7767},[275],"时，",[220,7770,7772,7805],{"className":7771},[223],[220,7773,7775],{"className":7774},[227],[229,7776,7777],{"xmlns":231},[233,7778,7779,7802],{},[236,7780,7781,7783,7785,7787,7790,7792,7794,7796,7798,7800],{},[239,7782,1915],{},[239,7784,18],{},[239,7786,982],{},[239,7788,7789],{},"P",[239,7791,6529],{},[239,7793,7396],{},[243,7795,1106],{},[239,7797,249],{},[243,7799,1624],{},[1097,7801,1627],{},[254,7803,7804],{"encoding":256},"maxPos\u003Cn-1",[220,7806,7808,7837,7855],{"className":7807,"ariaHidden":262},[261],[220,7809,7811,7815,7818,7821,7825,7828,7831,7834],{"className":7810},[266],[220,7812],{"className":7813,"style":7814},[270],"height:0.7224em;vertical-align:-0.0391em;",[220,7816,2025],{"className":7817},[275,276],[220,7819,982],{"className":7820},[275,276],[220,7822,7789],{"className":7823,"style":7824},[275,276],"margin-right:0.13889em;",[220,7826,7432],{"className":7827},[275,276],[220,7829],{"className":7830,"style":668},[608],[220,7832,1106],{"className":7833},[672],[220,7835],{"className":7836,"style":668},[608],[220,7838,7840,7843,7846,7849,7852],{"className":7839},[266],[220,7841],{"className":7842,"style":1855},[270],[220,7844,249],{"className":7845},[275,276],[220,7847],{"className":7848,"style":1696},[608],[220,7850,1624],{"className":7851},[1700],[220,7853],{"className":7854,"style":1696},[608],[220,7856,7858,7861],{"className":7857},[266],[220,7859],{"className":7860,"style":1874},[270],[220,7862,1627],{"className":7863},[275],"。当到达",[220,7866,7868,7886],{"className":7867},[223],[220,7869,7871],{"className":7870},[227],[229,7872,7873],{"xmlns":231},[233,7874,7875,7883],{},[236,7876,7877,7879,7881],{},[239,7878,249],{},[243,7880,1624],{},[1097,7882,2140],{},[254,7884,7885],{"encoding":256},"n-2",[220,7887,7889,7907],{"className":7888,"ariaHidden":262},[261],[220,7890,7892,7895,7898,7901,7904],{"className":7891},[266],[220,7893],{"className":7894,"style":1855},[270],[220,7896,249],{"className":7897},[275,276],[220,7899],{"className":7900,"style":1696},[608],[220,7902,1624],{"className":7903},[1700],[220,7905],{"className":7906,"style":1696},[608],[220,7908,7910,7913],{"className":7909},[266],[220,7911],{"className":7912,"style":1874},[270],[220,7914,2140],{"className":7915},[275],[220,7917,7919,7996],{"className":7918},[223],[220,7920,7922],{"className":7921},[227],[229,7923,7924],{"xmlns":231},[233,7925,7926,7993],{},[236,7927,7928,7930,7932,7934,7936,7938,7940,7942,7944,7946,7948,7950,7952,7954,7956,7958,7960,7962,7964,7966,7968,7970,7972,7974,7977,7979,7981,7983,7985,7987,7989,7991],{},[239,7929,1915],{},[239,7931,18],{},[239,7933,982],{},[239,7935,7789],{},[239,7937,6529],{},[239,7939,7396],{},[243,7941,1490],{},[239,7943,1915],{},[239,7945,18],{},[239,7947,982],{},[243,7949,246],{"stretchy":245},[239,7951,1915],{},[239,7953,18],{},[239,7955,982],{},[239,7957,7789],{},[239,7959,6529],{},[239,7961,7396],{},[243,7963,572],{"separator":262},[239,7965,249],{},[243,7967,1624],{},[1097,7969,2140],{},[243,7971,2276],{},[239,7973,249],{},[239,7975,7976],{},"u",[239,7978,1915],{},[239,7980,7396],{},[243,7982,1190],{"stretchy":245},[239,7984,249],{},[243,7986,1624],{},[1097,7988,2140],{},[243,7990,1195],{"stretchy":245},[243,7992,252],{"stretchy":245},[254,7994,7995],{"encoding":256},"maxPos = max(maxPos,n-2+nums[n-2])",[220,7997,7999,8027,8072,8090,8123],{"className":7998,"ariaHidden":262},[261],[220,8000,8002,8006,8009,8012,8015,8018,8021,8024],{"className":8001},[266],[220,8003],{"className":8004,"style":8005},[270],"height:0.6833em;",[220,8007,2025],{"className":8008},[275,276],[220,8010,982],{"className":8011},[275,276],[220,8013,7789],{"className":8014,"style":7824},[275,276],[220,8016,7432],{"className":8017},[275,276],[220,8019],{"className":8020,"style":668},[608],[220,8022,1490],{"className":8023},[672],[220,8025],{"className":8026,"style":668},[608],[220,8028,8030,8033,8036,8039,8042,8045,8048,8051,8054,8057,8060,8063,8066,8069],{"className":8029},[266],[220,8031],{"className":8032,"style":271},[270],[220,8034,2025],{"className":8035},[275,276],[220,8037,982],{"className":8038},[275,276],[220,8040,246],{"className":8041},[281],[220,8043,2025],{"className":8044},[275,276],[220,8046,982],{"className":8047},[275,276],[220,8049,7789],{"className":8050,"style":7824},[275,276],[220,8052,7432],{"className":8053},[275,276],[220,8055,572],{"className":8056},[604],[220,8058],{"className":8059,"style":609},[608],[220,8061,249],{"className":8062},[275,276],[220,8064],{"className":8065,"style":1696},[608],[220,8067,1624],{"className":8068},[1700],[220,8070],{"className":8071,"style":1696},[608],[220,8073,8075,8078,8081,8084,8087],{"className":8074},[266],[220,8076],{"className":8077,"style":6785},[270],[220,8079,2140],{"className":8080},[275],[220,8082],{"className":8083,"style":1696},[608],[220,8085,2276],{"className":8086},[1700],[220,8088],{"className":8089,"style":1696},[608],[220,8091,8093,8096,8099,8102,8105,8108,8111,8114,8117,8120],{"className":8092},[266],[220,8094],{"className":8095,"style":271},[270],[220,8097,249],{"className":8098},[275,276],[220,8100,7976],{"className":8101},[275,276],[220,8103,1915],{"className":8104},[275,276],[220,8106,7396],{"className":8107},[275,276],[220,8109,1190],{"className":8110},[281],[220,8112,249],{"className":8113},[275,276],[220,8115],{"className":8116,"style":1696},[608],[220,8118,1624],{"className":8119},[1700],[220,8121],{"className":8122,"style":1696},[608],[220,8124,8126,8129,8132],{"className":8125},[266],[220,8127],{"className":8128,"style":271},[270],[220,8130,2140],{"className":8131},[275],[220,8133,2110],{"className":8134},[288],"，那么如果",[220,8137,8139,8163],{"className":8138},[223],[220,8140,8142],{"className":8141},[227],[229,8143,8144],{"xmlns":231},[233,8145,8146,8160],{},[236,8147,8148,8150,8152,8154,8156,8158],{},[239,8149,1915],{},[239,8151,18],{},[239,8153,982],{},[239,8155,7789],{},[239,8157,6529],{},[239,8159,7396],{},[254,8161,8162],{"encoding":256},"maxPos",[220,8164,8166],{"className":8165,"ariaHidden":262},[261],[220,8167,8169,8172,8175,8178,8181],{"className":8168},[266],[220,8170],{"className":8171,"style":8005},[270],[220,8173,2025],{"className":8174},[275,276],[220,8176,982],{"className":8177},[275,276],[220,8179,7789],{"className":8180,"style":7824},[275,276],[220,8182,7432],{"className":8183},[275,276],"要小于",[220,8186,8188,8206],{"className":8187},[223],[220,8189,8191],{"className":8190},[227],[229,8192,8193],{"xmlns":231},[233,8194,8195,8203],{},[236,8196,8197,8199,8201],{},[239,8198,249],{},[243,8200,1624],{},[1097,8202,1627],{},[254,8204,8205],{"encoding":256},"n-1",[220,8207,8209,8227],{"className":8208,"ariaHidden":262},[261],[220,8210,8212,8215,8218,8221,8224],{"className":8211},[266],[220,8213],{"className":8214,"style":1855},[270],[220,8216,249],{"className":8217},[275,276],[220,8219],{"className":8220,"style":1696},[608],[220,8222,1624],{"className":8223},[1700],[220,8225],{"className":8226,"style":1696},[608],[220,8228,8230,8233],{"className":8229},[266],[220,8231],{"className":8232,"style":1874},[270],[220,8234,1627],{"className":8235},[275],"的话，就得确保",[220,8238,8240,8274],{"className":8239},[223],[220,8241,8243],{"className":8242},[227],[229,8244,8245],{"xmlns":231},[233,8246,8247,8271],{},[236,8248,8249,8251,8253,8255,8257,8259,8261,8263,8265,8267,8269],{},[239,8250,1915],{},[239,8252,18],{},[239,8254,982],{},[239,8256,7789],{},[239,8258,6529],{},[239,8260,7396],{},[243,8262,1106],{},[243,8264,1490],{},[239,8266,249],{},[243,8268,1624],{},[1097,8270,2140],{},[254,8272,8273],{"encoding":256},"maxPos\u003C=n-2",[220,8275,8277,8305,8323],{"className":8276,"ariaHidden":262},[261],[220,8278,8280,8283,8286,8289,8292,8295,8298,8302],{"className":8279},[266],[220,8281],{"className":8282,"style":7814},[270],[220,8284,2025],{"className":8285},[275,276],[220,8287,982],{"className":8288},[275,276],[220,8290,7789],{"className":8291,"style":7824},[275,276],[220,8293,7432],{"className":8294},[275,276],[220,8296],{"className":8297,"style":668},[608],[220,8299,8301],{"className":8300},[672],"\u003C=",[220,8303],{"className":8304,"style":668},[608],[220,8306,8308,8311,8314,8317,8320],{"className":8307},[266],[220,8309],{"className":8310,"style":1855},[270],[220,8312,249],{"className":8313},[275,276],[220,8315],{"className":8316,"style":1696},[608],[220,8318,1624],{"className":8319},[1700],[220,8321],{"className":8322,"style":1696},[608],[220,8324,8326,8329],{"className":8325},[266],[220,8327],{"className":8328,"style":1874},[270],[220,8330,2140],{"className":8331},[275],"，那么可得",[24,8334,8335,8440,8441,8550,8551,8654,8655,8702,8703,8753,8754,8804,8805,8808,8858,8859,8550,8862,31],{},[220,8336,8338,8374],{"className":8337},[223],[220,8339,8341],{"className":8340},[227],[229,8342,8343],{"xmlns":231},[233,8344,8345,8371],{},[236,8346,8347,8349,8351,8353,8355,8357,8359,8361,8363,8365,8367,8369],{},[239,8348,249],{},[239,8350,7976],{},[239,8352,1915],{},[239,8354,7396],{},[243,8356,1190],{"stretchy":245},[239,8358,249],{},[243,8360,1624],{},[1097,8362,2140],{},[243,8364,1195],{"stretchy":245},[243,8366,1106],{},[243,8368,1490],{},[1097,8370,1099],{},[254,8372,8373],{"encoding":256},"nums[n-2]\u003C=0",[220,8375,8377,8410,8431],{"className":8376,"ariaHidden":262},[261],[220,8378,8380,8383,8386,8389,8392,8395,8398,8401,8404,8407],{"className":8379},[266],[220,8381],{"className":8382,"style":271},[270],[220,8384,249],{"className":8385},[275,276],[220,8387,7976],{"className":8388},[275,276],[220,8390,1915],{"className":8391},[275,276],[220,8393,7396],{"className":8394},[275,276],[220,8396,1190],{"className":8397},[281],[220,8399,249],{"className":8400},[275,276],[220,8402],{"className":8403,"style":1696},[608],[220,8405,1624],{"className":8406},[1700],[220,8408],{"className":8409,"style":1696},[608],[220,8411,8413,8416,8419,8422,8425,8428],{"className":8412},[266],[220,8414],{"className":8415,"style":271},[270],[220,8417,2140],{"className":8418},[275],[220,8420,1195],{"className":8421},[288],[220,8423],{"className":8424,"style":668},[608],[220,8426,8301],{"className":8427},[672],[220,8429],{"className":8430,"style":668},[608],[220,8432,8434,8437],{"className":8433},[266],[220,8435],{"className":8436,"style":1874},[270],[220,8438,1099],{"className":8439},[275],"，题目中说",[220,8442,8444,8483],{"className":8443},[223],[220,8445,8447],{"className":8446},[227],[229,8448,8449],{"xmlns":231},[233,8450,8451,8480],{},[236,8452,8453,8455,8457,8459,8461,8463,8465,8467,8469,8471,8473,8475,8477],{},[1097,8454,1099],{},[243,8456,1106],{},[243,8458,1490],{},[239,8460,249],{},[239,8462,7976],{},[239,8464,1915],{},[239,8466,7396],{},[243,8468,1190],{"stretchy":245},[239,8470,914],{},[243,8472,1195],{"stretchy":245},[243,8474,1106],{},[243,8476,1490],{},[1097,8478,8479],{},"1000",[254,8481,8482],{"encoding":256},"0 \u003C= nums[i] \u003C= 1000",[220,8484,8486,8505,8541],{"className":8485,"ariaHidden":262},[261],[220,8487,8489,8493,8496,8499,8502],{"className":8488},[266],[220,8490],{"className":8491,"style":8492},[270],"height:0.6835em;vertical-align:-0.0391em;",[220,8494,1099],{"className":8495},[275],[220,8497],{"className":8498,"style":668},[608],[220,8500,8301],{"className":8501},[672],[220,8503],{"className":8504,"style":668},[608],[220,8506,8508,8511,8514,8517,8520,8523,8526,8529,8532,8535,8538],{"className":8507},[266],[220,8509],{"className":8510,"style":271},[270],[220,8512,249],{"className":8513},[275,276],[220,8515,7976],{"className":8516},[275,276],[220,8518,1915],{"className":8519},[275,276],[220,8521,7396],{"className":8522},[275,276],[220,8524,1190],{"className":8525},[281],[220,8527,914],{"className":8528},[275,276],[220,8530,1195],{"className":8531},[288],[220,8533],{"className":8534,"style":668},[608],[220,8536,8301],{"className":8537},[672],[220,8539],{"className":8540,"style":668},[608],[220,8542,8544,8547],{"className":8543},[266],[220,8545],{"className":8546,"style":1874},[270],[220,8548,8479],{"className":8549},[275],"，即",[220,8552,8554,8588],{"className":8553},[223],[220,8555,8557],{"className":8556},[227],[229,8558,8559],{"xmlns":231},[233,8560,8561,8585],{},[236,8562,8563,8565,8567,8569,8571,8573,8575,8577,8579,8581,8583],{},[239,8564,249],{},[239,8566,7976],{},[239,8568,1915],{},[239,8570,7396],{},[243,8572,1190],{"stretchy":245},[239,8574,249],{},[243,8576,1624],{},[1097,8578,2140],{},[243,8580,1195],{"stretchy":245},[243,8582,1490],{},[1097,8584,1099],{},[254,8586,8587],{"encoding":256},"nums[n-2]=0",[220,8589,8591,8624,8645],{"className":8590,"ariaHidden":262},[261],[220,8592,8594,8597,8600,8603,8606,8609,8612,8615,8618,8621],{"className":8593},[266],[220,8595],{"className":8596,"style":271},[270],[220,8598,249],{"className":8599},[275,276],[220,8601,7976],{"className":8602},[275,276],[220,8604,1915],{"className":8605},[275,276],[220,8607,7396],{"className":8608},[275,276],[220,8610,1190],{"className":8611},[281],[220,8613,249],{"className":8614},[275,276],[220,8616],{"className":8617,"style":1696},[608],[220,8619,1624],{"className":8620},[1700],[220,8622],{"className":8623,"style":1696},[608],[220,8625,8627,8630,8633,8636,8639,8642],{"className":8626},[266],[220,8628],{"className":8629,"style":271},[270],[220,8631,2140],{"className":8632},[275],[220,8634,1195],{"className":8635},[288],[220,8637],{"className":8638,"style":668},[608],[220,8640,1490],{"className":8641},[672],[220,8643],{"className":8644,"style":668},[608],[220,8646,8648,8651],{"className":8647},[266],[220,8649],{"className":8650,"style":1874},[270],[220,8652,1099],{"className":8653},[275],"，那么在此刻",[220,8656,8658,8681],{"className":8657},[223],[220,8659,8661],{"className":8660},[227],[229,8662,8663],{"xmlns":231},[233,8664,8665,8679],{},[236,8666,8667,8669,8671,8673,8675,8677],{},[239,8668,1915],{},[239,8670,18],{},[239,8672,982],{},[239,8674,7789],{},[239,8676,6529],{},[239,8678,7396],{},[254,8680,8162],{"encoding":256},[220,8682,8684],{"className":8683,"ariaHidden":262},[261],[220,8685,8687,8690,8693,8696,8699],{"className":8686},[266],[220,8688],{"className":8689,"style":8005},[270],[220,8691,2025],{"className":8692},[275,276],[220,8694,982],{"className":8695},[275,276],[220,8697,7789],{"className":8698,"style":7824},[275,276],[220,8700,7432],{"className":8701},[275,276],"是无法通过更新来比",[220,8704,8706,8723],{"className":8705},[223],[220,8707,8709],{"className":8708},[227],[229,8710,8711],{"xmlns":231},[233,8712,8713,8721],{},[236,8714,8715,8717,8719],{},[239,8716,249],{},[243,8718,1624],{},[1097,8720,2140],{},[254,8722,7885],{"encoding":256},[220,8724,8726,8744],{"className":8725,"ariaHidden":262},[261],[220,8727,8729,8732,8735,8738,8741],{"className":8728},[266],[220,8730],{"className":8731,"style":1855},[270],[220,8733,249],{"className":8734},[275,276],[220,8736],{"className":8737,"style":1696},[608],[220,8739,1624],{"className":8740},[1700],[220,8742],{"className":8743,"style":1696},[608],[220,8745,8747,8750],{"className":8746},[266],[220,8748],{"className":8749,"style":1874},[270],[220,8751,2140],{"className":8752},[275],"大的，即无法到达",[220,8755,8757,8774],{"className":8756},[223],[220,8758,8760],{"className":8759},[227],[229,8761,8762],{"xmlns":231},[233,8763,8764,8772],{},[236,8765,8766,8768,8770],{},[239,8767,249],{},[243,8769,1624],{},[1097,8771,1627],{},[254,8773,8205],{"encoding":256},[220,8775,8777,8795],{"className":8776,"ariaHidden":262},[261],[220,8778,8780,8783,8786,8789,8792],{"className":8779},[266],[220,8781],{"className":8782,"style":1855},[270],[220,8784,249],{"className":8785},[275,276],[220,8787],{"className":8788,"style":1696},[608],[220,8790,1624],{"className":8791},[1700],[220,8793],{"className":8794,"style":1696},[608],[220,8796,8798,8801],{"className":8797},[266],[220,8799],{"className":8800,"style":1874},[270],[220,8802,1627],{"className":8803},[275],"，而题目中说了，",[28,8806,8807],{},"保证可以到达",[220,8809,8811,8828],{"className":8810},[223],[220,8812,8814],{"className":8813},[227],[229,8815,8816],{"xmlns":231},[233,8817,8818,8826],{},[236,8819,8820,8822,8824],{},[239,8821,249],{},[243,8823,1624],{},[1097,8825,1627],{},[254,8827,8205],{"encoding":256},[220,8829,8831,8849],{"className":8830,"ariaHidden":262},[261],[220,8832,8834,8837,8840,8843,8846],{"className":8833},[266],[220,8835],{"className":8836,"style":1855},[270],[220,8838,249],{"className":8839},[275,276],[220,8841],{"className":8842,"style":1696},[608],[220,8844,1624],{"className":8845},[1700],[220,8847],{"className":8848,"style":1696},[608],[220,8850,8852,8855],{"className":8851},[266],[220,8853],{"className":8854,"style":1874},[270],[220,8856,1627],{"className":8857},[275],",因此",[28,8860,8861],{},"假设错误",[28,8863,7683],{},[49,8865,8868],{"className":8866,"code":8867,"language":54,"meta":55},[52],"class Solution {\npublic:\n    int jump(vector\u003Cint>& nums) {\n        int maxPos = 0,n = nums.size(),end = 0,step = 0;\n        for(int i = 0;i \u003C n - 1;i++)\n        {\n            if(i \u003C= maxPos)\n            {   //maxPos是当前能够最远到达的距离\n                maxPos = max(maxPos,i + nums[i]);\n                if(i == end){//end是当前这一步能够到达的边界\n                    end = maxPos;\n                    step++;\n                }\n            }\n        }\n        return step;\n    }\n};\n",[36,8869,8867],{"__ignoreMap":55},[10,8871,946],{"id":946},[14,8873,8875],{"id":8874},"爬楼梯",[18,8876,8874],{"href":8877,"rel":8878},"https://leetcode.cn/problems/climbing-stairs/",[22],[49,8880,8883],{"className":8881,"code":8882,"language":54,"meta":55},[52],"class Solution {\npublic:\n    int climbStairs(int n) {\n        vector\u003Cint> dp(n+1,0);\n        dp[1] = 1;\n        dp[0] = 1;\n        for(int i = 2; i \u003C= n; i ++)\n            dp[i] = dp[i-1] + dp[i-2];\n        return dp[n];\n    }\n};\n",[36,8884,8882],{"__ignoreMap":55},[14,8886,8888],{"id":8887},"杨辉三角",[18,8889,8887],{"href":8890,"rel":8891},"https://leetcode.cn/problems/pascals-triangle/",[22],[49,8893,8896],{"className":8894,"code":8895,"language":54,"meta":55},[52],"class Solution {\npublic:\n    vector\u003Cvector\u003Cint>> generate(int numRows) {\n        vector\u003Cvector\u003Cint>> ret(numRows);\n        for(int i = 0; i \u003C numRows;i++)\n        {\n            ret[i].resize(i+1);\n            ret[i][0] = ret[i][i] = 1;\n            for(int j = 1; j \u003C i;j++)\n            ret[i][j] = ret[i-1][j-1] + ret[i-1][j];\n        }\n        return ret;\n    }\n};\n",[36,8897,8895],{"__ignoreMap":55},[14,8899,8901],{"id":8900},"打家劫舍",[18,8902,8900],{"href":8903,"rel":8904},"https://leetcode.cn/problems/house-robber/",[22],[49,8906,8909],{"className":8907,"code":8908,"language":54,"meta":55},[52],"class Solution {\npublic:\n    int rob(vector\u003Cint>& nums) {\n        if(nums.empty()) return 0;\n\n        int size = nums.size();\n        if(size == 1) return nums[0];\n\n        vector\u003Cint> dp = vector\u003Cint> (size,0);\n        dp[0] = nums[0];\n        dp[1] = max(nums[0],nums[1]);\n        for(int i = 2; i \u003C size;i++)\n            dp[i] = max(dp[i-2]+nums[i],dp[i-1]);\n        return dp[size-1];\n        \n    }\n};\n",[36,8910,8908],{"__ignoreMap":55},[14,8912,8914],{"id":8913},"完全平方数",[18,8915,8913],{"href":8916,"rel":8917},"https://leetcode.cn/problems/perfect-squares/",[22],[24,8919,8920,8964,8965],{},[220,8921,8923,8943],{"className":8922},[223],[220,8924,8926],{"className":8925},[227],[229,8927,8928],{"xmlns":231},[233,8929,8930,8940],{},[236,8931,8932,8934,8936,8938],{},[239,8933,971],{},[243,8935,1190],{"stretchy":245},[239,8937,914],{},[243,8939,1195],{"stretchy":245},[254,8941,8942],{"encoding":256},"f[i]",[220,8944,8946],{"className":8945,"ariaHidden":262},[261],[220,8947,8949,8952,8955,8958,8961],{"className":8948},[266],[220,8950],{"className":8951,"style":271},[270],[220,8953,971],{"className":8954,"style":1006},[275,276],[220,8956,1190],{"className":8957},[281],[220,8959,914],{"className":8960},[275,276],[220,8962,1195],{"className":8963},[288]," 表示最少需要多少个数的平方来表示整数",[220,8966,8968,8981],{"className":8967},[223],[220,8969,8971],{"className":8970},[227],[229,8972,8973],{"xmlns":231},[233,8974,8975,8979],{},[236,8976,8977],{},[239,8978,914],{},[254,8980,914],{"encoding":256},[220,8982,8984],{"className":8983,"ariaHidden":262},[261],[220,8985,8987,8990],{"className":8986},[266],[220,8988],{"className":8989,"style":1261},[270],[220,8991,914],{"className":8992},[275,276],[24,8994,8995,8996,9039,9040,95],{},"这道题的关键在于深刻理解",[220,8997,8999,9018],{"className":8998},[223],[220,9000,9002],{"className":9001},[227],[229,9003,9004],{"xmlns":231},[233,9005,9006,9016],{},[236,9007,9008,9010,9012,9014],{},[239,9009,971],{},[243,9011,1190],{"stretchy":245},[239,9013,914],{},[243,9015,1195],{"stretchy":245},[254,9017,8942],{"encoding":256},[220,9019,9021],{"className":9020,"ariaHidden":262},[261],[220,9022,9024,9027,9030,9033,9036],{"className":9023},[266],[220,9025],{"className":9026,"style":271},[270],[220,9028,971],{"className":9029,"style":1006},[275,276],[220,9031,1190],{"className":9032},[281],[220,9034,914],{"className":9035},[275,276],[220,9037,1195],{"className":9038},[288],"是由前面的几个平方数加上最后一个",[28,9041,9042],{},"平方数",[24,9044,9045],{},"举例子 (n = 13)",[124,9047,9048,9054,9060,9066,9072,9075,9081],{},[127,9049,9050,9053],{},[36,9051,9052],{"code":9052},"f[1] = f[0] + 1 = 1"," → 1",[127,9055,9056,9059],{},[36,9057,9058],{"code":9058},"f[2] = f[1] + 1 = 2"," → 1+1",[127,9061,9062,9065],{},[36,9063,9064],{"code":9064},"f[3] = f[2] + 1 = 3"," → 1+1+1",[127,9067,9068,9071],{},[36,9069,9070],{"code":9070},"f[4] = min(f[3], f[0]) + 1 = 1"," → 4",[127,9073,9074],{},"…",[127,9076,9077,9080],{},[36,9078,9079],{"code":9079},"f[12] = min(f[11], f[8], f[3]) + 1 = 3"," → 4+4+4",[127,9082,9083,9086],{},[36,9084,9085],{"code":9085},"f[13] = min(f[12], f[9], f[4]) + 1 = 2"," → 4+9",[49,9088,9091],{"className":9089,"code":9090,"language":54,"meta":55},[52],"class Solution {\npublic:\n    int numSquares(int n) {\n        vector\u003Cint> f(n+1);\n        for(int i = 1;i \u003C= n;  i++)\n        {\n            int minn = INT_MAX;\n            //枚举最后一个平方数之前的最少平方数是多少\n            for(int j = 1;j * j \u003C= i;j++) minn = min(minn,f[i-j*j]);\n\n            f[i] = minn + 1;\n        }\n        return f[n];\n    }\n};\n",[36,9092,9090],{"__ignoreMap":55},[14,9094,9096],{"id":9095},"零钱兑换",[18,9097,9095],{"href":9098,"rel":9099},"https://leetcode.cn/problems/coin-change/",[22],{"title":55,"searchDepth":9101,"depth":9101,"links":9102},4,[9103,9110,9116,9120,9125,9132,9139,9147,9151,9156],{"id":12,"depth":9104,"text":12,"children":9105},2,[9106,9108,9109],{"id":16,"depth":9107,"text":16},3,{"id":60,"depth":9107,"text":60},{"id":210,"depth":9107,"text":215},{"id":470,"depth":9104,"text":470,"children":9111},[9112,9113,9114,9115],{"id":473,"depth":9107,"text":473},{"id":507,"depth":9107,"text":507},{"id":546,"depth":9107,"text":546},{"id":936,"depth":9107,"text":936},{"id":5079,"depth":9104,"text":5079,"children":9117},[9118,9119],{"id":5082,"depth":9107,"text":5082},{"id":5095,"depth":9107,"text":5095},{"id":5108,"depth":9104,"text":5108,"children":9121},[9122,9123,9124],{"id":5111,"depth":9107,"text":5116},{"id":5270,"depth":9107,"text":5270},{"id":5449,"depth":9107,"text":5449},{"id":5473,"depth":9104,"text":5473,"children":9126},[9127,9128,9129,9130,9131],{"id":5476,"depth":9107,"text":5476},{"id":5489,"depth":9107,"text":5489},{"id":5572,"depth":9107,"text":5572},{"id":5611,"depth":9107,"text":5611},{"id":5624,"depth":9107,"text":5624},{"id":6204,"depth":9104,"text":6204,"children":9133},[9134,9135,9136,9137,9138],{"id":6207,"depth":9107,"text":6212},{"id":6323,"depth":9107,"text":6323},{"id":6339,"depth":9107,"text":6339},{"id":6846,"depth":9107,"text":6851},{"id":7185,"depth":9107,"text":7185},{"id":7208,"depth":9104,"text":7208,"children":9140},[9141,9142,9143,9144,9145,9146],{"id":7211,"depth":9107,"text":7211},{"id":7224,"depth":9107,"text":7224},{"id":7237,"depth":9107,"text":7237},{"id":7256,"depth":9107,"text":7256},{"id":7265,"depth":9107,"text":7270},{"id":7279,"depth":9107,"text":7279},{"id":7286,"depth":9104,"text":7286,"children":9148},[9149,9150],{"id":7289,"depth":9107,"text":7289},{"id":7302,"depth":9107,"text":7307},{"id":7344,"depth":9104,"text":7344,"children":9152},[9153,9154,9155],{"id":7347,"depth":9107,"text":7347},{"id":7360,"depth":9107,"text":7360},{"id":7647,"depth":9107,"text":7652},{"id":946,"depth":9104,"text":946,"children":9157},[9158,9159,9160,9161,9162],{"id":8874,"depth":9107,"text":8874},{"id":8887,"depth":9107,"text":8887},{"id":8900,"depth":9107,"text":8900},{"id":8913,"depth":9107,"text":8913},{"id":9095,"depth":9107,"text":9095},[9164],"算法","2025-08-22 10:15:04","​​力扣Hot100​​热门算法题库的题解，涵盖了​哈希、双指针、滑动窗口、子串、普通数组、矩阵、链表、回溯、贪心算法、动态规划​​等核心算法与数据结构。",false,"md",null,{},true,"/2025/lkhot100",{"text":9174,"minutes":9175,"time":9176,"words":9177},"36 min read",35.125,2107500,7025,{"title":5,"description":9166},{"loc":9172},"posts/2025/lkhot100",[9182],"力扣","zvTdH5aX9AwjTsRFkkr51AZRX8eZKdXzm7NK4YKs_Pw",[9185,9190],{"title":9186,"path":9187,"stem":9188,"date":9189,"type":9169,"children":-1},"复习——数学篇","/2025/review-math","posts/2025/review-math","2025-08-20 21:45:38",{"title":9191,"path":9192,"stem":9193,"date":9194,"type":9169,"children":-1},"C++面向对象与YOLO目标检测","/2025/c++andyolo","posts/2025/c++andyolo","2025-09-07 18:48:51",1758979162729]